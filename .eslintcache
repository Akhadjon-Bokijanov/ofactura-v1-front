[{"C:\\HISOBXONA\\on_doc\\src\\cabinet\\contract\\view\\view.component.jsx":"1","C:\\HISOBXONA\\on_doc\\src\\cabinet\\empowerment\\index.component.jsx":"2","C:\\HISOBXONA\\on_doc\\src\\cabinet\\contract\\index.router.jsx":"3","C:\\HISOBXONA\\on_doc\\src\\cabinet\\tty\\index.router.jsx":"4","C:\\HISOBXONA\\on_doc\\src\\cabinet\\tty\\view\\view.component.jsx":"5","C:\\HISOBXONA\\on_doc\\src\\index.js":"6","C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.selector.js":"7","C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.action.js":"8","C:\\HISOBXONA\\on_doc\\src\\components\\font-awesome-icons\\font-awesome-icons.js":"9","C:\\HISOBXONA\\on_doc\\src\\cabinet\\index.component.jsx":"10","C:\\HISOBXONA\\on_doc\\src\\frontend\\index.router.jsx":"11","C:\\HISOBXONA\\on_doc\\src\\components\\header\\header.component.jsx":"12","C:\\HISOBXONA\\on_doc\\src\\App.jsx":"13","C:\\HISOBXONA\\on_doc\\src\\utils\\home.config.provider.js":"14","C:\\HISOBXONA\\on_doc\\src\\components\\rich-text-parser\\rich-text-parser.component.jsx":"15","C:\\HISOBXONA\\on_doc\\src\\cabinet\\home\\home.component.jsx":"16","C:\\HISOBXONA\\on_doc\\src\\components\\dyna-grid\\dyna-grid.component.jsx":"17","C:\\HISOBXONA\\on_doc\\src\\cabinet\\act\\create\\create.component.jsx":"18","C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\buyer-form.component.jsx":"19","C:\\HISOBXONA\\on_doc\\src\\cabinet\\empowerment\\create\\create.component.jsx":"20","C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\home\\home.component.jsx":"21","C:\\HISOBXONA\\on_doc\\src\\utils\\main.js":"22","C:\\HISOBXONA\\on_doc\\src\\admin\\admin.router.jsx":"23","C:\\HISOBXONA\\on_doc\\src\\cabinet\\right-sidebar\\right-sidebar.component.jsx":"24","C:\\HISOBXONA\\on_doc\\src\\admin\\notification\\form.component.jsx":"25","C:\\HISOBXONA\\on_doc\\src\\redux\\store.js":"26","C:\\HISOBXONA\\on_doc\\src\\redux\\root-saga.js":"27","C:\\HISOBXONA\\on_doc\\src\\cabinet\\act\\index.router.jsx":"28","C:\\HISOBXONA\\on_doc\\src\\utils\\e-imzo.js":"29","C:\\HISOBXONA\\on_doc\\src\\components\\left-sidebar\\left-sidebar.component.jsx":"30","C:\\HISOBXONA\\on_doc\\src\\env.js":"31","C:\\HISOBXONA\\on_doc\\src\\cabinet\\notifications\\notifications.component.jsx":"32","C:\\HISOBXONA\\on_doc\\src\\cabinet\\account-form\\account-form.component.jsx":"33","C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.action-types.js":"34","C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.reducer.js":"35","C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\index.component.jsx":"36","C:\\HISOBXONA\\on_doc\\src\\cabinet\\tty\\create\\create.component.jsx":"37","C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\view\\view.component.jsx":"38","C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\create\\create.component.jsx":"39","C:\\HISOBXONA\\on_doc\\src\\cabinet\\act\\view\\view.component.jsx":"40","C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\person-fetch\\person-fetch.component.jsx":"41","C:\\HISOBXONA\\on_doc\\src\\components\\admin-card\\admin-card.component.jsx":"42","C:\\HISOBXONA\\on_doc\\src\\components\\data-sheet-custom-selector\\custom-selector.component.jsx":"43","C:\\HISOBXONA\\on_doc\\src\\components\\data-sheet-custom-measure-selector\\custom-selector.component.jsx":"44","C:\\HISOBXONA\\on_doc\\src\\cabinet\\contract\\create\\create.component.jsx":"45","C:\\HISOBXONA\\on_doc\\src\\reportWebVitals.js":"46","C:\\HISOBXONA\\on_doc\\src\\frontend\\login\\login.component.jsx":"47","C:\\HISOBXONA\\on_doc\\src\\components\\language-dropdown\\locale-dropdown.jsx":"48","C:\\HISOBXONA\\on_doc\\src\\frontend\\choose_company\\choose-company.component.jsx":"49","C:\\HISOBXONA\\on_doc\\src\\cabinet\\profile\\profile.component.jsx":"50","C:\\HISOBXONA\\on_doc\\src\\cabinet\\password-change\\password-change.component.jsx":"51","C:\\HISOBXONA\\on_doc\\src\\redux\\root-reducer.js":"52","C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\seller-form.component.jsx":"53","C:\\HISOBXONA\\on_doc\\src\\cabinet\\user-products\\user-products.component.jsx":"54","C:\\HISOBXONA\\on_doc\\src\\frontend\\home\\home.component.jsx":"55","C:\\HISOBXONA\\on_doc\\src\\translate.js":"56","C:\\HISOBXONA\\on_doc\\src\\utils\\utils.js":"57"},{"size":794,"mtime":1613136178081,"results":"58","hashOfConfig":"59"},{"size":692,"mtime":1613135948606,"results":"60","hashOfConfig":"59"},{"size":773,"mtime":1613135956409,"results":"61","hashOfConfig":"59"},{"size":701,"mtime":1613136021785,"results":"62","hashOfConfig":"59"},{"size":769,"mtime":1613136250855,"results":"63","hashOfConfig":"59"},{"size":996,"mtime":1615900532271,"results":"64","hashOfConfig":"59"},{"size":491,"mtime":1615447375754,"results":"65","hashOfConfig":"59"},{"size":542,"mtime":1615899265605,"results":"66","hashOfConfig":"59"},{"size":1372,"mtime":1615446024668,"results":"67","hashOfConfig":"59"},{"size":1777,"mtime":1615463207501,"results":"68","hashOfConfig":"59"},{"size":1192,"mtime":1615443501768,"results":"69","hashOfConfig":"59"},{"size":3778,"mtime":1616148094689,"results":"70","hashOfConfig":"59"},{"size":2122,"mtime":1613210730993,"results":"71","hashOfConfig":"59"},{"size":19049,"mtime":1615959880377,"results":"72","hashOfConfig":"59"},{"size":360,"mtime":1594933859435,"results":"73","hashOfConfig":"59"},{"size":5237,"mtime":1615958648169,"results":"74","hashOfConfig":"59"},{"size":16626,"mtime":1613651776397,"results":"75","hashOfConfig":"59"},{"size":15030,"mtime":1613196626550,"results":"76","hashOfConfig":"59"},{"size":13673,"mtime":1615972168026,"results":"77","hashOfConfig":"59"},{"size":17259,"mtime":1613199419145,"results":"78","hashOfConfig":"59"},{"size":2539,"mtime":1615958912549,"results":"79","hashOfConfig":"59"},{"size":11919,"mtime":1615964032572,"results":"80","hashOfConfig":"59"},{"size":1184,"mtime":1613366375823,"results":"81","hashOfConfig":"59"},{"size":6419,"mtime":1615957967940,"results":"82","hashOfConfig":"59"},{"size":7325,"mtime":1613367087580,"results":"83","hashOfConfig":"59"},{"size":675,"mtime":1610456259499,"results":"84","hashOfConfig":"59"},{"size":118,"mtime":1610456948140,"results":"85","hashOfConfig":"59"},{"size":704,"mtime":1613135776022,"results":"86","hashOfConfig":"59"},{"size":28470,"mtime":1611378147043,"results":"87","hashOfConfig":"59"},{"size":1580,"mtime":1615441013822,"results":"88","hashOfConfig":"59"},{"size":593,"mtime":1616148462685,"results":"89","hashOfConfig":"59"},{"size":1765,"mtime":1613469507764,"results":"90","hashOfConfig":"59"},{"size":4322,"mtime":1615463356228,"results":"91","hashOfConfig":"59"},{"size":286,"mtime":1615899273049,"results":"92","hashOfConfig":"59"},{"size":1018,"mtime":1616150520842,"results":"93","hashOfConfig":"59"},{"size":714,"mtime":1611818145343,"results":"94","hashOfConfig":"59"},{"size":23703,"mtime":1612874366487,"results":"95","hashOfConfig":"59"},{"size":789,"mtime":1613135597311,"results":"96","hashOfConfig":"59"},{"size":21762,"mtime":1615972493109,"results":"97","hashOfConfig":"59"},{"size":769,"mtime":1613135804003,"results":"98","hashOfConfig":"59"},{"size":2499,"mtime":1613036584651,"results":"99","hashOfConfig":"59"},{"size":708,"mtime":1611212188734,"results":"100","hashOfConfig":"59"},{"size":1081,"mtime":1614079114541,"results":"101","hashOfConfig":"59"},{"size":3280,"mtime":1614077431713,"results":"102","hashOfConfig":"59"},{"size":18597,"mtime":1613049829368,"results":"103","hashOfConfig":"59"},{"size":362,"mtime":1606761669970,"results":"104","hashOfConfig":"59"},{"size":11758,"mtime":1616159849047,"results":"105","hashOfConfig":"59"},{"size":2499,"mtime":1615957280514,"results":"106","hashOfConfig":"59"},{"size":3251,"mtime":1616159512748,"results":"107","hashOfConfig":"59"},{"size":945,"mtime":1615464453144,"results":"108","hashOfConfig":"59"},{"size":2395,"mtime":1615464724670,"results":"109","hashOfConfig":"59"},{"size":406,"mtime":1610456428391,"results":"110","hashOfConfig":"59"},{"size":6675,"mtime":1615970523386,"results":"111","hashOfConfig":"59"},{"size":294,"mtime":1615463543894,"results":"112","hashOfConfig":"59"},{"size":257,"mtime":1611228286162,"results":"113","hashOfConfig":"59"},{"size":1131,"mtime":1615974553232,"results":"114","hashOfConfig":"59"},{"size":349,"mtime":1616074885400,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"gy4thq",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"127"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"127"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"159"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"151"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"127"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"180"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"133"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"227"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"133"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"133"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"133"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\HISOBXONA\\on_doc\\src\\cabinet\\contract\\view\\view.component.jsx",[],["261","262"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\empowerment\\index.component.jsx",[],["263","264"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\contract\\index.router.jsx",[],["265","266"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\tty\\index.router.jsx",[],["267","268"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\tty\\view\\view.component.jsx",[],["269","270"],"C:\\HISOBXONA\\on_doc\\src\\index.js",[],["271","272"],"C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.selector.js",[],"C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.action.js",[],"C:\\HISOBXONA\\on_doc\\src\\components\\font-awesome-icons\\font-awesome-icons.js",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\index.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\frontend\\index.router.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\components\\header\\header.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\App.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\utils\\home.config.provider.js",["273"],"import React from \"react\";\r\nimport i18n from \"../translate\";\r\n\r\nexport const get_home_config = doc => {\r\n\r\n    const t = i18n.t.bind(i18n)\r\n\r\n    switch (doc) {\r\n\r\n        case \"user-products\":\r\n            return {\r\n                title: t(\"Maxsulotlarim\"),\r\n                createTitle: t(\"Maxsulotlarni yuklash\"),\r\n                gridSourceUrl: \"/api/v1/products\",\r\n                createUrl: \"/cabinet/products\",\r\n                gridConfig: {\r\n                    deleteRequestPath: 'api/v1/user-products',\r\n                    deleteConfirmText: t(\"Shu productni ochirilsinmi?\"),\r\n                    actions: {\r\n                        delete: true,\r\n                    },\r\n                    allColumns: [{\r\n                        title: t(\"Katalog kodi\"),\r\n                        dataIndex: 'CatalogCode',\r\n                        isSearchable: true,\r\n                        width: 200\r\n                    },\r\n                    {\r\n                        title: t(\"Klass kodi\"),\r\n                        dataIndex: 'ClassCode',\r\n                        isSearchable: true,\r\n                        width: 200\r\n                    },\r\n                    {\r\n                        title: t(\"Nomi\"),\r\n                        dataIndex: 'CatalogName',\r\n                        isSearchable: true,\r\n                        width: 300,\r\n                        \r\n\r\n                    },\r\n                    ]\r\n                }\r\n            }\r\n\r\n        case 'notification':\r\n            return {\r\n                title: \"Notifications\",\r\n                createTitle: \"Notification yaratish\",\r\n                createUrl: \"/admin/notification/create\",\r\n                gridSourceUrl: \"/api/v1/notifications\",\r\n                gridConfig: {\r\n                    deleteRequestPath: 'api/v1/notifications',\r\n                    viewActionPath: '/admin/notification/view',\r\n                    editActionPath: '/admin/notification/edit',\r\n                    deleteConfirmText: \"Shu notification ochirilsinmi?\",\r\n                    actions: {\r\n                        edit: true,\r\n                        delete: true,\r\n                        view: true\r\n                    },\r\n                    allColumns: [{\r\n                            title: \"Sarlavha\",\r\n                            dataIndex: 'title_uz',\r\n                            isSearchable: true,\r\n                            width: 300\r\n                        },\r\n                        {\r\n                            title: \"Mazmuni\",\r\n                            dataIndex: 'body_uz',\r\n                            isSearchable: true,\r\n                            width: 400\r\n                        },\r\n                        {\r\n                            title: \"Muhimligi\",\r\n                            dataIndex: 'importance',\r\n                            isFilterable: true,\r\n                            width: 100,\r\n                            filters: [\r\n                                { value: 1, text: \"1 - Uncha muxim emas\" },\r\n                                { value: 2, text: \"2 - Muxim emas\" },\r\n                                { value: 3, text: \"3 - Muxim\" },\r\n                                { value: 4, text: \"4 - Muximroq\" },\r\n                                { value: 5, text: \"5 - O'ta muxim\" },\r\n                            ]\r\n\r\n                        },\r\n                        {\r\n                            title: \"Holati\",\r\n                            dataIndex: \"isActive\",\r\n                            isFilterable: true,\r\n                            width: 100,\r\n                            filters: [\r\n                                { value: 0, text: \"Aktiv emas\" },\r\n                                { value: 1, text: \"Aktiv\" },\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n\r\n        case 'act':\r\n            return {\r\n                title: \"Aktlar\",\r\n                createTitle: \"Akt yaratish\",\r\n                createUrl: \"/cabinet/act/create\",\r\n                gridSourceUrl: \"/api/v1/acts\",\r\n                gridConfig: {\r\n                    deleteRequestPath: 'api/v1/atcs',\r\n                    viewActionPath: '/cabinet/act/view',\r\n                    editActionPath: '/cabinet/act/edit',\r\n                    deleteConfirmText: \"Shu akt ochirilsinmi?\",\r\n                    actions: {\r\n                        edit: true,\r\n                        delete: true,\r\n                        view: true\r\n                    },\r\n                    allColumns: [{\r\n                            title: \"Akt №\",\r\n                            dataIndex: 'actNo',\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: \"Kontrkt №\",\r\n                            dataIndex: 'contractNo',\r\n                            isSearchable: true,\r\n                            width: 100\r\n                        },\r\n                        {\r\n                            title: \"Oluvchi\",\r\n                            dataIndex: 'buyerName',\r\n                            isSearchable: true,\r\n                            width: 150\r\n                        },\r\n                        {\r\n                            title: \"Oluvchi STIR\",\r\n                            dataIndex: \"buyerTin\",\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: \"Sotuvchi\",\r\n                            dataIndex: 'sellerName',\r\n                            isSearchable: true,\r\n                            width: 150\r\n                        },\r\n                        {\r\n                            title: \"Sotuvchi STIR\",\r\n                            dataIndex: \"sellerTin\",\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: \"Holati\",\r\n                            dataIndex: 'status',\r\n                            isFilterable: true,\r\n                            filters: [\r\n                                { value: 1, text: \"1-Saqlangan\" },\r\n                                { value: 2, text: \"2-Imzo kutilmoqda\" },\r\n                                { value: 3, text: \"3-Jo'natilgan\" },\r\n                                { value: 4, text: \"4-Xatolik yuzbergan\" },\r\n                                { value: 5, text: \"5-Qaytarib yuborilgan\" },\r\n                                { value: 6, text: \"6-Qabul qilingan\" },\r\n                                { value: 7, text: \"7-Muaffaqiyatli\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            title: 'Yaratilgan sanasi',\r\n                            dataIndex: \"created_at\",\r\n                            dataType: 'date',\r\n                        },\r\n                    ]\r\n                }\r\n            }\r\n\r\n        case 'contract':\r\n            return {\r\n                title: \"Shartnomalar\",\r\n                createTitle: \"Shartnoma yaratish\",\r\n                createUrl: \"/cabinet/contract/create\",\r\n                gridSourceUrl: \"/api/v1/contracts\",\r\n                gridConfig: {\r\n                    deleteRequestPath: 'api/v1/contracts',\r\n                    viewActionPath: '/cabinet/contracts/view',\r\n                    editActionPath: '/cabinet/contract/edit',\r\n                    deleteConfirmText: \"Shu kontrakt ochirilsinmi?\",\r\n                    actions: {\r\n                        edit: true,\r\n                        delete: true,\r\n                        view: true\r\n                    },\r\n                    allColumns: [{\r\n                            title: \"Kontrkt №\",\r\n                            dataIndex: 'contractNo',\r\n                            isSearchable: true,\r\n                            width: 100\r\n                        },\r\n                        {\r\n                            title: \"Oluvchi\",\r\n                            dataIndex: 'buyerName',\r\n                            isSearchable: true,\r\n                            width: 150\r\n                        },\r\n                        {\r\n                            title: \"Oluvchi STIR\",\r\n                            dataIndex: \"buyerTin\",\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: \"Sotuvchi\",\r\n                            dataIndex: 'sellerName',\r\n                            isSearchable: true,\r\n                            width: 150\r\n                        },\r\n                        {\r\n                            title: \"Sotuvchi STIR\",\r\n                            dataIndex: \"sellerTin\",\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: \"Holati\",\r\n                            dataIndex: 'status',\r\n                            isFilterable: true,\r\n                            filters: [\r\n                                { value: 1, text: \"1-Saqlangan\" },\r\n                                { value: 2, text: \"2-Imzo kutilmoqda\" },\r\n                                { value: 3, text: \"3-Jo'natilgan\" },\r\n                                { value: 4, text: \"4-Xatolik yuzbergan\" },\r\n                                { value: 5, text: \"5-Qaytarib yuborilgan\" },\r\n                                { value: 6, text: \"6-Qabul qilingan\" },\r\n                                { value: 7, text: \"7-Muaffaqiyatli\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            title: 'Yaratilgan sanasi',\r\n                            dataIndex: \"created_at\",\r\n                            dataType: 'date',\r\n                        },\r\n                    ]\r\n                }\r\n            }\r\n\r\n        case \"empowerment\":\r\n            return {\r\n                title: \"Ishonchnomalar\",\r\n                createTitle: \"Ishonchnoma yaratish\",\r\n                createUrl: \"/cabinet/empowerment/create\",\r\n                gridSourceUrl: \"/api/v1/empowerments\",\r\n                gridConfig: {\r\n                    deleteRequestPath: 'api/v1/empowerments',\r\n                    viewActionPath: '/cabinet/empowerment/view',\r\n                    editActionPath: '/cabinet/empowerment/edit',\r\n                    deleteConfirmText: \"Shu ishonchnoma ochirilsinmi?\",\r\n                    actions: {\r\n                        edit: true,\r\n                        delete: true,\r\n                        view: true\r\n                    },\r\n                    allColumns: [{\r\n                            title: \"Ishonchnoma №\",\r\n                            dataIndex: 'empowermentNo',\r\n                            isSearchable: true,\r\n                            width: 100\r\n                        },\r\n                        {\r\n                            title: \"Kontrakt №\",\r\n                            dataIndex: 'contractNo',\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: \"Oluvchi\",\r\n                            dataIndex: 'buyerName',\r\n                            isSearchable: true,\r\n                            width: 150\r\n                        },\r\n                        {\r\n                            title: \"Oluvchi STIR\",\r\n                            dataIndex: \"buyerTin\",\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: \"Sotuvchi\",\r\n                            dataIndex: 'sellerName',\r\n                            isSearchable: true,\r\n                            width: 150\r\n                        },\r\n                        {\r\n                            title: \"Sotuvchi STIR\",\r\n                            dataIndex: \"sellerTin\",\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: \"Holati\",\r\n                            dataIndex: 'status',\r\n                            isFilterable: true,\r\n                            filters: [\r\n                                { value: 1, text: \"1-Saqlangan\" },\r\n                                { value: 2, text: \"2-Imzo kutilmoqda\" },\r\n                                { value: 3, text: \"3-Jo'natilgan\" },\r\n                                { value: 4, text: \"4-Xatolik yuzbergan\" },\r\n                                { value: 5, text: \"5-Qaytarib yuborilgan\" },\r\n                                { value: 6, text: \"6-Qabul qilingan\" },\r\n                                { value: 7, text: \"7-Muaffaqiyatli\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            title: 'Yaratilgan sanasi',\r\n                            dataIndex: \"created_at\",\r\n                            dataType: 'date',\r\n                        },\r\n                    ]\r\n                }\r\n            }\r\n\r\n        case 'tty':\r\n            return {\r\n                title: \"Tovar transport yo'lxati\",\r\n                createTitle: \"TTY yaratish\",\r\n                createUrl: \"/cabinet/tty/create\",\r\n                gridSourceUrl: \"/api/v1/ttys\",\r\n                gridConfig: {\r\n                    deleteRequestPath: 'api/v1/ttys',\r\n                    viewActionPath: '/cabinet/tty/view',\r\n                    editActionPath: '/cabinet/tty/edit',\r\n                    deleteConfirmText: \"Shu TTY ochirilsinmi?\",\r\n                    actions: {\r\n                        edit: true,\r\n                        delete: true,\r\n                        view: true\r\n                    },\r\n                    allColumns: [{\r\n                            title: \"TTY №\",\r\n                            dataIndex: 'wayBillNo',\r\n                            isSearchable: true,\r\n                            width: 100\r\n                        },\r\n                        {\r\n                            title: \"Oluvchi\",\r\n                            dataIndex: 'buyerName',\r\n                            isSearchable: true,\r\n                            width: 150\r\n                        },\r\n                        {\r\n                            title: \"Oluvchi STIR\",\r\n                            dataIndex: \"buyerTin\",\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: \"Sotuvchi\",\r\n                            dataIndex: 'sellerName',\r\n                            isSearchable: true,\r\n                            width: 150\r\n                        },\r\n                        {\r\n                            title: \"Sotuvchi STIR\",\r\n                            dataIndex: \"sellerTin\",\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: \"Holati\",\r\n                            dataIndex: 'state',\r\n                            isFilterable: true,\r\n                            filters: [\r\n                                { value: 1, text: \"1-Saqlangan\" },\r\n                                { value: 2, text: \"2-Imzo kutilmoqda\" },\r\n                                { value: 3, text: \"3-Jo'natilgan\" },\r\n                                { value: 4, text: \"4-Xatolik yuzbergan\" },\r\n                                { value: 5, text: \"5-Qaytarib yuborilgan\" },\r\n                                { value: 6, text: \"6-Qabul qilingan\" },\r\n                                { value: 7, text: \"7-Muaffaqiyatli\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            title: 'Yaratilgan sanasi',\r\n                            dataIndex: \"created_at\",\r\n                            dataType: 'date',\r\n                        },\r\n                    ]\r\n                }\r\n            }\r\n\r\n\r\n        default:\r\n            return {\r\n                title: t(\"Hisob fakturalar\"),\r\n                createTitle: t(\"Faktura yaratish\"),\r\n                createUrl: \"/cabinet/factura/create\",\r\n                gridSourceUrl: \"/api/v1/facturas\",\r\n                gridConfig: {\r\n                    deleteRequestPath: 'api/v1/facturas',\r\n                    viewActionPath: '/cabinet/factura/view',\r\n                    editActionPath: '/cabinet/factura/edit',\r\n                    deleteConfirmText: t(\"Shu faktura ochirilsinmi?\"),\r\n                    actions: {\r\n                        edit: true,\r\n                        delete: true,\r\n                        view: true\r\n                    },\r\n                    allColumns: [{\r\n                            title: t(\"Faktura №\"),\r\n                            dataIndex: 'facturaNo',\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: t(\"Kontrakt №\"),\r\n                            dataIndex: 'contractNo',\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: t(\"Kontragent\"),\r\n                            dataIndex: 'buyerName',\r\n                            isSearchable: true,\r\n                            width: 150\r\n                        },\r\n                        {\r\n                            title: t(\"Kontragent\") + \" \" + t(\"STIR\"),\r\n                            dataIndex: \"buyerTin\",\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: \"Sotuvchi\",\r\n                            dataIndex: 'sellerName',\r\n                            isSearchable: true,\r\n                            width: 150\r\n                        },\r\n                        {\r\n                            title: \"Sotuvchi STIR\",\r\n                            dataIndex: \"sellerTin\",\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: t(\"Holati\"),\r\n                            dataIndex: 'status',\r\n                            isFilterable: true,\r\n                            filters: [\r\n                                { value: 1, text: \"1-Saqlangan\" },\r\n                                { value: 2, text: \"2-Imzo kutilmoqda\" },\r\n                                { value: 3, text: \"3-Jo'natilgan\" },\r\n                                { value: 4, text: \"4-Xatolik yuzbergan\" },\r\n                                { value: 5, text: \"5-Qaytarib yuborilgan\" },\r\n                                { value: 6, text: \"6-Qabul qilingan\" },\r\n                                { value: 7, text: \"7-Muaffaqiyatli\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            title: t('Yaratilgan sana'),\r\n                            dataIndex: \"created_at\",\r\n                            dataType: 'date',\r\n                        },\r\n                    ]\r\n                }\r\n            }\r\n    }\r\n}",["274","275"],"C:\\HISOBXONA\\on_doc\\src\\components\\rich-text-parser\\rich-text-parser.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\home\\home.component.jsx",["276","277","278"],"C:\\HISOBXONA\\on_doc\\src\\components\\dyna-grid\\dyna-grid.component.jsx",["279","280"],"import React, { useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Tooltip, Input, Button, Space, Popconfirm, message } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './dyna-grid.style.scss';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n//import { setItemToBeEdited, triggerFetchStart, triggerActionWithPayload } from '../../redux/admin/admin.actions';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n//import { selectCurrentUser } from '../../redux/user/user.selector';\r\nimport { \r\n  EditOutlined, \r\n  DeleteOutlined, \r\n  EyeOutlined, \r\n  SearchOutlined, \r\n  FullscreenOutlined, \r\n  FullscreenExitOutlined, \r\n  } from '@ant-design/icons';\r\n//import { RESOURCES_PATH } from '../../env';\r\nimport RichTextParser from '../rich-text-parser/rich-text-parser.component';\r\nimport { useEffect } from 'react';\r\n\r\nconst DynaGrid = ({\r\n  loading,                //loading state of table\r\n  currentUser,            //Provided by the comonent\r\n  match,                  //Provided by the comonent\r\n  setItemToBeEdited,      //Provided by the comonent\r\n  triggerAction,          //Provided by the comonent, redux action consumer\r\n  triggerActionWithPayload, //Provided by comonent, redux action and payload consumer\r\n  title,                  //title of DynaGrid\r\n  //dataSource,             //data source for the component\r\n  config:{                //Config object\r\n    dataSourcePath,       //data source path for the table should be pagination\r\n    addElementViewPath,     //add element to the core\r\n    deleteRequestPath,    //delete request path for API server \r\n    replaceInViewPath,\r\n    approveRequestPath,   //approve request path for API server \r\n    viewActionPath,       //UI route to view the element\r\n    editActionPath,\r\n    resultsViewPath,      //view path to see the results\r\n    triggerReload,        //action to triggere when delete, approve is done\r\n    triggerWithPayload,   //Trigger action with payload\r\n    payload,              //Payload to trigger action\r\n    deleteConfirmText,    //Delete confirm text\r\n    actions,              //Object of actions to allow\r\n                          //  {\r\n                          //    add: true,\r\n                          //    edit: true,\r\n                          //    delete: true,\r\n                          //    approve: true,\r\n                          //    view: true\r\n                          //  }\r\n    allColumns,           // array of columns to show\r\n                          //  [\r\n                          //    dataIndex: name of the data in the source object  \r\n                          //    dataType: \"image\" | to show image, \r\n                          //              \"array\" | to show array of strings\r\n                          //               \"rich-text\" | to show rich text format\r\n                          //              \"object\" | if dataIndex value is object,\r\n                          //                    then you have to provide \"items\" array to show certain properties of object\r\n                          //               \"rich-text\": if dataIndex value includes HTML tags \r\n                          //    isSearchable: true | false \r\n                          //    isFilterable: true | false\r\n                          //    filters: [\"item1\", \"item2\"]  filter options\r\n                          //  ]\r\n  }\r\n})=> {\r\n\r\n\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchedColumn, setSearchedColumn] = useState('');\r\n  const [filteredInfo, setFilteredInfo] = useState(null);\r\n  const [isFulliew, toggleFullView] = useState(false);\r\n  \r\n  const [pagination, setPagination] = useState({current: 1, pageSize: 10})\r\n  const [totalDataCount, setTotalDataCount] = useState(0);\r\n  const [ajaxDataSource, setAjaxDataSource] = useState([])\r\n  const [loadingSource, setLoadingResource] = useState(false);\r\n\r\n\r\n  let searchInput = null;\r\n\r\n  //#region PAGINATION PART\r\n  useEffect(()=>{\r\n\r\n    let url = `${dataSourcePath}&page=${pagination.current}&limit=${pagination.pageSize}${searchText ? `&search=${searchText}&searchFrom=${searchedColumn}` : ''}`\r\n\r\n    setLoadingResource(true)\r\n    axios({\r\n      url: url.replace(/[ ]+/g, \"\"),\r\n      method: \"GET\"\r\n    }).then(res=>{\r\n\r\n      if (Array.isArray(res.data.data)){\r\n        setAjaxDataSource(res.data.data);\r\n        setTotalDataCount(res.data.total)\r\n      }else{\r\n        console.log(res);\r\n      }\r\n      setLoadingResource(false)\r\n    }).catch(error=>{\r\n      console.log(error);\r\n      setLoadingResource(false)\r\n    })\r\n  }, [pagination, dataSourcePath, searchText, searchedColumn])\r\n  //#endregion PAGINATION PART\r\n\r\n  \r\n  //#region PopConfirm functions\r\n  const confirmDelete = (record) => {\r\n\r\n    //setVisible(false);\r\n    \r\n    axios({\r\n      url: `/${deleteRequestPath}/${record.id}`, \r\n      method: 'delete',\r\n      data: {creator: record.creator}\r\n      })\r\n      .then(res=>{\r\n        \r\n        if(triggerReload){\r\n          triggerAction(triggerReload)\r\n        }\r\n\r\n        if(triggerWithPayload){\r\n          triggerActionWithPayload(triggerActionWithPayload, payload)\r\n        }\r\n        //setAction(Math.random())\r\n        message.success(`${record.id} is deleted!`);\r\n      }).catch(error=>{\r\n        message.error('Failed to delete!');\r\n        console.error(error);\r\n        \r\n      })\r\n  };\r\n\r\n  const confirmApprove = (record) => {\r\n\r\n    //setVisible(false);\r\n    axios.patch(`/${approveRequestPath}/${record.id}`, \r\n      {userId: currentUser.id},)\r\n    .then(res=>{\r\n      if(triggerReload){\r\n        triggerAction(triggerReload)\r\n      }\r\n      \r\n      if(triggerWithPayload){\r\n        triggerActionWithPayload(triggerActionWithPayload, payload)\r\n      }\r\n      //setAction(Math.random())\r\n      message.success(`${record.id} is approved!`);\r\n    }).catch(error=>{\r\n      message.error('Failed to approve!');\r\n      console.error(error);\r\n      \r\n    })\r\n  };\r\n\r\n  const cancel = () => {\r\n    //setVisible(false);\r\n    message.error('Action cancelled!');\r\n  };\r\n\r\n  //#endregion\r\n\r\n  //#region getColumnSearchProps\r\n  const getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            searchInput = node;\r\n          }}\r\n          placeholder={`${dataIndex} qidirish`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Qidirish\r\n          </Button>\r\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Qaytarish\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n    record[dataIndex] \r\n      ? record[dataIndex].toString().toLowerCase().includes(value.toString().toLowerCase()) \r\n      : false,\r\n      onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => searchInput.select());\r\n      }\r\n    },\r\n    render: text =>\r\n      searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={ text ? text.toString() : null}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  //#endregion\r\n\r\n  //#region handleSearch\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n\r\n    setSearchText(selectedKeys[0]);\r\n    setSearchedColumn(dataIndex)\r\n\r\n  };\r\n\r\n  const handleReset = clearFilters => {\r\n    console.log(clearFilters)\r\n    \r\n    clearFilters();\r\n    setSearchText('')\r\n  \r\n  };\r\n\r\n  const handleChange = (pagination, filters, sorter) => {\r\n    console.log('Various parameters', pagination, filters, sorter);\r\n    setPagination(pagination)\r\n    setFilteredInfo(filters);\r\n    //setSortedInfo(sorter);\r\n\r\n  };\r\n  //#endregion\r\n\r\n  const columns =[]\r\n\r\n  //#region column config\r\n  allColumns.forEach((element, index)=> {\r\n    columns.push(\r\n      {\r\n        dataIndex: element.dataIndex,\r\n        title: element.title,\r\n        key: element.dataIndex,\r\n        width: element.width ? element.width : 90,\r\n        ellipsis: element.dataIndex==='detail' || element.dataIndex ==='description' ? true : false,     \r\n      });\r\n\r\n    if(element.isSearchable) \r\n    {\r\n        columns[index] = {...columns[index], ...getColumnSearchProps(element.dataIndex)}\r\n    }\r\n\r\n    if(element.isFilterable)\r\n    {\r\n      columns[index] = {...columns[index], \r\n        filters: element.filters.map(univer=>({text: univer.text ?? univer, value: univer.value ?? univer})), \r\n        onFilter: (value, record) => {\r\n          setSearchText(value.toString().toLowerCase())\r\n          setSearchedColumn(element.dataIndex)\r\n          return ajaxDataSource;\r\n        }}//record[element.dataIndex].toString().toLowerCase().includes(value.toString().toLowerCase()),}\r\n    }\r\n\r\n    if(element.isBoolean){\r\n      columns[index] = {...columns[index], \r\n      dataIndex: null,\r\n      render: (record)=><div>{record[element.dataIndex] ? 1 : 0}</div>}\r\n    }\r\n\r\n    if(element.isBoolean && element.isFilterable){\r\n      columns[index] = {...columns[index], \r\n      dataIndex: null,\r\n      filters: [{text: 1, value: true}, {text: 0, value: false}], \r\n      onFilter: (value, record) =>!!record[element.dataIndex] === !!value,\r\n      render: (record)=><div>{record[element.dataIndex] ? 1 : 0}</div>}\r\n    }\r\n    \r\n    // if(element.dataType === 'image'){\r\n    //   columns[index] = { \r\n    //     ...columns[index],\r\n    //     dataIndex: null,\r\n    //     width: 170,\r\n    //     render: (record)=><div style={{textAlign: \"center\"}}>\r\n    //       <img style={{width: 80, height: 80 }} src={`${RESOURCES_PATH}/${record[element.dataIndex]}`} alt={`${record[element.dataIndex]}`} />\r\n    //     </div>\r\n    //   }\r\n    // }\r\n\r\n    if(element.dataType === 'rich-text'){\r\n      columns[index] = { \r\n        ...columns[index],\r\n        dataIndex: null,\r\n        render: (record)=><RichTextParser text={record[element.dataIndex]} />\r\n      }\r\n    }\r\n\r\n    if(element.dataType === 'object'){\r\n      columns[index]={\r\n        ...columns[index],\r\n        dataIndex: null,\r\n        render: record=><div style={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap'}}>\r\n          {\r\n            record[element.dataIndex] \r\n          ? element.items.map((field, index)=><div key={`sub-dyna-field-${index}`}>{`${field}: `}{ record[element.dataIndex][field] }</div>)\r\n            : \"Nothing found!\"\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n\r\n    if(element.dataType === 'array'){\r\n      columns[index]={\r\n        ...columns[index],\r\n        dataIndex: null,\r\n        onFilter: (value, record) => record[element.dataIndex].includes(value),\r\n        render: record=><div>\r\n          {\r\n            record[element.dataIndex].map(item => <span style={{ backgroundColor: '#4870c7', color: 'white', padding: 3, marginRight: 5, marginBottom: 5, borderRadius: 3 }}>{item} </span>)\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n\r\n    if (element.dataType === \"date\") {\r\n      columns[index]={\r\n        ...columns[index],\r\n        width: 150,\r\n        dataIndex: null,\r\n        render: record=><span>{ moment(record[element.dataIndex]).format('MMMM Do YYYY, H:mm:ss') }</span>\r\n      }\r\n    }\r\n\r\n    if(element.dataType === 'array-count'){\r\n      columns[index]={\r\n        ...columns[index],\r\n        dataIndex: null,\r\n        onFilter: (value, record) => record[element.dataIndex].includes(value),\r\n        render: record=><div>\r\n          {\r\n            record[element.dataIndex].length\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n\r\n  });\r\n    //#endregion\r\n    \r\n    //Actions\r\n    columns.push({\r\n      title: \" \",\r\n      key: 'actions',\r\n      width: 90,\r\n      fixed: 'right',\r\n      render: (record) => \r\n        <div className=\"dyna-grid-actions\">\r\n          {actions.edit \r\n          ? <Tooltip placement=\"left\" title=\"O'zgartirish\">\r\n              <Link \r\n                to={`${editActionPath}/${record.id}`}>\r\n                  <EditOutlined style={{color: 'blue'}}/>\r\n              </Link>\r\n            </Tooltip>\r\n          : null\r\n          }\r\n\r\n          {actions.delete \r\n          ? <Tooltip placement=\"bottom\" title=\"O'chirish\">\r\n              <Popconfirm\r\n                title={ deleteConfirmText ? deleteConfirmText : \"O'chirilsin?\" }\r\n                onConfirm={()=>{confirmDelete(record)}}\r\n                onCancel={cancel}\r\n                okText=\"Ha\"\r\n                cancelText=\"Yo'q\"\r\n              >\r\n              <DeleteOutlined style={{color: 'red'}} />\r\n            </Popconfirm>\r\n          </Tooltip>\r\n          : null\r\n          }\r\n          \r\n          {actions.approve \r\n            ? <Tooltip placement=\"bottom\" title=\"Tasdiqlash\">\r\n                <Popconfirm\r\n                  title=\"Approve this news?\"\r\n                  onConfirm={()=>{confirmApprove(record)}}\r\n                  onCancel={cancel}\r\n                  okText=\"Yes\"\r\n                  cancelText=\"No\"\r\n                >\r\n                  <FontAwesomeIcon style={{color: 'green'}} icon=\"check-circle\" />\r\n                </Popconfirm>\r\n              </Tooltip>\r\n          : null\r\n          }\r\n\r\n          {actions.view \r\n          ? <Tooltip placement=\"bottom\" title=\"Ko'rish\" >\r\n                <Link to={`${ replaceInViewPath \r\n                  ? viewActionPath.replace(`{${replaceInViewPath}}`, record[replaceInViewPath]) \r\n                  : viewActionPath}/${record.id}`}><EyeOutlined /></Link>\r\n              </Tooltip>\r\n          : null  \r\n          }\r\n\r\n          {actions.chart\r\n          ?\r\n            <Tooltip placement=\"bottomLeft\" title=\"Natijalar\">\r\n              <Link to={`${resultsViewPath}/${record.id}`}>\r\n                <FontAwesomeIcon icon=\"chart-line\" style={{color: '#fb8c00'}} />\r\n              </Link>\r\n            </Tooltip>\r\n          : null\r\n          }\r\n\r\n          {\r\n            actions.addElement\r\n            ?\r\n              <Tooltip placement=\"bottomLeft\" title=\"Qoshimcha  qoshish\">\r\n                <Link to={`${match.path}/${addElementViewPath}/${record.id}`}>\r\n                  <FontAwesomeIcon style={{color: \"#e91e63\"}} icon=\"plus-circle\" />\r\n                </Link>\r\n              </Tooltip>\r\n            :null\r\n          }\r\n        </div>,\r\n    })\r\n\r\n    return (\r\n    <div className={`dyna-grid-main-container ${isFulliew ? 'akhadjon-dyna-grid-full-view' : null}`} >\r\n      <div onDoubleClick={()=>toggleFullView(!isFulliew)} \r\n        \r\n        style={{marginTop: 40, marginBottom: 10, display: \"flex\", justifyContent: \"space-between\"}}>\r\n        <Button \r\n          \r\n          onClick={()=>{toggleFullView(!isFulliew)}} \r\n          type=\"primary\" \r\n          icon={isFulliew ? <FullscreenExitOutlined /> : <FullscreenOutlined />}>\r\n            { isFulliew ? \"Kichraytirish\" : \"Kengaytirish\" }\r\n          </Button>\r\n        <div>\r\n          <h3>{title}</h3>\r\n        </div>\r\n      </div>\r\n      <Table\r\n        \r\n        loading={loadingSource}\r\n        rowKey=\"id\"\r\n        onChange={handleChange} \r\n        bordered \r\n        pagination={pagination}\r\n        columns={columns} \r\n          dataSource={ajaxDataSource} \r\n        scroll={{ x: allColumns.length * 120, }}//y: window.innerHeight - window.innerHeight / 13 }} \r\n        pagination={{position: ['bottomCenter'], total: totalDataCount}}\r\n      />\r\n    </div>);\r\n  }\r\n\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  //currentUser: selectCurrentUser,\r\n})\r\n\r\nconst dispatchMapStateToPros = (dispatch)=>({\r\n  //setItemToBeEdited: (item)=>dispatch(setItemToBeEdited(item)),\r\n  //triggerAction: (action)=>dispatch(triggerFetchStart(action)),\r\n  //triggerActionWithPayload: (action, payload)=>dispatch(triggerActionWithPayload(action, payload))\r\n})\r\n\r\nexport default connect(mapStateToProps, dispatchMapStateToPros)(withRouter(DynaGrid));",["281","282"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\act\\create\\create.component.jsx",["283","284","285","286","287","288"],"import React, { useState, useEffect } from 'react';\r\nimport 'react-datasheet/lib/react-datasheet.css';\r\nimport Datasheet from 'react-datasheet';\r\nimport SelectEditor from '../../../components/data-sheet-custom-selector/custom-selector.component';\r\nimport SelectMeasureEditor from '../../../components/data-sheet-custom-measure-selector/custom-selector.component';\r\nimport { Button, Input, Form, Row, Col, DatePicker, Select, Upload, message } from 'antd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './create.style.scss';\r\nimport axios from 'axios';\r\nimport BuyerForm from '../../common/buyer-form.component';\r\nimport SellerForm from '../../common/seller-form.component';\r\nimport { connect } from 'react-redux';\r\nimport { selectCurrentUser, selectToken } from '../../../redux/user/user.selector';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport moment from 'moment';\r\nimport { \r\n  FullscreenOutlined, \r\n  FullscreenExitOutlined, \r\n  } from '@ant-design/icons';\r\nimport { convertProductsToGrid, FIRST_ACT_GRID_ROW } from '../../../utils/main';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\n\r\nexport const setActClient = (seller, client) => {\r\n  return `Биз қуйида имзо чекувчилар, \"${seller ?? \"___________\"}\" бир томондан,бундан кейин Пудратчи деб номланади ва \"${client ?? '__________'}\" бошқа томондан, бундан кейин Буюртмачи деб номланади, иш Буюртмачининг талабларига мувофиқ тўлиқ бажарилганлиги тўғрисида акт туздик.`;\r\n\r\n}\r\n\r\nconst ActForm = ({ token, match, user })=> {\r\n\r\n  const [form] = Form.useForm();\r\n  const { actId } = match.params;\r\n  const [initialData, setInitialData] = useState({actText: setActClient(user.name)})\r\n  const [isLoading, setIsloading] = useState(false);\r\n\r\n \r\n\r\n  useEffect(()=>{\r\n    if(actId){\r\n\r\n      //fetch fatura data\r\n      axios({\r\n        url: `/api/v1/acts/${actId}`,\r\n        method: \"GET\",\r\n      }).then(res=>{\r\n        let data = res.data;\r\n        data.contractDate=moment(data.contractDate);\r\n        data.created_at=moment(data.created_at);\r\n        data.actDate=moment(data.actDate);\r\n        data.updated_at=moment(data.updated_at);\r\n        console.log(data);\r\n  \r\n        setInitialData(res.data);\r\n        form.resetFields();\r\n        setGrid(convertProductsToGrid(res.data.act_products, 'act'));\r\n      }).catch(err=>{\r\n        console.log(err);\r\n      })\r\n      //end fetch factura data;\r\n    }\r\n  }, [])\r\n  \r\n\r\n  const validateMessages = {\r\n    required: 'Bu maydon majburiy!',\r\n    types: {\r\n      email: '${label} is not a valid email!',\r\n      number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n      range: '${label} must be between ${min} and ${max}',\r\n    },\r\n    \r\n  };\r\n\r\n  const [fullView, toglleFullView] = useState(false)\r\n\r\n\r\n  const [grid, setGrid] = useState([\r\n    FIRST_ACT_GRID_ROW,\r\n    [\r\n      { readOnly: true, value: 1 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //2 measure\r\n      { value: '' },                                          //3 amount\r\n      { value: \"\", },                                         //4 price\r\n      { value: '', readOnly: true,}                           //6 total\r\n    ], \r\n    [\r\n      { readOnly: true, value: 2 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //2 measure\r\n      { value: '' },                                          //3 amount\r\n      { value: \"\", },                                         //4 price\r\n      { value: '', readOnly: true,}                           //6 total\r\n    ],  \r\n    [\r\n      { readOnly: true, value: 3 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //2 measure\r\n      { value: '' },                                          //3 amount\r\n      { value: \"\", },                                         //4 price\r\n      { value: '', readOnly: true,}                           //6 total\r\n    ], \r\n    [\r\n      { readOnly: true, value: 4 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //2 measure\r\n      { value: '' },                                          //3 amount\r\n      { value: \"\", },                                         //4 price\r\n      { value: '', readOnly: true,}                           //6 total\r\n    ], \r\n  ])\r\n\r\n\r\n\r\n  //#region data-sheet methods\r\n  const handleRemoveRow = (rowId)=>{\r\n    console.log(rowId)\r\n    grid.splice(rowId, 1)\r\n    setGrid([...grid])\r\n  }\r\n\r\n  const valueRenderer = cell => cell.value;\r\n  \r\n  const onCellsChanged = changes => {\r\n    changes.forEach(({ cell, row, col, value }, index) => {\r\n        //this sets changed values\r\n        grid[row][col] = { ...grid[row][col], value };\r\n        \r\n\r\n        //Lets calculate\r\n        grid[row][5] = { ...grid[row][5], value: grid[row][3].value && grid[row][4].value ? grid[row][3].value * grid[row][4].value : 0};\r\n     \r\n    });\r\n     setGrid([...grid]);\r\n  };\r\n\r\n  const handleAddRow = ()=>{\r\n    \r\n    const sampleRow = [\r\n        { readOnly: true, value: grid.length },                 //0 ordNo\r\n        { value: \"\" },                                          //1 product name\r\n        { value: \"\", dataEditor:  SelectMeasureEditor },        //2 measure\r\n        { value: '' },                                          //3 amount\r\n        { value: \"\", },                                         //4 price\r\n        { value: '', readOnly: true,}                           //5 total\r\n      ];\r\n    \r\n\r\n    let newgrid = [...grid, sampleRow];\r\n\r\n     setGrid(newgrid)\r\n  }\r\n\r\n  const onContextMenu = (e, cell, i, j) =>\r\n    cell.readOnly ? e.preventDefault() : null;\r\n//#endregion\r\n  \r\n  //#region form methods\r\n\r\n  const handleSubmit = (values)=>{\r\n    setIsloading(true);\r\n    console.log(values)\r\n    if(actId){\r\n      axios({\r\n        url:`/api/v1/acts/${actId}`,\r\n        method: 'PATCH',\r\n        data: {act: values, products: grid}\r\n      }).then(res=>{\r\n        setIsloading(false);\r\n        if(res.data.ok){\r\n          message.success(\"Akt yangilandi!\");\r\n        }\r\n        else{\r\n          message.error(\"Akt yangilashda xatolik!\");\r\n        }\r\n        console.log(res)\r\n      }).catch(err=>{\r\n        setIsloading(false)\r\n        message.error(\"Akt yangilashda xatolik!\");\r\n        console.log(err)\r\n      })\r\n    } else{\r\n      axios({\r\n        url:'/api/v1/acts',\r\n        method: 'post',\r\n        data: {act: values, products: grid}\r\n      }).then(res=>{\r\n        setIsloading(false)\r\n        if(res.data.ok){\r\n          message.success(\"Akt yaratildi!\");\r\n        }\r\n        else{\r\n          message.error(\"Akt yaratishda xatolik!\");\r\n        }\r\n        console.log(res)\r\n      }).catch(err=>{\r\n        setIsloading(false)\r\n        message.error(\"Akt yaratishda xatolik!\");\r\n        console.log(err)\r\n      })\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  const handleImportExecl =(value)=>{\r\n    console.log(\"me fired\")\r\n\r\n    if(value.file.status==\"done\"){\r\n      \r\n      const { response } = value.file\r\n\r\n      response.excel.forEach((element, index)=>{\r\n        element[0].value = index + 1;\r\n        element[0].readOnly = true;\r\n        element[2].dataEditor = SelectEditor;\r\n        element[4].dataEditor = SelectMeasureEditor;\r\n      })\r\n\r\n      setGrid([grid[0], ...response.excel])\r\n      console.log(response)\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n  \r\n  return (\r\n    <div style={{padding: 15}}>\r\n      <Form\r\n        initialValues={initialData}\r\n        form={form}\r\n        name=\"factura\"\r\n        onFinish = {handleSubmit}\r\n        scrollToFirstError\r\n        validateMessages={validateMessages}\r\n      >\r\n\r\n      <div className=\"factura-data-sheet-container\">\r\n      <h3>Akt yaratish</h3>\r\n       \r\n      <Row justify=\"space-between\">\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                rules={[{required: true}]}\r\n                key=\"dyna-form-facutura-no\"\r\n                name=\"actNo\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder=\"Akt raqami\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Akt raqami</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                key=\"dyna-form-item-inn-date\"\r\n                name=\"actDate\"\r\n                rules={[{required: true}]}>\r\n                  <DatePicker                \r\n                    size=\"large\"\r\n                    placeholder=\"Akt sanasi\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Akt sanasi</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                rules={[{required: true}]}\r\n                key=\"dyna-form-item-contract-n0\"\r\n                name=\"contractNo\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder=\"Shartnoma raqami\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Shartnoma raqami</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                rules={[{required: true}]}\r\n                key=\"dyna-form-item-contract-date\"\r\n                name=\"contractDate\">\r\n                  <DatePicker\r\n                    size=\"large\"\r\n                    placeholder=\"Shartnoma sanasi\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Shartnoma sanasi</span>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n      </div>\r\n\r\n      <div className=\"factura-data-sheet-container\">\r\n        \r\n        <Row justify=\"space-between\">\r\n        <Col md={11}>  \r\n          <SellerForm form={form} docType=\"act\" />\r\n        </Col>\r\n\r\n        <Col md={11}>\r\n          <BuyerForm form={ form } docType=\"act\" />\r\n        </Col>\r\n      </Row>\r\n      </div>\r\n      \r\n      <div className=\"factura-data-sheet-container\">\r\n            <h3>Akt mazmuni</h3>\r\n              <Form.Item name=\"actText\">\r\n                <TextArea size=\"large\" rows={4} />\r\n              </Form.Item>\r\n          </div>\r\n\r\n      <div className={`factura-data-sheet-container ${fullView ? 'grid-full-view' : null}`}>\r\n        <div style={{marginBottom: 10, display: 'flex', justifyContent:'space-between'}}>\r\n          <div style={{display: 'flex'}}>\r\n              <Upload \r\n                headers={{\r\n                  Authorization: \"Bearer \" + token\r\n                }}\r\n                multiple={false}\r\n                action=\"http://127.0.0.1:8000/api/v1/factura-products/read-excel\"\r\n                accept=\".xlsx, .xls\" \r\n                onChange={handleImportExecl}>\r\n                \r\n                  <Button style={{marginRight: 10}}>Exceldan yuklash</Button>\r\n               \r\n              </Upload>\r\n              <a target=\"_blank\" href=\"../../../excels/on_doc_factura_products.xlsx\" download>\r\n                <Button >\r\n                  Shablon yuklash\r\n                </Button>\r\n              </a>\r\n            </div>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={fullView ? <FullscreenExitOutlined /> : <FullscreenOutlined />} \r\n              onClick={()=>toglleFullView(!fullView)}>\r\n                { fullView ? \"Kichraytirish\" : \"Kengaytirish\" }\r\n            </Button>\r\n        </div>\r\n        \r\n      <div style={{overflowX: 'auto'}} >\r\n        <div style={{width: '100%'}}>\r\n          <Datasheet\r\n            data={ grid}\r\n            valueRenderer={ valueRenderer}\r\n            onContextMenu={ onContextMenu}\r\n            onCellsChanged={ onCellsChanged}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Button \r\n        size=\"large\" \r\n        style={{marginTop: 20, marginRight: 7, width: 220}} \r\n        type=\"primary\" \r\n        icon={<FontAwesomeIcon \r\n          style={{marginRight: 7}} \r\n          icon={[\"far\", \"plus-square\"]} />} \r\n        onClick={  handleAddRow }>Qo'shish</Button>\r\n      \r\n      <Button \r\n        size=\"large\" \r\n        style={{marginTop: 20, width: 220 }} \r\n        danger\r\n        type=\"primary\" \r\n        icon={<FontAwesomeIcon \r\n          style={{marginRight: 7}} \r\n          icon={[\"far\", \"trash-alt\"]} />} \r\n        onClick={ ()=>{ if(grid.length>1){ handleRemoveRow(grid.length-1) }}  }>Oxirgi qatorni o'chirish</Button>\r\n      </div>\r\n          \r\n          \r\n\r\n        <div className=\"factura-data-sheet-container\">\r\n\r\n<Row justify=\"space-between\">\r\n  <Col md={24} >\r\n    <Form.Item>\r\n      <Form.Item \r\n    key=\"selenote-field\"\r\n    name=\"notes\">\r\n      <Input\r\n        size=\"large\"\r\n        placeholder=\"Қўшимча майдон\" />\r\n    </Form.Item>\r\n      <span className=\"custom-input-label-1\">Қўшимча майдон</span>\r\n    </Form.Item>\r\n  </Col>\r\n  \r\n</Row>\r\n</div>\r\n          <div className=\"factura-data-sheet-container\">\r\n            <Row justify=\"space-around\">\r\n              <Col >\r\n                <Button \r\n                  loading={isLoading}\r\n                  primary\r\n                  htmlType=\"submit\"\r\n                  className=\"factra-action-btns save-btn\" \r\n                  size=\"large\"\r\n                  icon={<FontAwesomeIcon icon=\"save\" className=\"factura-action-btn-icons\"  />}>\r\n                    Сақлаб қолиш\r\n                  </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button \r\n                  className=\"factra-action-btns sing-btn\" \r\n                  size=\"large\"\r\n                  icon={<FontAwesomeIcon icon=\"signature\" className=\"factura-action-btn-icons\" />}>\r\n                    Имзолаш\r\n                  </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button \r\n                  icon={<FontAwesomeIcon icon=\"ban\" className=\"factura-action-btn-icons\" />} \r\n                  danger \r\n                  className=\"factra-action-btns\" \r\n                  size=\"large\">\r\n                    Бекор қилиш\r\n                  </Button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n\r\n          <Form.Item\r\n          name=\"actId\"\r\n          key=\"act-id\"\r\n          >\r\n            <Input type=\"hidden\" />\r\n          </Form.Item>\r\n\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  token: selectToken,\r\n  user: selectCurrentUser\r\n})\r\n\r\nexport default connect(mapStateToProps)(ActForm);","C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\buyer-form.component.jsx",["289"],"import React, { Fragment } from 'react';\r\nimport { Input, Form, Row, Col, message, Switch, Select, Button } from 'antd';\r\nimport { CloseOutlined, CheckOutlined } from '@ant-design/icons';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport PersonFetch from './person-fetch/person-fetch.component';\r\nimport { setActClient } from '../act/create/create.component';\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst BuyerForm = ({ form, docType, remove, fieldList }) => {\r\n\r\n  const {t} = useTranslation();\r\n  const [isFacturaSingleSided, setIsFacturaSingleSided] = useState(false);\r\n  const [buyerBranches, setBuyerBranches] = useState([]);\r\n\r\n  const handleSingleSided = (value) => {\r\n    setIsFacturaSingleSided(value)\r\n  }\r\n\r\n  const handleFetchBuyer = e => {\r\n    console.log(e.target.value)\r\n    if (!isNaN(e.target.value)) {\r\n      if (e.target.value > 100000000 && e.target.value <= 999999999) {\r\n        //delete axios.defaults.headers.common[\"Authorization\"]\r\n        axios({\r\n          url: \r\n          //\"http://cabinet.ahadjon.onlinefactura.uz/api/get-company\",\r\n          `/api/v1/companies/tin/${e.target.value}`,\r\n          method: \"GET\",\r\n          // headers:{\r\n          //   \"Content-Type\":\"application/x-www-form-urlencoded\"\r\n          // },\r\n          data: {\r\n            tin: e.target.value\r\n          }\r\n        }).then(res => {\r\n          //setBuyerData(res.data)\r\n          const { \r\n            tin, \r\n            accountant, \r\n            account, \r\n            address, \r\n            phone, \r\n            name, \r\n            fullName, \r\n            mfo, \r\n            directorName,\r\n            directorTin, \r\n            regCode } = res.data;\r\n\r\n          let data = {\r\n            buyerTin: tin,\r\n            buyerAccountant: accountant,\r\n            buyerAccount: account,\r\n            buyerAddress: address,\r\n            buyerMobilePhone: phone,\r\n            buyerName: name ?? fullName,\r\n            buyerMfo: mfo,\r\n            buyerDirector: directorName,\r\n            buyerDirectorTin: directorTin,\r\n            buyerVatRegCode: regCode\r\n          }\r\n\r\n          if(docType===\"act\"){\r\n            form.setFieldsValue({\r\n              actText: setActClient(form.getFieldValue(\"sellerName\"), name ?? fullName)\r\n            })\r\n          }\r\n\r\n\r\n          if(fieldList){\r\n            let fetcherData = form.getFieldValue(\"contract_partners\");\r\n            \r\n            fetcherData[fieldList.name] = {...fetcherData[fieldList.name], ...data}\r\n\r\n            setBuyerBranches(res.data.branches ?? []);\r\n\r\n            form.setFieldsValue({contract_partners: [...fetcherData]})\r\n          }else{\r\n            \r\n            form.setFieldsValue(data)\r\n          }\r\n         \r\n        }).catch(err => {\r\n          console.log(err)\r\n        })\r\n      } else {\r\n        form.setFieldsValue({\r\n          buyerAccountant: null,\r\n          buyerAccount: null,\r\n          buyerAddress: null,\r\n          buyerMobilePhone: null,\r\n          buyerName: null,\r\n          buyerMfo: null,\r\n          buyerDirector: null,\r\n          buyerVatRegCode: null\r\n        })\r\n      }\r\n    } else {\r\n      message.warning(t(\"STIR notog'ri kiritildi!\"))\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <h3>{t(\"Kontragent ma'lumotlari\")}</h3>\r\n      {\r\n        docType ===\"contract\"\r\n        ? <PersonFetch \r\n          form={form} \r\n          pTin={fieldList ? [fieldList.name,\"buyerPhysicalTin\"] : \"buyerPhysicalTin\"} \r\n          pName={fieldList ? [fieldList.name, \"buyerPhysicalFio\"] : \"buyerPhysicalFio\"} \r\n          tinLabel={t(\"Jis. Shaxs STIR\")} nameLabel={t(\"Jis. Shaxs FIO\")} tinCol={11} nameCol={11} />\r\n        : null\r\n      }\r\n      \r\n      <Row justify=\"space-between\">\r\n        <Col md={docType !== \"factura\" ? 24 : 11}>\r\n          <Form.Item>\r\n            <Form.Item\r\n              key={fieldList ? `dyna-form-item-inn-buyer-${fieldList.key}` : \"dyna-form-item-inn-buyer\"}\r\n              name={fieldList ? [fieldList.name,\"buyerTin\"] : \"buyerTin\"}\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input\r\n                onChange={handleFetchBuyer}\r\n                size=\"large\"\r\n                placeholder={t(\"STIR\")} />\r\n            </Form.Item>\r\n            <span className=\"custom-input-label-1\">{t(\"STIR\")}</span>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col md={docType !== \"factura\" ? 0 : 11}>\r\n          <h4>{t(\"Bir tomonlama fakturami?\")}</h4>\r\n          <Switch\r\n            onChange={handleSingleSided}\r\n            checkedChildren={<CheckOutlined />}\r\n            unCheckedChildren={<CloseOutlined />}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      {\r\n        isFacturaSingleSided ?\r\n          <div>\r\n            <h3>{t(\"Turi\")}</h3>\r\n            <Form.Item\r\n              key=\"sigle-sided-factura-type-1\"\r\n              name={fieldList ? [fieldList.name,\"singleSidedType\"] : \"singleSidedType\"}\r\n              >\r\n              <Form.Item>\r\n                <Select bordered={false} size=\"large\">\r\n                  <Option value={1}>На физ. лицо</Option>\r\n                  <Option value={2}> На экспорт</Option>\r\n                  <Option value={3}>На импорт</Option>\r\n                  <Option value={4}>Реализация, связанная с гос. секретом</Option>\r\n                  <Option value={5}>Финансовые услуги</Option>\r\n                </Select>\r\n\r\n              </Form.Item>\r\n              <span className=\"custom-input-label-1\">{t(\"Kontragent turi\")}</span>\r\n            </Form.Item>\r\n          </div>\r\n          : null\r\n      }\r\n\r\n      {\r\n        !isFacturaSingleSided ?\r\n          <div>\r\n            { docType==\"contract\" ? null : <h3>{t(\"Hamkor korxonasi\")}</h3> }\r\n            <Form.Item>\r\n              <Form.Item\r\n                rules={[{ required: true }]}\r\n                key=\"buyer-name-1-buyerName\"\r\n                name={fieldList ? [fieldList.name,\"buyerName\"] : \"buyerName\"}\r\n              >\r\n                <Input\r\n                  onChange={val=>{\r\n                    form.setFieldsValue({\r\n                      actText: setActClient(form.getFieldValue(\"sellerName\"), val.target.value)})\r\n                    }\r\n                  }\r\n                  size=\"large\"\r\n                  placeholder={t(\"Nomi\")} />\r\n              </Form.Item>\r\n              <span className=\"custom-input-label-1\">{t(\"Nomi\")}</span>\r\n            </Form.Item>\r\n            {\r\n              docType !== \"act\" ?\r\n                <Fragment>\r\n                  {\r\n                    docType === \"contract\" || docType === \"empowerment\"\r\n                      ? null\r\n                      : <Form.Item>\r\n                        <Form.Item\r\n                          key=\"seler-account-vatreg\"\r\n                          name={fieldList ? [fieldList.name, \"buyerVatRegCode\"] : \"buyerVatRegCode\"}\r\n                        >\r\n                          <Input\r\n                            size=\"large\"\r\n                            placeholder={t(\"QQS tolovchi registratsiya raqami\")}\r\n                          />\r\n                        </Form.Item>\r\n                        <span className=\"custom-input-label-1\">{t(\"QQS tolovchi registratsiya raqami\")}</span>\r\n                      </Form.Item>\r\n                  }\r\n\r\n                  <Row justify=\"space-between\">\r\n                    <Col md={11} >\r\n                      <Form.Item>\r\n                        <Form.Item\r\n                          key=\"seler-account\"\r\n\r\n                          name={fieldList ? [fieldList.name,\"buyerAccount\"] : \"buyerAccount\"}\r\n                          >\r\n                          <Input\r\n                            size=\"large\"\r\n                            placeholder={t(\"Hisob raqami\")} />\r\n                        </Form.Item>\r\n                        <span className=\"custom-input-label-1\">{t(\"Hisob raqami\")}</span>\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col md={11}>\r\n                      {\r\n                        docType === \"contract\"\r\n                          ? <Form.Item>\r\n                          <Form.Item\r\n                            key=\"seler-account\"\r\n                            name={fieldList ? [fieldList.name,\"buyerMobilePhone\"] : \"buyerMobilePhone\"}\r\n                          >\r\n                            <Input\r\n                              size=\"large\"\r\n                              placeholder={t(\"Telfon raqam\")}\r\n                            />\r\n                          </Form.Item>\r\n                          <span className=\"custom-input-label-1\">{t(\"Telfon raqam\")}</span>\r\n                        </Form.Item>\r\n                          : <Form.Item>\r\n                            <Form.Item\r\n                              key=\"seler-account\"\r\n                              name={fieldList ? [fieldList.name,\"buyerMfo\"] : \"buyerMfo\"}\r\n                            >\r\n                              <Input\r\n                                size=\"large\"\r\n                                placeholder={t(\"MFO\")}\r\n                              />\r\n                            </Form.Item>\r\n                            <span className=\"custom-input-label-1\">{t(\"MFO\")}</span>\r\n                          </Form.Item>\r\n                      }\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Form.Item>\r\n                    <Form.Item\r\n                      rules={[{ required: true }]}\r\n                      key=\"seler-account\"\r\n                      name={fieldList ? [fieldList.name,\"buyerAddress\"] : \"buyerAddress\"}\r\n                    >\r\n                      <Input\r\n                        size=\"large\"\r\n                        placeholder={t(\"Manzil\")} />\r\n                    </Form.Item>\r\n                    <span className=\"custom-input-label-1\">{t(\"Manzil\")}</span>\r\n                  </Form.Item>\r\n                    \r\n                  {\r\n                      docType===\"contract\"?\r\n                      <Col md={24} >\r\n                      <Form.Item>\r\n                        <Form.Item\r\n                          key=\"seler-account\"\r\n                          name={fieldList ? [fieldList.name,\"buyerBranch\"] : \"buyerBranch\"}\r\n                        >\r\n                          <Select\r\n                            bordered={false}\r\n                            size=\"large\"\r\n                            defaultActiveFirstOption\r\n                            placeholder=\"\">\r\n                              {buyerBranches.map(item=><Option value={item.tin}>{ item.tin } - {item.name}</Option>)}\r\n                          </Select>\r\n                        </Form.Item>\r\n                        <span className=\"custom-input-label-1\">{t(\"Filiali\")}</span>\r\n                      </Form.Item>\r\n                    </Col>\r\n                    :null\r\n                    }\r\n\r\n                  <Row justify=\"space-between\" align=\"stretch\">\r\n                    <Col md={11} >\r\n                      <Form.Item>\r\n                        <Form.Item\r\n                          key=\"seler-account\"\r\n                          name={fieldList ? [fieldList.name,\"buyerDirector\"] : \"buyerDirector\"}\r\n                        >\r\n                          <Input\r\n                            size=\"large\"\r\n                            placeholder={t(\"Direktor\")}  />\r\n                        </Form.Item>\r\n                        <span className=\"custom-input-label-1\">{t(\"Direktor\")}</span>\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col md={11} >\r\n                      {\r\n                        docType === \"contract\"\r\n                          ? (remove && fieldList ? <Button \r\n                              className=\"factra-action-btns\" \r\n                              style={{width: '100%'}} \r\n                              danger \r\n                              size=\"large\" \r\n                              onClick={()=>remove(fieldList.name)} >\r\n                                Olib tashlash\r\n                                </Button> \r\n                                : null ) \r\n                          : <Form.Item>\r\n                            <Form.Item\r\n                              key=\"seler-account\"\r\n                              name={fieldList ? [fieldList.name,\"buyerAccountant\"] : \"buyerAccountant\"}\r\n                            >\r\n                              <Input\r\n                                size=\"large\"\r\n                                placeholder={t(\"Bosh hisobchi\")} />\r\n                            </Form.Item>\r\n                            <span className=\"custom-input-label-1\">{t(\"Bosh hisobchi\")}</span>\r\n                          </Form.Item>\r\n                      }\r\n\r\n                    </Col>\r\n                    {\r\n                    docType===\"contract\" ?\r\n                    <Col md={11}>\r\n                      <Form.Item\r\n                        key=\"seler-account-buyer-dir-tin\"\r\n                        name={ fieldList ? [fieldList.name, \"buyerDirectorTin\"] :\"buyerDirectorTin\"}\r\n                        >\r\n                        <Input\r\n                          type=\"hidden\"\r\n                          size=\"large\"\r\n                          placeholder={t(\"Direktor\") + \" \" + t(\"STIR\")} />\r\n                      </Form.Item>\r\n                      \r\n                      </Col>\r\n                    : null\r\n                  }\r\n                  </Row>\r\n                  \r\n                  \r\n                </Fragment>\r\n                : null\r\n            }\r\n          </div>\r\n          : null\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BuyerForm;","C:\\HISOBXONA\\on_doc\\src\\cabinet\\empowerment\\create\\create.component.jsx",["290","291","292","293","294","295"],"import React, { useState, useEffect } from 'react';\r\nimport 'react-datasheet/lib/react-datasheet.css';\r\nimport Datasheet from 'react-datasheet';\r\nimport SelectMeasureEditor from '../../../components/data-sheet-custom-measure-selector/custom-selector.component';\r\nimport { Button, Input, Form, Row, Col, DatePicker, Select, Upload, message } from 'antd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n//import './create.style.scss';\r\nimport axios from 'axios';\r\nimport BuyerForm from '../../common/buyer-form.component';\r\nimport SellerForm from '../../common/seller-form.component';\r\nimport { connect } from 'react-redux';\r\nimport { selectToken } from '../../../redux/user/user.selector';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport moment from 'moment';\r\nimport { \r\n  FullscreenOutlined, \r\n  FullscreenExitOutlined, \r\n  } from '@ant-design/icons';\r\nimport { convertProductsToGrid, FIRST_EMPOWERMENT_GRID_ROW } from '../../../utils/main';\r\n\r\nconst EmpowermentForm = ({ token, match })=> {\r\n\r\n  const [form] = Form.useForm();\r\n  const { empowermentId } = match.params;\r\n  const [initialData, setInitialData] = useState()\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n  useEffect(()=>{\r\n    if(empowermentId){\r\n\r\n      //fetch fatura data\r\n      axios({\r\n        url: `/api/v1/empowerments/${empowermentId}`,\r\n        method: \"GET\",\r\n      }).then(res=>{\r\n        let data = res.data;\r\n        data.contractDate=moment(data.contractDate);\r\n        data.created_at=moment(data.created_at);\r\n        data.empowermentDateOfExpire=moment(data.empowermentDateOfExpire);\r\n        data.empowermentDateOfIssue=moment(data.empowermentDateOfIssue);\r\n        data.agentPassportDateOfIssue=moment(data.agentPassportDateOfIssue);\r\n        data.updated_at=moment(data.updated_at);\r\n  \r\n        setInitialData(data);\r\n        form.resetFields();\r\n        setGrid(convertProductsToGrid(res.data.products, \"empowerment\"));\r\n      }).catch(err=>{\r\n        console.log(err);\r\n      })\r\n      //end fetch factura data;\r\n    }\r\n  }, [])\r\n  \r\n\r\n  const validateMessages = {\r\n    required: 'Bu maydon majburiy!',\r\n    types: {\r\n      email: '${label} is not a valid email!',\r\n      number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n      range: '${label} must be between ${min} and ${max}',\r\n    },\r\n    \r\n  };\r\n\r\n\r\n  const [fullView, toglleFullView] = useState(false)\r\n\r\n\r\n  const [grid, setGrid] = useState([\r\n    FIRST_EMPOWERMENT_GRID_ROW,\r\n    [\r\n      { readOnly: true, value: 1 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //2 measure\r\n      { value: '' },                                          //3 amount\r\n    ], \r\n    [\r\n      { readOnly: true, value: 2 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //2 measure\r\n      { value: '' },                                          //3 amount\r\n    ], \r\n    [\r\n      { readOnly: true, value: 3 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //2 measure\r\n      { value: '' },                                          //3 amount\r\n    ], \r\n    [\r\n      { readOnly: true, value: 4 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //4 measure\r\n      { value: '' },                                          //5 amount\r\n    ], \r\n  ])\r\n\r\n  const fetchAgent = e=>{\r\n    let val = e.target.value;\r\n    if(!isNaN(val)){\r\n\r\n      if(val > 100000000 && val<999999999){\r\n        axios({\r\n          method: \"GET\",\r\n          url: \"/api/v1/users/tin/\"+val\r\n        })\r\n        .then(res=>{\r\n          const { \r\n            name, \r\n            fullName, \r\n            passIssuedAt, \r\n            passOrg,\r\n            passNum \r\n          } = res.data;\r\n          console.log(moment('2020-00-00 00:00:00')._isValid)\r\n          form.setFieldsValue({\r\n            agentFio: fullName ?? name,\r\n            agentPassportDateOfIssue: moment(passIssuedAt)._isValid ? moment(passIssuedAt) : null,\r\n            agentPassportIssuedBy: passOrg,\r\n            agentPassportNumber: passNum\r\n          })\r\n        })\r\n      }\r\n\r\n    }else{\r\n      message.warning(\"STIR notog'ri kiritildi!\");\r\n    }\r\n  }\r\n\r\n\r\n  //#region data-sheet methods\r\n  const handleRemoveRow = (rowId)=>{\r\n    console.log(rowId)\r\n\r\n    console.log(grid)\r\n    grid.splice(rowId, 1)\r\n    console.log(grid)\r\n    setGrid([...grid])\r\n  }\r\n\r\n  const valueRenderer = cell => cell.value;\r\n  const onCellsChanged = changes => {\r\n    changes.forEach(({ cell, row, col, value }, index) => {\r\n        //this sets changed values\r\n        grid[row][col] = { ...grid[row][col], value };        \r\n\r\n    });\r\n     setGrid([...grid]);\r\n  };\r\n\r\n  const handleAddRow = ()=>{\r\n    \r\n    const sampleRow = [\r\n      { readOnly: true, value:    grid.length }, //0 ordNo\r\n      { value: \"\" }, //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor }, //4 measure\r\n      { value: '' }, //5 amount\r\n    ]\r\n\r\n    let newgrid = [...grid, sampleRow];\r\n\r\n     setGrid(newgrid)\r\n  }\r\n\r\n  const onContextMenu = (e, cell, i, j) =>\r\n    cell.readOnly ? e.preventDefault() : null;\r\n//#endregion\r\n  \r\n  //#region form methods\r\n\r\n  const handleSubmit = (values)=>{\r\n    setIsLoading(true)\r\n    console.log(values)\r\n    if(empowermentId){\r\n      axios({\r\n        url:`/api/v1/empowerments/${empowermentId}`,\r\n        method: 'PATCH',\r\n        data: {emp: values, products: grid}\r\n      }).then(res=>{\r\n        console.log(res)\r\n        setIsLoading(false);\r\n        if(res.data.ok){\r\n          message.success(\"Ishonchnoma ozgartirildi!\")\r\n        }\r\n        else{\r\n          message.error(\"Ishonchnoma o'zgartirishda xatolik!\");\r\n        }\r\n      }).catch(err=>{\r\n        setIsLoading(false);\r\n        message.error(\"Ishonchnoma o'zgartirishda xatolik!\");\r\n        console.log(err)\r\n      })\r\n    } else{\r\n      axios({\r\n        url:'/api/v1/empowerments',\r\n        method: 'post',\r\n        data: {emp: values, products: grid}\r\n      }).then(res=>{\r\n        setIsLoading(false)\r\n        if(res.data.ok){\r\n          message.success(\"Ishonchnma yaratildi!\");\r\n        }else{\r\n          message.error(\"Ishonchnoma yaratishda xatolik\");\r\n        }\r\n\r\n        console.log(res)\r\n      }).catch(err=>{\r\n        setIsLoading(false);\r\n        message.error(\"Ishonchnoma yaratishda xatolik\");\r\n        console.log(err)\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n  const handleImportExecl =(value)=>{\r\n    console.log(\"me fired\")\r\n\r\n    if(value.file.status==\"done\"){\r\n      \r\n      const { response } = value.file\r\n\r\n      response.excel.forEach((element, index)=>{\r\n        element[0].value = index + 1;\r\n        element[0].readOnly = true;\r\n        element[4].dataEditor = SelectMeasureEditor;\r\n      })\r\n\r\n      setGrid([grid[0], ...response.excel])\r\n      console.log(response)\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n  \r\n  return (\r\n    <div style={{padding: 15}}>\r\n      <Form\r\n        initialValues={initialData}\r\n        form={form}\r\n        name=\"factura\"\r\n        onFinish = {handleSubmit}\r\n        scrollToFirstError\r\n        validateMessages={validateMessages}\r\n      >\r\n\r\n      <div className=\"factura-data-sheet-container\">\r\n      <h3>Ishonchnoma</h3>\r\n      \r\n      <Row justify=\"space-between\">\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                rules={[{required: true}]}\r\n                key=\"dyna-form-facutura-no\"\r\n                name=\"empowermentNo\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder=\"Inshonchnoma raqami\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Inshonchnoma raqami</span>\r\n              </Form.Item>\r\n            </Col>\r\n            \r\n            <Col md={11}>\r\n              <div style={{display: 'flex', justifyContent: \"space-between\"}}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                key=\"dyna-form-item-inn-date\"\r\n                name=\"empowermentDateOfIssue\"\r\n                rules={[{required: true}]}>\r\n                  <DatePicker                \r\n                    size=\"large\"\r\n                    placeholder=\"Berilgan sanasi\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Berilgan sanasi</span>\r\n              </Form.Item>\r\n          \r\n            <Form.Item>\r\n              <Form.Item \r\n                key=\"dyna-form-item-inn-date-expire\"\r\n                name=\"empowermentDateOfExpire\"\r\n                rules={[{required: true}]}>\r\n                  <DatePicker                \r\n                    size=\"large\"\r\n                    placeholder=\"Amal qilish sanasi\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Amal qilish sanasi</span>\r\n              </Form.Item>\r\n              </div>\r\n            </Col>\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                rules={[{required: true}]}\r\n                key=\"dyna-form-item-contract-n0\"\r\n                name=\"contractNo\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder=\"Shartnoma raqami\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Shartnoma raqami</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                rules={[{required: true}]}\r\n                key=\"dyna-form-item-contract-date\"\r\n                name=\"contractDate\">\r\n                  <DatePicker\r\n                    size=\"large\"\r\n                    placeholder=\"Shartnoma sanasi\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Shartnoma sanasi</span>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n      </div>\r\n\r\n      <div className=\"factura-data-sheet-container\">\r\n        \r\n        <Row justify=\"space-between\">\r\n        <Col md={11}>  \r\n          <SellerForm docType=\"empowerment\"/>\r\n        </Col>\r\n\r\n        <Col md={11}>\r\n          <BuyerForm form={ form } docType=\"empowerment\"/>\r\n        </Col>\r\n      </Row>\r\n      </div>\r\n      <div className={`factura-data-sheet-container ${fullView ? 'grid-full-view' : null}`}>\r\n        <div style={{marginBottom: 10, display: 'flex', justifyContent:'space-between'}}>\r\n          <div style={{display: 'flex'}}>\r\n              <Upload \r\n                headers={{\r\n                  Authorization: \"Bearer \" + token\r\n                }}\r\n                multiple={false}\r\n                action=\"http://127.0.0.1:8000/api/v1/factura-products/read-excel\"\r\n                accept=\".xlsx, .xls\" \r\n                onChange={handleImportExecl}>\r\n                \r\n                  <Button style={{marginRight: 10}}>Exceldan yuklash</Button>\r\n               \r\n              </Upload>\r\n              <a target=\"_blank\" href=\"../../../excels/on_doc_factura_products.xlsx\" download>\r\n                <Button >\r\n                  Shablon yuklash\r\n                </Button>\r\n              </a>\r\n            </div>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={fullView ? <FullscreenExitOutlined /> : <FullscreenOutlined />} \r\n              onClick={()=>toglleFullView(!fullView)}>\r\n                { fullView ? \"Kichraytirish\" : \"Kengaytirish\" }\r\n            </Button>\r\n        </div>\r\n        \r\n      <div style={{overflowX: 'auto'}} >\r\n        <div style={{width: '100%'}}>\r\n          <Datasheet\r\n            data={ grid}\r\n            valueRenderer={ valueRenderer}\r\n            onContextMenu={ onContextMenu}\r\n            onCellsChanged={ onCellsChanged}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Button \r\n        size=\"large\" \r\n        style={{marginTop: 20, marginRight: 7, width: 220}} \r\n        type=\"primary\" \r\n        icon={<FontAwesomeIcon \r\n          style={{marginRight: 7}} \r\n          icon={[\"far\", \"plus-square\"]} />} \r\n        onClick={  handleAddRow }>Qo'shish</Button>\r\n      \r\n      <Button \r\n        size=\"large\" \r\n        style={{marginTop: 20, width: 220 }} \r\n        danger\r\n        type=\"primary\" \r\n        icon={<FontAwesomeIcon \r\n          style={{marginRight: 7}} \r\n          icon={[\"far\", \"trash-alt\"]} />} \r\n        onClick={ ()=>{ if(grid.length>1){ handleRemoveRow(grid.length-1) }}  }>Oxirgi qatorni o'chirish</Button>\r\n      </div>\r\n          \r\n        <div className=\"factura-data-sheet-container\">\r\n\r\n          <Row justify=\"space-between\">\r\n          <Col md={7}>\r\n              <Form.Item>\r\n                <Form.Item \r\n              key=\"seler-account-tyin-inn\"\r\n              name=\"agentTin\">\r\n                <Input\r\n                  size=\"large\"\r\n                  placeholder=\"СТИР\"\r\n                  onChange={fetchAgent}\r\n\r\n                  />\r\n              </Form.Item>\r\n                <span className=\"custom-input-label-1\">СТИР</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={7} >\r\n              <Form.Item>\r\n                <Form.Item \r\n              key=\"agentFio-no\"\r\n              name=\"agentFio\">\r\n                <Input\r\n                  size=\"large\"\r\n                  placeholder=\"ФИШ\" />\r\n              </Form.Item>\r\n                <span className=\"custom-input-label-1\">ФИШ</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={7}>\r\n              <Form.Item>\r\n                <Form.Item \r\n              key=\"seler-account-empowerment-dateof-issue-agentJobTittle\"\r\n              name=\"agentJobTittle\">\r\n                <Input\r\n                  size=\"large\"\r\n                  placeholder=\"Мансаб\" />\r\n              </Form.Item>\r\n                <span className=\"custom-input-label-1\">Мансаб</span>\r\n              </Form.Item>\r\n            </Col>\r\n            \r\n            <Col md={7}>\r\n          \r\n                <Form.Item>\r\n                  <Form.Item \r\n                key=\"seler-account-agent-fioe\"\r\n                name=\"agentPassportNumber\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder=\"Паспорт серия ва рақами\" />\r\n                </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Паспорт серия ва рақами</span>\r\n                </Form.Item>\r\n            \r\n            </Col>\r\n\r\n  <Col md={7} >\r\n    <Form.Item>\r\n      <Form.Item \r\n    key=\"selenote-field\"\r\n    name=\"agentPassportIssuedBy\">\r\n      <Input\r\n        size=\"large\"\r\n        placeholder=\"Ким томонидан берилган\" />\r\n    </Form.Item>\r\n      <span className=\"custom-input-label-1\">Ким томонидан берилган</span>\r\n    </Form.Item>\r\n  </Col>\r\n  <Col md={7} >\r\n    <Form.Item>\r\n      <Form.Item \r\n    key=\"selenote-field\"\r\n    name=\"agentPassportDateOfIssue\">\r\n      <DatePicker\r\n        size=\"large\"\r\n        placeholder=\"Паспорт берилган сана\" />\r\n    </Form.Item>\r\n      <span className=\"custom-input-label-1\">Паспорт берилган сана</span>\r\n    </Form.Item>\r\n  </Col>\r\n  \r\n</Row>\r\n</div>\r\n          <div className=\"factura-data-sheet-container\">\r\n            <Row justify=\"space-around\">\r\n              <Col >\r\n                <Button \r\n                  loading={isLoading}\r\n                  primary\r\n                  htmlType=\"submit\"\r\n                  className=\"factra-action-btns save-btn\" \r\n                  size=\"large\"\r\n                  icon={<FontAwesomeIcon icon=\"save\" className=\"factura-action-btn-icons\"  />}>\r\n                    Сақлаб қолиш\r\n                  </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button \r\n                  className=\"factra-action-btns sing-btn\" \r\n                  size=\"large\"\r\n                  icon={<FontAwesomeIcon icon=\"signature\" className=\"factura-action-btn-icons\" />}>\r\n                    Имзолаш\r\n                  </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button \r\n                  icon={<FontAwesomeIcon icon=\"ban\" className=\"factura-action-btn-icons\" />} \r\n                  danger \r\n                  className=\"factra-action-btns\" \r\n                  size=\"large\">\r\n                    Бекор қилиш\r\n                  </Button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <Form.Item\r\n            name=\"empowermentId\"\r\n            key=\"empowermemt-id\"\r\n          >\r\n            <Input type=\"hidden\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"empowermentProductId\"\r\n            key=\"empowermemt-product-id\"\r\n          >\r\n            <Input type=\"hidden\" />\r\n          </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  token: selectToken\r\n})\r\n\r\nexport default connect(mapStateToProps)(EmpowermentForm);",["296","297"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\home\\home.component.jsx",["298","299","300","301","302"],"import React, { useState, useEffect } from 'react';\r\nimport { Tabs } from 'antd';\r\nimport './home.style.scss';\r\nimport DynaGrid from '../../../components/dyna-grid/dyna-grid.component';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { get_home_config } from '../../../utils/home.config.provider';\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst HomePage = ({ doc, hideTabs })=> {\r\n\r\n    const {t} = useTranslation();\r\n\r\n    const tabs = {\r\n        1: \"in\",\r\n        2: \"out\",\r\n        3: \"saved\",\r\n        4: \"all\"\r\n    }\r\n\r\n    const { title, createTitle, createUrl, gridSourceUrl, gridConfig } = get_home_config(doc);\r\n\r\n    const [activeTab, setActiveTab] = useState(1);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    return (\r\n        <div className=\"factura-home-page-container\">\r\n            <div className=\"factura-home-sub-con\">\r\n                <div className=\"factura-home-title\">\r\n                    <h2>{ title }</h2>\r\n                    <Link to={ createUrl }><span>{ createTitle }</span></Link>\r\n                </div>\r\n                {\r\n                    hideTabs\r\n                    ? null\r\n                    : <div className=\"factura-home-list-tabs\">\r\n                    <div className=\"factura-home-list-tab-con\">\r\n                        <div onClick={()=>setActiveTab(1)} className={`status-tab-bar ${activeTab===1 ? 'active-tab' : ''}`}>\r\n                            {t(\"Kiruvchi\")}\r\n                        </div> \r\n                        <div onClick={()=>setActiveTab(2)} className={`status-tab-bar ${activeTab===2 ? 'active-tab' : ''}`}>\r\n                            {t(\"Chiquvchi\")}\r\n                        </div>\r\n                        <div onClick={()=>setActiveTab(3)} className={`status-tab-bar ${activeTab===3 ? 'active-tab' : ''}`}>\r\n                            {t(\"Saqlangan\")}\r\n                        </div>\r\n                        <div onClick={()=>setActiveTab(4)} className={`status-tab-bar ${activeTab===4 ? 'active-tab' : ''}`}>\r\n                            {t(\"Barchasi\")}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                }\r\n                \r\n                \r\n                <div>\r\n                    <DynaGrid    \r\n                        config={{ ...gridConfig, dataSourcePath: `${gridSourceUrl}?tab=${tabs[activeTab]}`}}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","C:\\HISOBXONA\\on_doc\\src\\utils\\main.js",["303","304","305","306","307","308","309"],"C:\\HISOBXONA\\on_doc\\src\\admin\\admin.router.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\right-sidebar\\right-sidebar.component.jsx",["310"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Badge, Modal, Tag } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport './right-sidebar.style.scss';\r\nimport { IMPORTANCE } from '../../env';\r\nimport { setCabinetData } from '../../redux/user/user.action';\r\nimport { connect } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst RightSidebar = ({ location, admin, setData }) => {\r\n\r\n    const { t } = useTranslation()\r\n\r\n    const [active, setActive] = useState({})\r\n    const [notifications, setNotifications] = useState([])\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [badgeCount, setBedgeCount]=useState({\r\n        factura_awaiting: 0,\r\n        contract_awaiting: 0,\r\n        act_awaiting:0,\r\n        emp_awating: 0,\r\n        tty_awaiting:0,\r\n    })\r\n    useEffect(()=>{\r\n        setActive({\r\n            cabinet: location.pathname===\"/cabinet\",\r\n            factura: location.pathname.includes(\"/factura\"),\r\n            contract: location.pathname.includes(\"/contract\"),\r\n            empowerment: location.pathname.includes(\"/empowerment\"),\r\n            act: location.pathname.includes(\"/act\"),\r\n            tty: location.pathname.includes(\"/tty\"),\r\n            freeDoc: location.pathname.includes(\"/free-template\"),\r\n            notification: location.pathname.includes(\"/notification\")\r\n        })\r\n    }, [location.pathname])\r\n\r\n    const closeModel = ()=>{\r\n        setShowModal(false);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        axios({\r\n            method: \"GET\",\r\n            url: \"/api/v1/cabinet\"\r\n        }).then(res=>{\r\n            const { notifications } = res.data\r\n            setData(res.data)\r\n            setNotifications(notifications);\r\n            if(Array.isArray(notifications) && notifications.length){\r\n                setShowModal(true)\r\n            }\r\n            setBedgeCount(res.data)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"cabiner-right-sidebar-cmain-container\">\r\n\r\n            <Modal \r\n            bodyStyle={{width: '70wv'}}\r\n            title=\"Notifications\"\r\n            visible={showModal}\r\n            onOk={closeModel}\r\n            onCancel={closeModel}\r\n            cancelButtonProps={{style: {display: \"none\"}}}\r\n            >\r\n                {\r\n                    notifications.map((n, index)=><div style={{marginBottom: 30}}>\r\n                        <h3>{index+1}. {n.title_uz}</h3>\r\n                        <div><Tag \r\n                        style={{marginRight: 10}}\r\n                            color={IMPORTANCE[n.importance].color}>\r\n                                {IMPORTANCE[n.importance].text} \r\n                        </Tag>\r\n                        {moment(n.updated_at).format(\"MMMM Do YYYY, H:mm:ss\")}\r\n                        </div>\r\n                        <div>{ n.body_uz }</div>\r\n                        <hr/>\r\n                    </div>)\r\n                }\r\n            </Modal>\r\n            \r\n\r\n            <div className=\"cabiner-right-sidebar-sub-container\">\r\n                <div className=\"cabinet-documents-action-containers-bloks\">\r\n                    <Link to=\"/cabinet\">\r\n                        <div className={`action-bloks ${active.cabinet ? 'active' : ''}`}>\r\n                            <FontAwesomeIcon icon=\"home\" /> {t(\"Bosh sahifa\")}\r\n                        </div>\r\n                    </Link>\r\n                    <Link to=\"/cabinet/factura\">\r\n                            <div className={`action-bloks ${active.factura ? 'active' : ''}`}>\r\n                                <FontAwesomeIcon icon=\"file-invoice\" className=\"action-icon\" /> {t(\"Faktura\")}\r\n                                <Badge style={{marginLeft: 10}} count={badgeCount.factura_awaiting} />\r\n                            </div>\r\n                    </Link>\r\n                    <Link to=\"/cabinet/contract\">\r\n                        <div className={`action-bloks ${active.contract ? 'active' : ''}`}>\r\n                            <FontAwesomeIcon icon=\"file-contract\" className=\"action-icon\"/> {t(\"Shartnoma\")}\r\n                            <Badge style={{marginLeft: 10}} count={badgeCount.contract_awaiting} />\r\n                        </div>\r\n                    </Link>\r\n                    <Link to=\"/cabinet/act\">\r\n                        <div className={`action-bloks ${active.act ? 'active' : ''}`}>\r\n                            <FontAwesomeIcon icon={[\"far\", \"file-alt\"]} className=\"action-icon\"/> {t(\"Akt\")}\r\n                            <Badge style={{marginLeft: 10}} count={badgeCount.act_awaiting} />\r\n                        </div>\r\n                    </Link>\r\n                    <Link to=\"/cabinet/empowerment\">\r\n                        <div className={`action-bloks ${active.empowerment ? 'active' : ''}`}>\r\n                            <FontAwesomeIcon icon=\"file-signature\" className=\"action-icon\"/>{t(\"Ishonchnoma\")}\r\n                            <Badge style={{marginLeft: 10}} count={badgeCount.emp_awating} />\r\n                        </div>\r\n                    </Link>\r\n                    <Link to=\"/cabinet/tty\">\r\n                        <div className={`action-bloks ${active.tty ? 'active' : ''}`}>\r\n                            <FontAwesomeIcon icon={[\"far\", \"file-archive\"]} className=\"action-icon\"/> {t(\"TTY\")}\r\n                            <Badge style={{marginLeft: 10}} count={badgeCount.tty_awaiting} />\r\n                        </div>\r\n                    </Link>\r\n                    {\r\n                        admin \r\n                        ? <Link to=\"/admin/notification\">\r\n                            <div className={`action-bloks ${active.notification ? 'active' : ''}`}>\r\n                                <FontAwesomeIcon icon={[\"far\", \"bell\"]}  className=\"action-icon\"/> Notification\r\n                                <Badge style={{marginLeft: 10}} count={3} />\r\n                            </div>\r\n                        </Link>\r\n                        : null\r\n                    }\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    setData: data => dispatch(setCabinetData(data))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(withRouter(RightSidebar));\r\n",["311","312"],"C:\\HISOBXONA\\on_doc\\src\\admin\\notification\\form.component.jsx",["313"],"import { Col, Form, Input, Row, Select, Button, Switch, message } from 'antd'\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nconst { Option } = Select;\r\n\r\nconst NotificationForm = ({ match }) => {\r\n\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(false);\r\n    const { notificationId } = match.params;\r\n    \r\n    useEffect(()=>{\r\n        if(notificationId){\r\n            axios({\r\n                url:\"api/v1/notifications/\"+notificationId,\r\n                method: \"get\"\r\n            })\r\n            .then(res=>{\r\n                form.setFieldsValue(res.data)\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n    },[])\r\n    \r\n    const handleSubmit = values => {\r\n\r\n        setLoading(true)\r\n        axios({\r\n            method:  notificationId ? \"patch\" : \"post\",\r\n            data: values,\r\n            url: notificationId ? \"/api/v1/notifications/\"+notificationId  : \"/api/v1/notifications\" \r\n        }).then(res=>{\r\n            if(res.data.ok){\r\n                message.success(\"Notification saqlandi!\");\r\n            }else{\r\n                message.error(\"Notification saqlashda xatolik!\");\r\n            }\r\n            setLoading(false);\r\n        }).catch(err=>{\r\n            console.log(err)\r\n            message.error(\"Notification saqalashda xatolik!\");\r\n            setLoading(false);\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{marginTop: 20}}>\r\n            <Form\r\n                form={form}\r\n                onFinish={handleSubmit}\r\n                scrollToFirstError\r\n            >\r\n                <div className=\"factura-data-sheet-container\">\r\n                <h3>Notification yaratish</h3>\r\n                <Row justify=\"space-between\">\r\n                    <Col md={11}>\r\n                        <Form.Item>\r\n                            <Form.Item\r\n                                rules={[{ required: true }]}\r\n                                key=\"dyna-form-facutura-no\"\r\n                                name=\"title_uz\">\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    />\r\n                            </Form.Item>\r\n                            <span className=\"custom-input-label-1\">Notification sarlavhasi (uz)</span>\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Form.Item\r\n                                rules={[{ required: true }]}\r\n                                key=\"dyna-form-facutura-no\"\r\n                                name=\"title_ru\">\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    />\r\n                            </Form.Item>\r\n                            <span className=\"custom-input-label-1\">Notification sarlavhasi (ru)</span>\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Form.Item\r\n                                rules={[{ required: true }]}\r\n                                key=\"dyna-form-facutura-no\"\r\n                                name=\"title_en\">\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    />\r\n                            </Form.Item>\r\n                            <span className=\"custom-input-label-1\">Notification sarlavhasi (en)</span>\r\n                        </Form.Item>\r\n                        \r\n                        <Form.Item>\r\n                            <Form.Item\r\n                                rules={[{ required: true }]}\r\n                                key=\"dyna-form-facutura-no\"\r\n                                name=\"importance\">\r\n                                <Select\r\n                                    bordered={false}\r\n                                    size=\"large\"\r\n                                    name=\"importance\"\r\n                                    defaultActiveFirstOption\r\n                                >\r\n                                    <Option value={1}>1 - Uncha muxim emas</Option>\r\n                                    <Option value={2}>2 - Muxim emas</Option>\r\n                                    <Option value={3}>3 - Muxim</Option>\r\n                                    <Option value={4}>4 - Muximroq</Option>\r\n                                    <Option value={5}>5 - O'ta muxim</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <span className=\"custom-input-label-1\">Notification muximligi</span>\r\n                        </Form.Item>\r\n                        <Row justify=\"space-between\">\r\n                            <Col md={11}>\r\n                                <Form.Item\r\n                                    label=\"Holati\"\r\n                                    name=\"isActive\"\r\n                                    valuePropName=\"checked\"\r\n                                    rules={[{ required: true }]}\r\n                                >\r\n                                    <Switch />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col md={11}>\r\n                                <Form.Item>\r\n                                    <Button \r\n                                        loading={loading}\r\n                                        style={{width: '100%'}}\r\n                                        size=\"large\" \r\n                                        htmlType=\"submit\"\r\n                                        className=\"factra-action-btns save-btn\"\r\n                                        >Saqlash</Button>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <Form.Item\r\n                            name=\"body_uz\"\r\n                            \r\n                            rules={[{ required: true }]}\r\n                        >\r\n                            <TextArea \r\n                                placeholder=\"Body uz\"\r\n                                rows={4} size=\"large\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                        \r\n                            name=\"body_ru\"\r\n                            rules={[{ required: true }]}\r\n                        >\r\n                            <TextArea rows={4} \r\n                                placeholder=\"Body ru\"\r\n                                size=\"large\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"body_en\"\r\n                            \r\n                            rules={[{ required: true }]}\r\n                        >\r\n                            <TextArea \r\n                                placeholder=\"Body en\"\r\n                                rows={4} size=\"large\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotificationForm\r\n","C:\\HISOBXONA\\on_doc\\src\\redux\\store.js",["314"],"import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport { persistStore } from 'redux-persist';\r\nimport rootReducer from './root-reducer';\r\nimport creatSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './root-saga';\r\n\r\nconst sagaMiddleWare = creatSagaMiddleware();\r\n\r\nconst middleWares = [sagaMiddleWare];\r\n\r\nmiddleWares.push(logger);\r\n\r\n// if(process.env.NODE_ENV ==='development'){\r\n//     middleWares.push(logger);\r\n// }\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middleWares));\r\n\r\nsagaMiddleWare.run(rootSaga)\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default { store, persistor };",["315","316"],"C:\\HISOBXONA\\on_doc\\src\\redux\\root-saga.js",["317"],"import { all, call } from 'redux-saga/effects';\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n\r\n    ])\r\n}","C:\\HISOBXONA\\on_doc\\src\\cabinet\\act\\index.router.jsx",[],["318","319"],"C:\\HISOBXONA\\on_doc\\src\\utils\\e-imzo.js",["320","321","322","323","324","325","326"],"String.prototype.splitKeep = function(splitter, ahead) {\r\n    var self = this;\r\n    var result = [];\r\n    if (splitter != '') {\r\n        // Substitution of matched string\r\n        function getSubst(value) {\r\n            var substChar = value[0] == '0' ? '1' : '0';\r\n            var subst = '';\r\n            for (var i = 0; i < value.length; i++) {\r\n                subst += substChar;\r\n            }\r\n            return subst;\r\n        };\r\n        var matches = [];\r\n        // Getting mached value and its index\r\n        var replaceName = splitter instanceof RegExp ? \"replace\" : \"replaceAll\";\r\n        var r = self[replaceName](splitter, function(m, i, e) {\r\n            matches.push({ value: m, index: i });\r\n            return getSubst(m);\r\n        });\r\n        // Finds split substrings\r\n        var lastIndex = 0;\r\n        for (var i = 0; i < matches.length; i++) {\r\n            var m = matches[i];\r\n            var nextIndex = ahead == true ? m.index : m.index + m.value.length;\r\n            if (nextIndex != lastIndex) {\r\n                var part = self.substring(lastIndex, nextIndex);\r\n                result.push(part);\r\n                lastIndex = nextIndex;\r\n            }\r\n        };\r\n        if (lastIndex < self.length) {\r\n            var part = self.substring(lastIndex, self.length);\r\n            result.push(part);\r\n        };\r\n    } else {\r\n        result.add(self);\r\n    };\r\n    return result;\r\n};\r\n\r\nexport const CAPIWS = {\r\n    URL: (window.location.protocol.toLowerCase() === \"https:\" ? \"wss://127.0.0.1:64443\" : \"ws://127.0.0.1:64646\") + \"/service/cryptapi\",\r\n    callFunction: function(funcDef, callback, error) {\r\n        if (!window.WebSocket) {\r\n            if (error)\r\n                error();\r\n            return;\r\n        }\r\n        var socket;\r\n        try {\r\n            socket = new WebSocket(this.URL);\r\n        } catch (e) {\r\n            error(e);\r\n        }\r\n        socket.onerror = function(e) {\r\n            if (error)\r\n                error(e);\r\n        };\r\n        socket.onmessage = function(event) {\r\n            var data = JSON.parse(event.data);\r\n            socket.close();\r\n            callback(event, data);\r\n        };\r\n        socket.onopen = function() {\r\n            socket.send(JSON.stringify(funcDef));\r\n        };\r\n    },\r\n    version: function(callback, error) {\r\n        if (!window.WebSocket) {\r\n            if (error)\r\n                error();\r\n            return;\r\n        }\r\n        var socket;\r\n        try {\r\n            socket = new WebSocket(this.URL);\r\n        } catch (e) {\r\n            error(e);\r\n        }\r\n        socket.onerror = function(e) {\r\n            if (error)\r\n                error(e);\r\n        };\r\n        socket.onmessage = function(event) {\r\n            var data = JSON.parse(event.data);\r\n            socket.close();\r\n            callback(event, data);\r\n        };\r\n        socket.onopen = function() {\r\n            var o = { name: 'version' };\r\n            socket.send(JSON.stringify(o));\r\n        };\r\n    },\r\n    apidoc: function(callback, error) {\r\n        if (!window.WebSocket) {\r\n            if (error)\r\n                error();\r\n            return;\r\n        }\r\n        var socket;\r\n        try {\r\n            socket = new WebSocket(this.URL);\r\n        } catch (e) {\r\n            error(e);\r\n        }\r\n        socket.onerror = function(e) {\r\n            if (error)\r\n                error(e);\r\n        };\r\n        socket.onmessage = function(event) {\r\n            var data = JSON.parse(event.data);\r\n            socket.close();\r\n            callback(event, data);\r\n        };\r\n        socket.onopen = function() {\r\n            var o = { name: 'apidoc' };\r\n            socket.send(JSON.stringify(o));\r\n        };\r\n    },\r\n    apikey: function(domainAndKey, callback, error) {\r\n        if (!window.WebSocket) {\r\n            if (error)\r\n                error();\r\n            return;\r\n        }\r\n        var socket;\r\n        try {\r\n            socket = new WebSocket(this.URL);\r\n        } catch (e) {\r\n            error(e);\r\n        }\r\n        socket.onerror = function(e) {\r\n            if (error)\r\n                error(e);\r\n        };\r\n        socket.onmessage = function(event) {\r\n            var data = JSON.parse(event.data);\r\n            socket.close();\r\n            callback(event, data);\r\n        };\r\n        socket.onopen = function() {\r\n            var o = { name: 'apikey', arguments: domainAndKey };\r\n            socket.send(JSON.stringify(o));\r\n        };\r\n    }\r\n};\r\n\r\nexport const EIMZOClient = {\r\n    NEW_API: false,\r\n    API_KEYS: [\r\n        'cabinet.onlinefactura.uz', 'F09A2CBE8EA25A5C065AF78D32F517B1DCF12E997575556CBD90B405A90420E6EB538FCCFFCBAA22C5D191CAB3803965621B023E8642F77F35DDA072FBA17914'\r\n    ],\r\n    checkVersion: function(success, fail) {\r\n        CAPIWS.version(function(event, data) {\r\n            if (data.success === true) {\r\n                if (data.major && data.minor) {\r\n                    var installedVersion = parseInt(data.major) * 100 + parseInt(data.minor);\r\n                    EIMZOClient.NEW_API = installedVersion >= 336;\r\n                    success(data.major, data.minor);\r\n                } else {\r\n                    fail(null, 'E-IMZO Version is undefined');\r\n                }\r\n            } else {\r\n                fail(null, data.reason);\r\n            }\r\n        }, function(e) {\r\n            fail(e, null);\r\n        });\r\n    },\r\n    installApiKeys: function(success, fail) {\r\n        CAPIWS.apikey(EIMZOClient.API_KEYS, function(event, data) {\r\n            if (data.success) {\r\n                success();\r\n            } else {\r\n                fail(null, data.reason);\r\n            }\r\n        }, function(e) {\r\n            fail(e, null);\r\n        });\r\n    },\r\n    listAllUserKeys: function(itemIdGen, itemUiGen, success, fail) {\r\n        var items = [];\r\n        var errors = [];\r\n        if (!EIMZOClient.NEW_API) {\r\n            EIMZOClient._findCertKeys(itemIdGen, itemUiGen, items, errors, function(firstItmId) {\r\n                EIMZOClient._findPfxs(itemIdGen, itemUiGen, items, errors, function(firstItmId2) {\r\n                    if (items.length === 0 && errors.length > 0) {\r\n                        fail(errors[0].e, errors[0].r);\r\n                    } else {\r\n                        var firstId = null;\r\n                        if (items.length === 1) {\r\n                            if (firstItmId) {\r\n                                firstId = firstItmId;\r\n                            } else if (firstItmId2) {\r\n                                firstId = firstItmId2;\r\n                            }\r\n                        }\r\n                        success(items, firstId);\r\n                    }\r\n                });\r\n            });\r\n        } else {\r\n            EIMZOClient._findCertKeys2(itemIdGen, itemUiGen, items, errors, function(firstItmId) {\r\n                EIMZOClient._findPfxs2(itemIdGen, itemUiGen, items, errors, function(firstItmId2) {\r\n                    EIMZOClient._findTokens2(itemIdGen, itemUiGen, items, errors, function(firstItmId3) {\r\n                        if (items.length === 0 && errors.length > 0) {\r\n                            fail(errors[0].e, errors[0].r);\r\n                        } else {\r\n                            var firstId = null;\r\n                            if (items.length === 1) {\r\n                                if (firstItmId) {\r\n                                    firstId = firstItmId;\r\n                                } else if (firstItmId2) {\r\n                                    firstId = firstItmId2;\r\n                                } else if (firstItmId3) {\r\n                                    firstId = firstItmId3;\r\n                                }\r\n                            }\r\n                            success(items, firstId);\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    },\r\n    loadKey: function(itemObject, success, fail, verifyPassword) {\r\n        if (itemObject) {\r\n            var vo = itemObject;\r\n            if (vo.type === \"certkey\") {\r\n                CAPIWS.callFunction({ plugin: \"certkey\", name: \"load_key\", arguments: [vo.disk, vo.path, vo.name, vo.serialNumber] }, function(event, data) {\r\n                    if (data.success) {\r\n                        var id = data.keyId;\r\n                        success(id);\r\n                    } else {\r\n                        fail(null, data.reason);\r\n                    }\r\n                }, function(e) {\r\n                    fail(e, null);\r\n                });\r\n            } else if (vo.type === \"pfx\") {\r\n                CAPIWS.callFunction({ plugin: \"pfx\", name: \"load_key\", arguments: [vo.disk, vo.path, vo.name, vo.alias] }, function(event, data) {\r\n                    if (data.success) {\r\n                        var id = data.keyId;\r\n                        if (verifyPassword) {\r\n                            CAPIWS.callFunction({ name: \"verify_password\", plugin: \"pfx\", arguments: [id] }, function(event, data) {\r\n                                if (data.success) {\r\n                                    success(id);\r\n                                } else {\r\n                                    fail(null, data.reason);\r\n                                }\r\n                            }, function(e) {\r\n                                fail(e, null);\r\n                            });\r\n                        } else {\r\n                            success(id);\r\n                        }\r\n                    } else {\r\n                        fail(null, data.reason);\r\n                    }\r\n                }, function(e) {\r\n                    fail(e, null);\r\n                });\r\n            } else if (vo.type === \"ftjc\") {\r\n                CAPIWS.callFunction({ plugin: \"ftjc\", name: \"load_key\", arguments: [vo.cardUID] }, function(event, data) {\r\n                    if (data.success) {\r\n                        var id = data.keyId;\r\n                        if (verifyPassword) {\r\n                            CAPIWS.callFunction({ plugin: \"ftjc\", name: \"verify_pin\", arguments: [id, '1'] }, function(event, data) {\r\n                                if (data.success) {\r\n                                    success(id);\r\n                                } else {\r\n                                    fail(null, data.reason);\r\n                                }\r\n                            }, function(e) {\r\n                                fail(e, null);\r\n                            });\r\n                        } else {\r\n                            success(id);\r\n                        }\r\n                    } else {\r\n                        fail(null, data.reason);\r\n                    }\r\n                }, function(e) {\r\n                    fail(e, null);\r\n                });\r\n            }\r\n        }\r\n    },\r\n    changeKeyPassword: function(itemObject, success, fail) {\r\n        if (itemObject) {\r\n            var vo = itemObject;\r\n            if (vo.type === \"pfx\") {\r\n                CAPIWS.callFunction({ plugin: \"pfx\", name: \"load_key\", arguments: [vo.disk, vo.path, vo.name, vo.alias] }, function(event, data) {\r\n                    if (data.success) {\r\n                        var id = data.keyId;\r\n                        CAPIWS.callFunction({ name: \"change_password\", plugin: \"pfx\", arguments: [id] }, function(event, data) {\r\n                            if (data.success) {\r\n                                success();\r\n                            } else {\r\n                                fail(null, data.reason);\r\n                            }\r\n                        }, function(e) {\r\n                            fail(e, null);\r\n                        });\r\n                    } else {\r\n                        fail(null, data.reason);\r\n                    }\r\n                }, function(e) {\r\n                    fail(e, null);\r\n                });\r\n            } else if (vo.type === \"ftjc\") {\r\n                CAPIWS.callFunction({ plugin: \"ftjc\", name: \"load_key\", arguments: [vo.cardUID] }, function(event, data) {\r\n                    if (data.success) {\r\n                        var id = data.keyId;\r\n                        CAPIWS.callFunction({ name: \"change_pin\", plugin: \"ftjc\", arguments: [id, '1'] }, function(event, data) {\r\n                            if (data.success) {\r\n                                success();\r\n                            } else {\r\n                                fail(null, data.reason);\r\n                            }\r\n                        }, function(e) {\r\n                            fail(e, null);\r\n                        });\r\n                    } else {\r\n                        fail(null, data.reason);\r\n                    }\r\n                }, function(e) {\r\n                    fail(e, null);\r\n                });\r\n            }\r\n        }\r\n    },\r\n    createPkcs7: function(id, data, timestamper, success, fail) {\r\n        CAPIWS.callFunction({ plugin: \"pkcs7\", name: \"create_pkcs7\", arguments: [btoa(data), id, 'no'] }, function(event, data) {\r\n            if (data.success) {\r\n                var pkcs7 = data.pkcs7_64;\r\n                if (timestamper) {\r\n                    var sn = data.signer_serial_number;\r\n                    timestamper(data.signature_hex, function(tst) {\r\n                        CAPIWS.callFunction({ plugin: \"pkcs7\", name: \"attach_timestamp_token_pkcs7\", arguments: [pkcs7, sn, tst] }, function(event, data) {\r\n                            if (data.success) {\r\n                                var pkcs7tst = data.pkcs7_64;\r\n                                success(pkcs7tst);\r\n                            } else {\r\n                                fail(null, data.reason);\r\n                            }\r\n                        }, function(e) {\r\n                            fail(e, null);\r\n                        });\r\n                    }, fail);\r\n                } else {\r\n                    success(pkcs7);\r\n                }\r\n            } else {\r\n                fail(null, data.reason);\r\n            }\r\n        }, function(e) {\r\n            fail(e, null);\r\n        });\r\n    },\r\n    appendPkcs7Attached: function(id, data, timestamper, success, fail) {\r\n        CAPIWS.callFunction({ plugin: \"pkcs7\", name: \"append_pkcs7_attached\", arguments: [data, id] }, function(event, data) {\r\n            if (data.success) {\r\n                var pkcs7 = data.pkcs7_64;\r\n                if (timestamper) {\r\n                    var sn = data.signer_serial_number;\r\n                    timestamper(data.signature_hex, function(tst) {\r\n                        CAPIWS.callFunction({ plugin: \"pkcs7\", name: \"attach_timestamp_token_pkcs7\", arguments: [pkcs7, sn, tst] }, function(event, data) {\r\n                            if (data.success) {\r\n                                var pkcs7tst = data.pkcs7_64;\r\n                                success(pkcs7tst);\r\n                            } else {\r\n                                fail(null, data.reason);\r\n                            }\r\n                        }, function(e) {\r\n                            fail(e, null);\r\n                        });\r\n                    }, fail);\r\n                } else {\r\n                    success(pkcs7);\r\n                }\r\n            } else {\r\n                fail(null, data.reason);\r\n            }\r\n        }, function(e) {\r\n            fail(e, null);\r\n        });\r\n    },\r\n    _getX500Val: function(s, f) {\r\n        var res = s.splitKeep(/,[A-Z]+=/g, true);\r\n        for (var i in res) {\r\n            var n = res[i].search((i > 0 ? \",\" : \"\") + f + \"=\");\r\n            if (n !== -1) {\r\n                return res[i].slice(n + f.length + 1 + (i > 0 ? 1 : 0));\r\n            }\r\n        }\r\n        return \"\";\r\n    },\r\n    _findCertKeyCertificates: function(itemIdGen, itemUiGen, items, errors, allDisks, diskIndex, params, callback) {\r\n        if (parseInt(diskIndex) + 1 > allDisks.length) {\r\n            callback(params);\r\n            return;\r\n        }\r\n        CAPIWS.callFunction({ plugin: \"certkey\", name: \"list_certificates\", arguments: [allDisks[diskIndex]] }, function(event, data) {\r\n            if (data.success) {\r\n                for (var rec in data.certificates) {\r\n                    var el = data.certificates[rec];\r\n                    var vo = {\r\n                        disk: el.disk,\r\n                        path: el.path,\r\n                        name: el.name,\r\n                        serialNumber: el.serialNumber,\r\n                        subjectName: el.subjectName,\r\n                        validFrom: new Date(el.validFrom),\r\n                        validTo: new Date(el.validTo),\r\n                        issuerName: el.issuerName,\r\n                        publicKeyAlgName: el.publicKeyAlgName,\r\n                        CN: EIMZOClient._getX500Val(el.subjectName, \"CN\"),\r\n                        TIN: EIMZOClient._getX500Val(el.subjectName, \"INITIALS\"),\r\n                        O: EIMZOClient._getX500Val(el.subjectName, \"O\"),\r\n                        T: EIMZOClient._getX500Val(el.subjectName, \"T\"),\r\n                        type: 'certkey'\r\n                    };\r\n                    if (!vo.TIN)\r\n                        continue;\r\n                    var itmkey = itemIdGen(vo, rec);\r\n                    if (params.length === 0) {\r\n                        params.push(itmkey);\r\n                    }\r\n                    var itm = itemUiGen(itmkey, vo);\r\n                    items.push(itm);\r\n                }\r\n            } else {\r\n                errors.push({ r: data.reason });\r\n            }\r\n            EIMZOClient._findCertKeyCertificates(itemIdGen, itemUiGen, items, errors, allDisks, parseInt(diskIndex) + 1, params, callback);\r\n        }, function(e) {\r\n            errors.push({ e: e });\r\n            EIMZOClient._findCertKeyCertificates(itemIdGen, itemUiGen, items, errors, allDisks, parseInt(diskIndex) + 1, params, callback);\r\n        });\r\n    },\r\n    _findCertKeys: function(itemIdGen, itemUiGen, items, errors, callback) {\r\n        var allDisks = [];\r\n        CAPIWS.callFunction({ plugin: \"certkey\", name: \"list_disks\" }, function(event, data) {\r\n            if (data.success) {\r\n                for (var rec in data.disks) {\r\n                    allDisks.push(data.disks[rec]);\r\n                    if (parseInt(rec) + 1 >= data.disks.length) {\r\n                        var params = [];\r\n                        EIMZOClient._findCertKeyCertificates(itemIdGen, itemUiGen, items, errors, allDisks, 0, params, function(params) {\r\n                            callback(params[0]);\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                errors.push({ r: data.reason });\r\n            }\r\n        }, function(e) {\r\n            errors.push({ e: e });\r\n            callback();\r\n        });\r\n    },\r\n    _findPfxCertificates: function(itemIdGen, itemUiGen, items, errors, allDisks, diskIndex, params, callback) {\r\n        if (parseInt(diskIndex) + 1 > allDisks.length) {\r\n            callback(params);\r\n            return;\r\n        }\r\n        CAPIWS.callFunction({ plugin: \"pfx\", name: \"list_certificates\", arguments: [allDisks[diskIndex]] }, function(event, data) {\r\n            if (data.success) {\r\n                for (var rec in data.certificates) {\r\n                    var el = data.certificates[rec];\r\n                    var x500name_ex = el.alias.toUpperCase();\r\n                    x500name_ex = x500name_ex.replace(\"1.2.860.3.16.1.1=\", \"INN=\");\r\n                    x500name_ex = x500name_ex.replace(\"1.2.860.3.16.1.2=\", \"PINFL=\");\r\n                    var vo = {\r\n                        disk: el.disk,\r\n                        path: el.path,\r\n                        name: el.name,\r\n                        alias: el.alias,\r\n                        serialNumber: EIMZOClient._getX500Val(x500name_ex, \"SERIALNUMBER\"),\r\n                        validFrom: new Date(EIMZOClient._getX500Val(x500name_ex, \"VALIDFROM\").replace(/\\./g, \"-\").replace(\" \", \"T\")),\r\n                        validTo: new Date(EIMZOClient._getX500Val(x500name_ex, \"VALIDTO\").replace(/\\./g, \"-\").replace(\" \", \"T\")),\r\n                        CN: EIMZOClient._getX500Val(x500name_ex, \"CN\"),\r\n                        TIN: (EIMZOClient._getX500Val(x500name_ex, \"INN\") ? EIMZOClient._getX500Val(x500name_ex, \"INN\") : EIMZOClient._getX500Val(x500name_ex, \"UID\")),\r\n                        UID: EIMZOClient._getX500Val(x500name_ex, \"UID\"),\r\n                        O: EIMZOClient._getX500Val(x500name_ex, \"O\"),\r\n                        T: EIMZOClient._getX500Val(x500name_ex, \"T\"),\r\n                        type: 'pfx'\r\n                    };\r\n                    if (!vo.TIN)\r\n                        continue;\r\n                    var itmkey = itemIdGen(vo, rec);\r\n                    if (params.length === 0) {\r\n                        params.push(itmkey);\r\n                    }\r\n                    var itm = itemUiGen(itmkey, vo);\r\n                    items.push(itm);\r\n                }\r\n            } else {\r\n                errors.push({ r: data.reason });\r\n            }\r\n            EIMZOClient._findPfxCertificates(itemIdGen, itemUiGen, items, errors, allDisks, parseInt(diskIndex) + 1, params, callback);\r\n        }, function(e) {\r\n            errors.push({ e: e });\r\n            EIMZOClient._findPfxCertificates(itemIdGen, itemUiGen, items, errors, allDisks, parseInt(diskIndex) + 1, params, callback);\r\n        });\r\n    },\r\n    _findPfxs: function(itemIdGen, itemUiGen, items, errors, callback) {\r\n        var allDisks = [];\r\n        CAPIWS.callFunction({ plugin: \"pfx\", name: \"list_disks\" }, function(event, data) {\r\n            if (data.success) {\r\n                var disks = data.disks;\r\n                for (var rec in disks) {\r\n                    allDisks.push(data.disks[rec]);\r\n                    if (parseInt(rec) + 1 >= data.disks.length) {\r\n                        var params = [];\r\n                        EIMZOClient._findPfxCertificates(itemIdGen, itemUiGen, items, errors, allDisks, 0, params, function(params) {\r\n                            callback(params[0]);\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                errors.push({ r: data.reason });\r\n            }\r\n        }, function(e) {\r\n            errors.push({ e: e });\r\n            callback();\r\n        });\r\n    },\r\n    _findCertKeys2: function(itemIdGen, itemUiGen, items, errors, callback) {\r\n        var itmkey0;\r\n        CAPIWS.callFunction({ plugin: \"certkey\", name: \"list_all_certificates\" }, function(event, data) {\r\n            if (data.success) {\r\n                for (var rec in data.certificates) {\r\n                    var el = data.certificates[rec];\r\n                    var vo = {\r\n                        disk: el.disk,\r\n                        path: el.path,\r\n                        name: el.name,\r\n                        serialNumber: el.serialNumber,\r\n                        subjectName: el.subjectName,\r\n                        validFrom: new Date(el.validFrom),\r\n                        validTo: new Date(el.validTo),\r\n                        issuerName: el.issuerName,\r\n                        publicKeyAlgName: el.publicKeyAlgName,\r\n                        CN: EIMZOClient._getX500Val(el.subjectName, \"CN\"),\r\n                        TIN: EIMZOClient._getX500Val(el.subjectName, \"INITIALS\"),\r\n                        O: EIMZOClient._getX500Val(el.subjectName, \"O\"),\r\n                        T: EIMZOClient._getX500Val(el.subjectName, \"T\"),\r\n                        type: 'certkey'\r\n                    };\r\n                    if (!vo.TIN)\r\n                        continue;\r\n                    var itmkey = itemIdGen(vo, rec);\r\n                    if (!itmkey0) {\r\n                        itmkey0 = itmkey;\r\n                    }\r\n                    var itm = itemUiGen(itmkey, vo);\r\n                    items.push(itm);\r\n                }\r\n            } else {\r\n                errors.push({ r: data.reason });\r\n            }\r\n            callback(itmkey0);\r\n        }, function(e) {\r\n            errors.push({ e: e });\r\n            callback(itmkey0);\r\n        });\r\n    },\r\n    _findPfxs2: function(itemIdGen, itemUiGen, items, errors, callback) {\r\n        var itmkey0;\r\n        CAPIWS.callFunction({ plugin: \"pfx\", name: \"list_all_certificates\" }, function(event, data) {\r\n            if (data.success) {\r\n                for (var rec in data.certificates) {\r\n                    var el = data.certificates[rec];\r\n                    var x500name_ex = el.alias.toUpperCase();\r\n                    x500name_ex = x500name_ex.replace(\"1.2.860.3.16.1.1=\", \"INN=\");\r\n                    x500name_ex = x500name_ex.replace(\"1.2.860.3.16.1.2=\", \"PINFL=\");\r\n                    var vo = {\r\n                        disk: el.disk,\r\n                        path: el.path,\r\n                        name: el.name,\r\n                        alias: el.alias,\r\n                        serialNumber: EIMZOClient._getX500Val(x500name_ex, \"SERIALNUMBER\"),\r\n                        validFrom: new Date(EIMZOClient._getX500Val(x500name_ex, \"VALIDFROM\").replace(/\\./g, \"-\").replace(\" \", \"T\")),\r\n                        validTo: new Date(EIMZOClient._getX500Val(x500name_ex, \"VALIDTO\").replace(/\\./g, \"-\").replace(\" \", \"T\")),\r\n                        CN: EIMZOClient._getX500Val(x500name_ex, \"CN\"),\r\n                        TIN: (EIMZOClient._getX500Val(x500name_ex, \"INN\") ? EIMZOClient._getX500Val(x500name_ex, \"INN\") : EIMZOClient._getX500Val(x500name_ex, \"UID\")),\r\n                        UID: EIMZOClient._getX500Val(x500name_ex, \"UID\"),\r\n                        O: EIMZOClient._getX500Val(x500name_ex, \"O\"),\r\n                        T: EIMZOClient._getX500Val(x500name_ex, \"T\"),\r\n                        type: 'pfx'\r\n                    };\r\n                    if (!vo.TIN)\r\n                        continue;\r\n                    var itmkey = itemIdGen(vo, rec);\r\n                    if (!itmkey0) {\r\n                        itmkey0 = itmkey;\r\n                    }\r\n                    var itm = itemUiGen(itmkey, vo);\r\n                    items.push(itm);\r\n                }\r\n            } else {\r\n                errors.push({ r: data.reason });\r\n            }\r\n            callback(itmkey0);\r\n        }, function(e) {\r\n            errors.push({ e: e });\r\n            callback(itmkey0);\r\n        });\r\n    },\r\n    _findTokens2: function(itemIdGen, itemUiGen, items, errors, callback) {\r\n        var itmkey0;\r\n        CAPIWS.callFunction({ plugin: \"ftjc\", name: \"list_all_keys\", arguments: [''] }, function(event, data) {\r\n            if (data.success) {\r\n                for (var rec in data.tokens) {\r\n                    var el = data.tokens[rec];\r\n                    var x500name_ex = el.info.toUpperCase();\r\n                    x500name_ex = x500name_ex.replace(\"1.2.860.3.16.1.1=\", \"INN=\");\r\n                    x500name_ex = x500name_ex.replace(\"1.2.860.3.16.1.2=\", \"PINFL=\");\r\n                    var vo = {\r\n                        cardUID: el.cardUID,\r\n                        statusInfo: el.statusInfo,\r\n                        ownerName: el.ownerName,\r\n                        info: el.info,\r\n                        serialNumber: EIMZOClient._getX500Val(x500name_ex, \"SERIALNUMBER\"),\r\n                        validFrom: new Date(EIMZOClient._getX500Val(x500name_ex, \"VALIDFROM\")),\r\n                        validTo: new Date(EIMZOClient._getX500Val(x500name_ex, \"VALIDTO\")),\r\n                        CN: EIMZOClient._getX500Val(x500name_ex, \"CN\"),\r\n                        TIN: (EIMZOClient._getX500Val(x500name_ex, \"INN\") ? EIMZOClient._getX500Val(x500name_ex, \"INN\") : EIMZOClient._getX500Val(x500name_ex, \"UID\")),\r\n                        UID: EIMZOClient._getX500Val(x500name_ex, \"UID\"),\r\n                        O: EIMZOClient._getX500Val(x500name_ex, \"O\"),\r\n                        T: EIMZOClient._getX500Val(x500name_ex, \"T\"),\r\n                        type: 'ftjc'\r\n                    };\r\n                    if (!vo.TIN)\r\n                        continue;\r\n                    var itmkey = itemIdGen(vo, rec);\r\n                    if (!itmkey0) {\r\n                        itmkey0 = itmkey;\r\n                    }\r\n                    var itm = itemUiGen(itmkey, vo);\r\n                    items.push(itm);\r\n                }\r\n            } else {\r\n                errors.push({ r: data.reason });\r\n            }\r\n            callback(itmkey0);\r\n        }, function(e) {\r\n            errors.push({ e: e });\r\n            callback(itmkey0);\r\n        });\r\n    }\r\n};","C:\\HISOBXONA\\on_doc\\src\\components\\left-sidebar\\left-sidebar.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\env.js",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\notifications\\notifications.component.jsx",[],["327","328"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\account-form\\account-form.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.action-types.js",[],"C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.reducer.js",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\index.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\tty\\create\\create.component.jsx",["329","330","331","332","333"],"import React, { useState, useEffect } from 'react';\r\nimport 'react-datasheet/lib/react-datasheet.css';\r\nimport { Button, Input, Form, Row, Col, DatePicker, message, Radio, Upload } from 'antd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport axios from 'axios';\r\nimport Datasheet from 'react-datasheet';\r\nimport BuyerForm from '../../common/buyer-form.component';\r\nimport SellerForm from '../../common/seller-form.component';\r\nimport { connect } from 'react-redux';\r\nimport { selectCurrentUser, selectToken } from '../../../redux/user/user.selector';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport moment from 'moment';\r\nimport PersonFetch from '../../common/person-fetch/person-fetch.component';\r\nimport { convertProductsToGrid, FIRST_TTY_GRID_ROW } from '../../../utils/main';\r\nimport { \r\n  FullscreenOutlined, \r\n  FullscreenExitOutlined, \r\n  } from '@ant-design/icons';\r\nimport SelectEditor from '../../../components/data-sheet-custom-selector/custom-selector.component';\r\nimport SelectMeasureEditor from '../../../components/data-sheet-custom-measure-selector/custom-selector.component';\r\n\r\n\r\nconst TTYForm = ({ match, token, user }) => {\r\n\r\n  const [form] = Form.useForm();\r\n  const { ttyId } = match.params;\r\n  const [initialData, setInitialData] = useState()\r\n  const [isLoading, setIsloading] = useState(false);\r\n\r\n\r\n  //#region DATA SHEET\r\n\r\n  const [fullView, toglleFullView] = useState(false)\r\n\r\n\r\n  const [grid, setGrid] = useState([\r\n    FIRST_TTY_GRID_ROW,\r\n    [\r\n      { readOnly: true, value: 1 }, //0 ordNo\r\n      { value: \"\" }, //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor }, //2 measure\r\n      { value: '' }, //3 count\r\n      { value: \"\", }, //4 price\r\n      { value: \"\", readOnly: true}, //5 total\r\n      { value: '' }, //6 delivery cost\r\n      { value: \"\", }, //7 Docs\r\n      { value: \"\", }, //8 weight measure method\r\n      { value: \"\", }, //9 item class\r\n      { value: \"\", }, //10 brutto weight\r\n      { value: \"\", }, //11 netto weight                       //12 total\r\n    ], \r\n    [\r\n      { readOnly: true, value:2 }, //0 ordNo\r\n      { value: \"\" }, //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor }, //2 measure\r\n      { value: '' }, //3 count\r\n      { value: \"\", }, //4 price\r\n      { value: \"\", readOnly: true}, //5 total\r\n      { value: '' }, //6 delivery cost\r\n      { value: \"\", }, //7 Docs\r\n      { value: \"\", }, //8 weight measure method\r\n      { value: \"\", }, //9 item class\r\n      { value: \"\", }, //10 brutto weight\r\n      { value: \"\", }, //11 netto weight\r\n    ], \r\n    [\r\n      { readOnly: true, value:3 }, //0 ordNo\r\n      { value: \"\" }, //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor }, //2 measure\r\n      { value: '' }, //3 count\r\n      { value: \"\", }, //4 price\r\n      { value: \"\", readOnly: true}, //5 total\r\n      { value: '' }, //6 delivery cost\r\n      { value: \"\", }, //7 Docs\r\n      { value: \"\", }, //8 weight measure method\r\n      { value: \"\", }, //9 item class\r\n      { value: \"\", }, //10 brutto weight\r\n      { value: \"\", }, //11 netto weight\r\n    ], \r\n    [\r\n      { readOnly: true, value:4 }, //0 ordNo\r\n      { value: \"\" }, //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor }, //2 measure\r\n      { value: '' }, //3 count\r\n      { value: \"\", }, //4 price\r\n      { value: \"\", readOnly: true}, //5 total\r\n      { value: '' }, //6 delivery cost\r\n      { value: \"\", }, //7 Docs\r\n      { value: \"\", }, //8 weight measure method\r\n      { value: \"\", }, //9 item class\r\n      { value: \"\", }, //10 brutto weight\r\n      { value: \"\", }, //11 netto weight\r\n    ], \r\n  ])\r\n\r\n  const handleImportExecl =(value)=>{\r\n    console.log(\"me fired\")\r\n\r\n    if(value.file.status==\"done\"){\r\n      \r\n      const { response } = value.file\r\n\r\n      response.excel.forEach((element, index)=>{\r\n        element[0].value = index + 1;\r\n        element[0].readOnly = true;\r\n        element[2].dataEditor = SelectEditor;\r\n        element[4].dataEditor = SelectMeasureEditor;\r\n      })\r\n\r\n      setGrid([grid[0], ...response.excel])\r\n      console.log(response)\r\n    }\r\n  }\r\n\r\n  //#region data-sheet methods\r\n  const handleRemoveRow = (rowId)=>{\r\n\r\n    grid.splice(rowId, 1)\r\n    setGrid([...grid])\r\n  }\r\n\r\n  const valueRenderer = cell => cell.value;\r\n  const onCellsChanged = changes => {\r\n    changes.forEach(({ cell, row, col, value }, index) => {\r\n        //this sets changed values\r\n        grid[row][col] = { ...grid[row][col], value };\r\n        \r\n\r\n        //Lets calculate\r\n        let priceamount = parseFloat(grid[row][3].value??0) * parseFloat(grid[row][4].value??0);\r\n\r\n        grid[row][5] = {...grid[row][5], value: priceamount ?? 0}\r\n\r\n       \r\n     \r\n    });\r\n     setGrid([...grid]);\r\n  };\r\n\r\n  const handleAddRow = ()=>{\r\n    \r\n    const sampleRow = [\r\n      { readOnly: true, value:    grid.length }, //0 ordNo\r\n      { value: \"\" }, //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor }, //2 measure\r\n      { value: '' }, //3 count\r\n      { value: \"\", }, //4 price\r\n      { value: \"\", readOnly: true}, //5 total\r\n      { value: '' }, //6 delivery cost\r\n      { value: \"\", }, //7 Docs\r\n      { value: \"\", }, //8 weight measure method\r\n      { value: \"\", }, //9 item class\r\n      { value: \"\", }, //10 brutto weight\r\n      { value: \"\", }, //11 netto weight\r\n    ]\r\n\r\n    let newgrid = [...grid, sampleRow];\r\n\r\n     setGrid(newgrid)\r\n  }\r\n\r\n  const onContextMenu = (e, cell, i, j) =>\r\n    cell.readOnly ? e.preventDefault() : null;\r\n//#endregion\r\n\r\n  //#endregion\r\n\r\n\r\n  useEffect(() => {\r\n    if (ttyId) {\r\n\r\n      //fetch fatura data\r\n      axios({\r\n        url: `/api/v1/ttys/${ttyId}`,\r\n        method: \"GET\",\r\n      }).then(res => {\r\n        let data = res.data;\r\n        data.contractDate = moment(data.contractDate);\r\n        data.created_at = moment(data.created_at);\r\n        data.wayBillDate = moment(data.wayBillDate);\r\n        data.tripTicketDate = moment(data.tripTicketDate);\r\n        data.updated_at = moment(data.updated_at);\r\n        console.log(data);\r\n\r\n        setInitialData(res.data);\r\n        form.resetFields();\r\n        setGrid(convertProductsToGrid(res.data.products, \"tty\"))\r\n      }).catch(err => {\r\n        console.log(err);\r\n      })\r\n      //end fetch factura data;\r\n    }\r\n  }, [])\r\n\r\n\r\n  const validateMessages = {\r\n    required: 'Bu maydon majburiy!',\r\n    types: {\r\n      email: '${label} is not a valid email!',\r\n      number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n      range: '${label} must be between ${min} and ${max}',\r\n    },\r\n\r\n  };\r\n\r\n  //#region form methods\r\n\r\n  const handleSubmit = (values) => {\r\n    setIsloading(true);\r\n    console.log(values)\r\n    if (ttyId) {\r\n      axios({\r\n        url: `/api/v1/ttys/${ttyId}`,\r\n        method: 'PATCH',\r\n        data: { tty: values, products: grid }\r\n      }).then(res => {\r\n        setIsloading(false);\r\n        message.success(\"TTY yangilandi!\");\r\n        console.log(res)\r\n      }).catch(err => {\r\n        setIsloading(false)\r\n        message.error(\"TTY yangilashda xatolik!\");\r\n        console.log(err)\r\n      })\r\n    } else {\r\n      axios({\r\n        url: '/api/v1/ttys',\r\n        method: 'post',\r\n        data: { tty: values, products: grid }\r\n      }).then(res => {\r\n        setIsloading(false)\r\n        message.success(\"TTY yaratildi!\");\r\n        console.log(res)\r\n      }).catch(err => {\r\n        setIsloading(false)\r\n        message.error(\"TTY yaratishda xatolik!\");\r\n        console.log(err)\r\n      })\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  //#endregion\r\n\r\n  return (\r\n    <div style={{ padding: 15 }}>\r\n      <Form\r\n        initialValues={initialData}\r\n        form={form}\r\n        name=\"factura\"\r\n        onFinish={handleSubmit}\r\n        scrollToFirstError\r\n        validateMessages={validateMessages}\r\n      >\r\n\r\n        <div className=\"factura-data-sheet-container\">\r\n          <h3>TTY yaratish</h3>\r\n\r\n          <Row justify=\"space-between\">\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  rules={[{ required: true }]}\r\n                  key=\"dyna-form-facutura-no\"\r\n                  name=\"wayBillNo\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder=\"TTY raqami\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">TTY raqami</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  key=\"dyna-form-item-inn-date\"\r\n                  name=\"wayBillDate\"\r\n                  rules={[{ required: true }]}>\r\n                  <DatePicker\r\n                    size=\"large\"\r\n                    placeholder=\"TTY sanasi\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">TTY sanasi</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={24}>\r\n              <Form.Item\r\n                name=\"deliveryType\"\r\n                key=\"deliveryType\"\r\n                initialValue={1}\r\n              >\r\n                <Radio.Group style={{ width: '100%' }} options={[\r\n                  { label: \"Omborxonadan omborxonaga\", value: 1 },\r\n                  { label: \"Sotuvchidan xaridorgacha\", value: 2 }\r\n                ]}\r\n                  optionType=\"button\"\r\n                />\r\n\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div className=\"factura-data-sheet-container\">\r\n          <Row justify=\"space-between\">\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  rules={[{ required: true }]}\r\n                  key=\"dyna-form-item-contract-n0\"\r\n                  name=\"contractNo\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder=\"Shartnoma raqami\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Shartnoma raqami</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  rules={[{ required: true }]}\r\n                  key=\"dyna-form-item-contract-date\"\r\n                  name=\"contractDate\">\r\n                  <DatePicker\r\n                    size=\"large\"\r\n                    placeholder=\"Shartnoma sanasi\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Shartnoma sanasi</span>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  rules={[{ required: true }]}\r\n                  key=\"dyna-form-item-contract-n0-TripTicketNo\"\r\n                  name=\"tripTicketNo\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder=\"Shartnoma raqami\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Yo'l varaqasi raqami</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  rules={[{ required: true }]}\r\n                  key=\"dyna-form-item-contract-date-TripTicketDate\"\r\n                  name=\"tripTicketDate\">\r\n                  <DatePicker\r\n                    size=\"large\"\r\n                    placeholder=\"Shartnoma sanasi\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Yo'l varaqasi sanasi</span>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n        <div className=\"factura-data-sheet-container\">\r\n\r\n          <Row justify=\"space-between\">\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"truckRegNo\"\r\n                  key=\"truckRegNo\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input size=\"large\" placeholder=\"Avtomobil davlat raqami\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Avtomobil davlat raqami</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"truckModel\"\r\n                  key=\"truckModel\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input size=\"large\" placeholder=\"Avtomobil turi\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Avtomobil turi</span>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={24}>\r\n              <Form.Item\r\n                name=\"trailerType\"\r\n                key=\"trailerType\"\r\n                initialValue={1}\r\n              >\r\n                <Radio.Group style={{ width: '100%' }} options={[\r\n                  { label: \"Tirkama\", value: 1 },\r\n                  { label: \"Yarim tirkama\", value: 2 }\r\n                ]}\r\n                  optionType=\"button\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"trailerRegNo\"\r\n                  key=\"TrailerRegNo\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input size=\"large\" placeholder=\"Tirkama davlat raqami\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Tirkama davlat raqami</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"trailerModel\"\r\n                  key=\"TrailerRegNoType\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input size=\"large\" placeholder=\"Tirkama turi\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Tirkama turi</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"driverFio\"\r\n                  key=\"DriverFio\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input size=\"large\" placeholder=\"Haydovchi FIO\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Haydovchi FIO</span>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n        <div className=\"factura-data-sheet-container\">\r\n\r\n          <Row justify=\"space-between\">\r\n            <Col md={11}>\r\n              <SellerForm form={form} docType=\"act\" />\r\n            </Col>\r\n\r\n            <Col md={11}>\r\n              <BuyerForm form={form} docType=\"act\" />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n        <div className=\"factura-data-sheet-container\">\r\n\r\n          <Row justify=\"space-between\">\r\n            <Col md={11}>\r\n              <PersonFetch\r\n                form={form}\r\n                pName=\"carrierName\"\r\n                pTin=\"carrierTin\"\r\n                nameLabel=\"Tashuvchi FIO\"\r\n                tinLabel=\"Tashunchi STIR\" />\r\n            </Col>\r\n\r\n            <Col md={11}>\r\n              <PersonFetch\r\n                form={form}\r\n                pName=\"customerName\"\r\n                pTin=\"customerTin\"\r\n                nameLabel=\"Buyurtmachi FIO\"\r\n                tinLabel=\"Buyurtmachi STIR\" />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n        <div className=\"factura-data-sheet-container\">\r\n          <Row justify=\"space-between\">\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"pointOfLoading\"\r\n                  key=\"PointOfLoading\"\r\n                >\r\n                  <Input size=\"large\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Yuklash manzili</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"pointOfUnloading\"\r\n                  key=\"pointOfUnloading\"\r\n                >\r\n                  <Input size=\"large\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Tushirish mazili</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"pointOfRedirectName\"\r\n                  key=\"pointOfRedirectName\"\r\n                >\r\n                  <Input size=\"large\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Boshqa manzil nomi</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"pointOfRedirectAddress\"\r\n                  key=\"pointOfRedirectAddress\"\r\n                >\r\n                  <Input size=\"large\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Boshqa manzil manzili</span>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n        <div className=\"factura-data-sheet-container\">\r\n          <Row justify=\"space-between\">\r\n\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"giverFio\"\r\n                  key=\"giverFio\"\r\n                >\r\n                  <Input size=\"large\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Topshirdi</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"takerFio\"\r\n                  key=\"takerFio\"\r\n                >\r\n                  <Input size=\"large\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Qabul qildi</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"giverDriverFio\"\r\n                  key=\"giverDriverFio\"\r\n                >\r\n                  <Input size=\"large\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Topshiruvchi haydovchi FIO</span>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"takerDriverFio\"\r\n                  key=\"takerDriverFio\"\r\n                >\r\n                  <Input size=\"large\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Qabulqiluvchi haydovchi FIO</span>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n\r\n            <Col md={24} >\r\n              <Form.Item>\r\n                <Form.Item\r\n                  key=\"selenote-field\"\r\n                  name=\"specialNotes\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder=\"Қўшимча майдон\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Қўшимча майдон</span>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"deliveryDistance\"\r\n                  key=\"deliveryDistance\"\r\n                >\r\n                  <Input size=\"large\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Tashish orligi</span>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"deliveryDistanceInCity\"\r\n                  key=\"deliveryDistanceInCity\"\r\n                >\r\n                  <Input size=\"large\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Tashish orqliq (Shaharda)</span>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n          </Row>\r\n        </div>\r\n\r\n        <div className={`factura-data-sheet-container ${fullView ? 'grid-full-view' : null}`}>\r\n        <div style={{marginBottom: 10, display: 'flex', justifyContent:'space-between'}}>\r\n          <div style={{display: 'flex'}}>\r\n              <Upload \r\n                headers={{\r\n                  Authorization: \"Bearer \" + token\r\n                }}\r\n                multiple={false}\r\n                action=\"http://127.0.0.1:8000/api/v1/factura-products/read-excel\"\r\n                accept=\".xlsx, .xls\" \r\n                onChange={handleImportExecl}>\r\n                \r\n                  <Button style={{marginRight: 10}}>Exceldan yuklash</Button>\r\n               \r\n              </Upload>\r\n              <a target=\"_blank\" href=\"../../../excels/on_doc_factura_products.xlsx\" download>\r\n                <Button >\r\n                  Shablon yuklash\r\n                </Button>\r\n              </a>\r\n            </div>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={fullView ? <FullscreenExitOutlined /> : <FullscreenOutlined />} \r\n              onClick={()=>toglleFullView(!fullView)}>\r\n                { fullView ? \"Kichraytirish\" : \"Kengaytirish\" }\r\n            </Button>\r\n        </div>\r\n        \r\n      <div style={{overflowX: 'auto'}} >\r\n        <div style={{width: '100%'}}>\r\n          <Datasheet\r\n            data={ grid}\r\n            valueRenderer={ valueRenderer}\r\n            onContextMenu={ onContextMenu}\r\n            onCellsChanged={ onCellsChanged}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Button \r\n        size=\"large\" \r\n        style={{marginTop: 20, marginRight: 7, width: 220}} \r\n        type=\"primary\" \r\n        icon={<FontAwesomeIcon \r\n          style={{marginRight: 7}} \r\n          icon={[\"far\", \"plus-square\"]} />} \r\n        onClick={  handleAddRow }>Qo'shish</Button>\r\n      \r\n      <Button \r\n        size=\"large\" \r\n        style={{marginTop: 20, width: 220 }} \r\n        danger\r\n        type=\"primary\" \r\n        icon={<FontAwesomeIcon \r\n          style={{marginRight: 7}} \r\n          icon={[\"far\", \"trash-alt\"]} />} \r\n        onClick={ ()=>{ if(grid.length>1){ handleRemoveRow(grid.length-1) }}  }>Oxirgi qatorni o'chirish</Button>\r\n      </div>\r\n\r\n        <div className=\"factura-data-sheet-container\">\r\n          <Row justify=\"space-around\">\r\n            <Col >\r\n              <Button\r\n                loading={isLoading}\r\n                primary\r\n                htmlType=\"submit\"\r\n                className=\"factra-action-btns save-btn\"\r\n                size=\"large\"\r\n                icon={<FontAwesomeIcon icon=\"save\" className=\"factura-action-btn-icons\" />}>\r\n                Сақлаб қолиш\r\n                  </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                className=\"factra-action-btns sing-btn\"\r\n                size=\"large\"\r\n                icon={<FontAwesomeIcon icon=\"signature\" className=\"factura-action-btn-icons\" />}>\r\n                Имзолаш\r\n                  </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                icon={<FontAwesomeIcon icon=\"ban\" className=\"factura-action-btn-icons\" />}\r\n                danger\r\n                className=\"factra-action-btns\"\r\n                size=\"large\">\r\n                Бекор қилиш\r\n                  </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  token: selectToken,\r\n  user: selectCurrentUser\r\n})\r\n\r\nexport default connect(mapStateToProps)(TTYForm);","C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\view\\view.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\create\\create.component.jsx",["334","335","336","337","338","339"],"import React, { useState, useEffect } from 'react';\r\nimport 'react-datasheet/lib/react-datasheet.css';\r\nimport Datasheet from 'react-datasheet';\r\nimport SelectEditor from '../../../components/data-sheet-custom-selector/custom-selector.component';\r\nimport SelectMeasureEditor from '../../../components/data-sheet-custom-measure-selector/custom-selector.component';\r\nimport { Button, Input, Form, Row, Col, DatePicker, Select, Upload, message } from 'antd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './create.style.scss';\r\nimport axios from 'axios';\r\nimport BuyerForm from '../../common/buyer-form.component';\r\nimport SellerForm from '../../common/seller-form.component';\r\nimport { connect } from 'react-redux';\r\nimport { selectToken } from '../../../redux/user/user.selector';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport moment from 'moment';\r\nimport { \r\n  FullscreenOutlined, \r\n  FullscreenExitOutlined, \r\n  } from '@ant-design/icons';\r\nimport { convertProductsToGrid } from '../../../utils/main';\r\nimport PersonFetch from '../../common/person-fetch/person-fetch.component';\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst FacturaCreateForm = ({ token, match })=> {\r\n\r\n    const {t, i18n} = useTranslation();\r\n  const [form] = Form.useForm();\r\n  const { facturaId } = match.params;\r\n  const [initialData, setInitialData] = useState({facturaType: 0})\r\n  const [facturaType, setFacturaType] = useState();\r\n  const [saveLoading, setSaveLoading] = useState(false);\r\n\r\n\r\n  useEffect(()=>{\r\n    if(facturaId){\r\n\r\n      //fetch fatura data\r\n      axios({\r\n        url: `/api/v1/facturas/${facturaId}`,\r\n        method: \"GET\",\r\n      }).then(res=>{\r\n        let data = res.data;\r\n        data.contractDate=moment(data.contractDate);\r\n        data.created_at=moment(data.created_at);\r\n        data.facturaDate=moment(data.facturaDate);\r\n        data.empowermentDateOfIssue=moment(data.empowermentDateOfIssue);\r\n        data.oldFacturaDate=moment(data.oldFacturaDate);\r\n        data.updated_at=moment(data.updated_at);\r\n        console.log(data);\r\n  \r\n        setInitialData(res.data);\r\n        setGrid(convertProductsToGrid(res.data.factura_products));\r\n        form.resetFields();\r\n      }).catch(err=>{\r\n        console.log(err);\r\n      })\r\n      //end fetch factura data;\r\n    }\r\n  }, [])\r\n  \r\n\r\n  const validateMessages = {\r\n    required: t('Bu maydon majburiy!'),\r\n    types: {\r\n      email: '${label} is not a valid email!',\r\n      number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n      range: '${label} must be between ${min} and ${max}',\r\n    },\r\n    \r\n  };\r\n\r\n  const FACTURA_TYPES = {\r\n    \"STANDARD\": 0,\r\n    \"QOSHIMCHA\": 1,\r\n    \"HARAJATLARNI QOPLASH\": 2,\r\n    \"TOLOVSIZ\": 3,\r\n    \"TUZATUVCHI\": 4\r\n  }\r\n\r\n  const [fullView, toglleFullView] = useState(false)\r\n\r\n  const [grid, setGrid] = useState([\r\n      [\r\n          { readOnly: true, value: '', width: 50 },\r\n          { value: t('Tovar/xizmat nomi'), readOnly: true, width: 200 },\r\n          { value: t('Tovar/xizmatlar yagona elektron milliy katalog identifikatsiya kodi'), readOnly: true, width: 150 },\r\n          { value: t('Tovar/xizmat shtrix kodi'), readOnly: true, width: 100 },\r\n          { value: t(\"O'lchov birligi\"), readOnly: true, width: 100 },\r\n          { value: t(\"Miqdori\"), readOnly: true, width: 100 },\r\n          { value: t(\"Narxi\"), readOnly: true, width: 100 },\r\n          { value: t(\"Aksiz soliq (%)\"), readOnly: true, width: 100 },\r\n          { value: t(\"Aksiz soliq, miqdori\"), readOnly: true, width: 100 },\r\n          { value: t(\"Yetkazib berish narxi\"), readOnly: true, width: 100 },\r\n          { value: t(\"QQS (%)\"), readOnly: true, width: 100 },\r\n          { value: t(\"QQS, miqdori\"), readOnly: true, width: 100 },\r\n          { value: t(\"Umumiy summa\"), readOnly: true, width: 150 },\r\n      ],\r\n    [\r\n      { readOnly: true, value: 1 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectEditor},                //2 catalogCode\r\n      { value: \"\" },                                          //3 shrix code\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //4 measure\r\n      { value: '' },                                          //5 amount\r\n      { value: \"\", },                                         //6 price\r\n      { value: '' },                                          //7 aksiz rate\r\n      { value: '', readOnly: true },                          //8 aksiz amount\r\n      { value: '' },                                          //9 delivery cost\r\n      { value: \"\" },                                          //10 VAT rate\r\n      { value: '', readOnly: true },                          //11 VAT amount\r\n      { value: '', readOnly: true,},                          //12 total\r\n    ], \r\n    [\r\n      { readOnly: true, value: 2 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectEditor},                //2 catalogCode\r\n      { value: \"\" },                                          //3 shrix code\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //4 measure\r\n      { value: '' },                                          //5 amount\r\n      { value: \"\", },                                         //6 price\r\n      { value: '' },                                          //7 aksiz rate\r\n      { value: '', readOnly: true },                          //8 aksiz amount\r\n      { value: '' },                                          //9 delivery cost\r\n      { value: \"\" },                                          //10 VAT rate\r\n      { value: '', readOnly: true },                          //11 VAT amount\r\n      { value: '', readOnly: true,},                          //12 total\r\n    ], \r\n    [\r\n      { readOnly: true, value: 3 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectEditor},                //2 catalogCode\r\n      { value: \"\" },                                          //3 shrix code\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //4 measure\r\n      { value: '' },                                          //5 amount\r\n      { value: \"\", },                                         //6 price\r\n      { value: '' },                                          //7 aksiz rate\r\n      { value: '', readOnly: true },                          //8 aksiz amount\r\n      { value: '' },                                          //9 delivery cost\r\n      { value: \"\" },                                          //10 VAT rate\r\n      { value: '', readOnly: true },                          //11 VAT amount\r\n      { value: '', readOnly: true,},                          //12 total\r\n    ], \r\n    [\r\n      { readOnly: true, value: 4 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectEditor},                //2 catalogCode\r\n      { value: \"\" },                                          //3 shrix code\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //4 measure\r\n      { value: '' },                                          //5 amount\r\n      { value: \"\", },                                         //6 price\r\n      { value: '' },                                          //7 aksiz rate\r\n      { value: '', readOnly: true },                          //8 aksiz amount\r\n      { value: '' },                                          //9 delivery cost\r\n      { value: \"\" },                                          //10 VAT rate\r\n      { value: '', readOnly: true },                          //11 VAT amount\r\n      { value: '', readOnly: true,},                          //12 total\r\n    ], \r\n  ])\r\n\r\n  //#region data-sheet methods\r\n  const handleRemoveRow = (rowId)=>{\r\n    console.log(rowId)\r\n\r\n    grid.splice(rowId, 1)\r\n    setGrid([...grid])\r\n  }\r\n\r\n  const valueRenderer = cell => cell.value;\r\n  const onCellsChanged = changes => {\r\n    changes.forEach(({ cell, row, col, value }, index) => {\r\n        //this sets changed values\r\n        grid[row][col] = { ...grid[row][col], value };\r\n        \r\n\r\n        //Lets calculate\r\n        let priceamount = parseFloat(grid[row][5].value) * parseFloat(grid[row][6].value);\r\n        let aksizamount = parseFloat(priceamount * grid[row][7].value / 100);\r\n        \r\n        grid[row][8]={ value: parseFloat(aksizamount), readOnly: true };\r\n        \r\n        let vatamout = parseFloat(priceamount * parseFloat(grid[row][10].value) / 100);\r\n        \r\n        grid[row][11] = { value: vatamout, readOnly: true }\r\n\r\n        grid[row][12] = { value: priceamount ? parseFloat(priceamount + aksizamount + vatamout + parseFloat(grid[row][9].value, 2), 2) : 0, readOnly: true}\r\n       \r\n     \r\n    });\r\n     setGrid([...grid]);\r\n  };\r\n\r\n  const handleAddRow = ()=>{\r\n    \r\n    const sampleRow = [\r\n      { readOnly: true, value:    grid.length }, //0 ordNo\r\n      { value: \"\" }, //1 product name\r\n      { value: \"\", dataEditor:  SelectEditor}, //2 catalogCode\r\n      { value: \"\" }, //3 shrix code\r\n      { value: \"\", dataEditor:  SelectMeasureEditor }, //4 measure\r\n      { value: '' }, //5 amount\r\n      { value: \"\", }, //6 price\r\n      { value: '' }, //7 aksiz rate\r\n      { value: '', readOnly: true }, //8 aksiz amount\r\n      { value: '' }, //9 delivery cost\r\n      { value: \"\" }, //10 VAT rate\r\n      { value: '', readOnly: true }, //11 VAT amount\r\n      { value: '', readOnly: true }, //12 total\r\n    ]\r\n\r\n    let newgrid = [...grid, sampleRow];\r\n\r\n     setGrid(newgrid)\r\n  }\r\n\r\n  const onContextMenu = (e, cell, i, j) =>\r\n    cell.readOnly ? e.preventDefault() : null;\r\n//#endregion\r\n  \r\n  //#region form methods\r\n\r\n  const handleSubmit = (values)=>{\r\n    setSaveLoading(true);\r\n    console.log(values)\r\n    if(facturaId){\r\n      axios({\r\n        url:`/api/v1/facturas/${facturaId}`,\r\n        method: 'PATCH',\r\n        data: {factura: values, products: grid}\r\n      }).then(res=>{\r\n        if(res.data.ok){\r\n          message.success(t(\"Faktura o'zgartirildi!\"))\r\n        }else{\r\n          message.error(t(\"Faktura o'zgartirishda xatolik!\"));\r\n        }\r\n        console.log(res)\r\n        setSaveLoading(false);\r\n      }).catch(err=>{\r\n        message.error(t(\"Faktura o'zgartirishda xatolik!\"));\r\n        console.log(err)\r\n        setSaveLoading(false);\r\n      })\r\n    } else{\r\n      axios({\r\n        url:'/api/v1/facturas',\r\n        method: 'post',\r\n        data: {factura: values, products: grid}\r\n      }).then(res=>{\r\n        if(res.data.ok){\r\n          message.success(t(\"Faktura yaratili!\"))\r\n        }\r\n        else{\r\n          message.error(t(\"Faktura yaratishda xatolik!\"));\r\n        }\r\n        console.log(res)\r\n        setSaveLoading(false);\r\n      }).catch(err=>{\r\n        console.log(err)\r\n        message.error(t(\"Faktura yaratishda xatolik!\"));\r\n        setSaveLoading(false);\r\n      })\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  const handleImportExecl =(value)=>{\r\n\r\n    if(value.file.status==\"done\"){\r\n      \r\n      const { response } = value.file\r\n\r\n      response.excel.forEach((element, index)=>{\r\n        element[0].value = index + 1;\r\n        element[0].readOnly = true;\r\n        element[2].dataEditor = SelectEditor;\r\n        element[4].dataEditor = SelectMeasureEditor;\r\n      })\r\n\r\n      setGrid([grid[0], ...response.excel])\r\n      console.log(response)\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n  \r\n  return (\r\n    <div style={{padding: 15}}>\r\n      <Form\r\n        initialValues={initialData}\r\n        form={form}\r\n        name=\"factura\"\r\n        onFinish = {handleSubmit}\r\n        scrollToFirstError\r\n        validateMessages={validateMessages}\r\n      >\r\n\r\n      <div className=\"factura-data-sheet-container\">\r\n      <h3>{t(\"Hujjat turi\")}</h3>\r\n      <Row justify=\"space-between\">\r\n          <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                key=\"dyna-form-facutura-no\"\r\n                name=\"facturaType\"\r\n                >\r\n                  <Select\r\n                    onChange={setFacturaType}\r\n                    bordered={false}\r\n                    size=\"large\"\r\n                    placeholder=\"Faktura turi\">\r\n                      <Option value={FACTURA_TYPES[\"STANDARD\"]}>{t(\"Standard\")}</Option>\r\n                      <Option value={FACTURA_TYPES[\"QOSHIMCHA\"]}>{t(\"Qo'shimcha\")}</Option>\r\n                      <Option value={FACTURA_TYPES[\"HARAJATLARNI QOPLASH\"]}>{t(\"Harajatni qoplash\")}</Option>\r\n                      <Option value={FACTURA_TYPES[\"TOLOVSIZ\"]}>{t(\"To'lovsiz\")}</Option>\r\n                      <Option value={FACTURA_TYPES[\"TUZATUVCHI\"]}>{t(\"Tuzatuvchi\")}</Option>\r\n                    </Select>\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">{t(\"Faktura turi\")}</span>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col md={facturaType===FACTURA_TYPES[\"QOSHIMCHA\"] || facturaType===FACTURA_TYPES[\"TUZATUVCHI\"] ? 11 : 0}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                key=\"dyna-form-facutura-no-old\"\r\n                name=\"oldFacturaId\">\r\n                  <Input\r\n                    rules={[{required: true}]}\r\n                    size=\"large\"\r\n                    placeholder=\"Eski faktura ID\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">{t(\"Eski faktura ID\")}</span>\r\n              </Form.Item>\r\n          </Col>\r\n      </Row>  \r\n      <Row justify=\"space-between\">\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                rules={[{required: true}]}\r\n                key=\"dyna-form-facutura-no\"\r\n                name=\"facturaNo\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder={t(\"Faktura raqami\")} />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">{t(\"Faktura raqami\")}</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                key=\"dyna-form-item-inn-date\"\r\n                name=\"facturaDate\"\r\n                rules={[{required: true}]}>\r\n                  <DatePicker                \r\n                    size=\"large\"\r\n                    placeholder={t(\"Faktura sanasi\")} />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">{t(\"Faktura sanasi\")}</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                rules={[{required: true}]}\r\n                key=\"dyna-form-item-contract-n0\"\r\n                name=\"contractNo\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder={t(\"Shartnoma raqami\")} />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">{t(\"Shartnoma raqami\")}</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                rules={[{required: true}]}\r\n                key=\"dyna-form-item-contract-date\"\r\n                name=\"contractDate\">\r\n                  <DatePicker\r\n                    size=\"large\"\r\n                    placeholder={t(\"Shartnoma sanasi\")} />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">{t(\"Shartnoma sanasi\")}</span>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n      </div>\r\n\r\n      <div className=\"factura-data-sheet-container\">\r\n        \r\n        <Row justify=\"space-between\">\r\n        <Col md={11}>  \r\n          <SellerForm form={form} />\r\n        </Col>\r\n\r\n        <Col md={11}>\r\n          <BuyerForm form={ form } docType=\"factura\" />\r\n        </Col>\r\n      </Row>\r\n      </div>\r\n      <div className={`factura-data-sheet-container ${fullView ? 'grid-full-view' : null}`}>\r\n        <div style={{marginBottom: 10, display: 'flex', justifyContent:'space-between'}}>\r\n          <div style={{display: 'flex'}}>\r\n              <Upload \r\n                headers={{\r\n                  Authorization: \"Bearer \" + token\r\n                }}\r\n                multiple={false}\r\n                action=\"http://127.0.0.1:8000/api/v1/factura-products/read-excel\"\r\n                accept=\".xlsx, .xls\" \r\n                onChange={handleImportExecl}>\r\n                \r\n                  <Button style={{marginRight: 10}}>{t(\"Exceldan yuklash\")}</Button>\r\n               \r\n              </Upload>\r\n              <a target=\"_blank\" href=\"../../../excels/on_doc_factura_products.xlsx\" download>\r\n                <Button >\r\n                    {t(\"Shablonni yuklash\")}\r\n                </Button>\r\n              </a>\r\n            </div>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={fullView ? <FullscreenExitOutlined /> : <FullscreenOutlined />} \r\n              onClick={()=>toglleFullView(!fullView)}>\r\n                { fullView ? t(\"Kichraytirish\") : t(\"Kengaytirish\") }\r\n            </Button>\r\n        </div>\r\n        \r\n      <div style={{overflowX: 'auto'}} >\r\n        <div style={{width: '100%'}}>\r\n          <Datasheet\r\n            data={ grid}\r\n            valueRenderer={ valueRenderer}\r\n            onContextMenu={ onContextMenu}\r\n            onCellsChanged={ onCellsChanged}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Button \r\n        size=\"large\" \r\n        style={{marginTop: 20, marginRight: 7, width: 220}} \r\n        type=\"primary\" \r\n        icon={<FontAwesomeIcon \r\n          style={{marginRight: 7}} \r\n          icon={[\"far\", \"plus-square\"]} />} \r\n        onClick={  handleAddRow }>{t(\"Qo'shish\")}</Button>\r\n      \r\n      <Button \r\n        size=\"large\" \r\n        style={{marginTop: 20, width: 220 }} \r\n        danger\r\n        type=\"primary\" \r\n        icon={<FontAwesomeIcon \r\n          style={{marginRight: 7}} \r\n          icon={[\"far\", \"trash-alt\"]} />} \r\n        onClick={ ()=>{ if(grid.length>1){ handleRemoveRow(grid.length-1) }}  }>{t(\"Oxirgi qatorni o'chirish\")}</Button>\r\n      </div>\r\n          \r\n        <div className=\"factura-data-sheet-container\">\r\n\r\n          <Row justify=\"space-between\">\r\n            <Col md={5} >\r\n              <Form.Item>\r\n                <Form.Item \r\n              key=\"empowerment-no\"\r\n              name=\"empowermentNo\">\r\n                <Input\r\n                  size=\"large\"\r\n                  placeholder={t(\"Ishonchnoma raqami\")} />\r\n              </Form.Item>\r\n                <span className=\"custom-input-label-1\">{t(\"Ishonchnoma raqami\")}</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={5}>\r\n              <Form.Item>\r\n                <Form.Item \r\n              key=\"seler-account-empowerment-dateof-issue\"\r\n              name=\"empowermentDateOfIssue\">\r\n                <DatePicker\r\n                  size=\"large\"\r\n                  placeholder={t(\"Ishonchnoma sanasi\")} />\r\n              </Form.Item>\r\n                <span className=\"custom-input-label-1\">{t(\"Ishonchnoma sanasi\")}</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12}>\r\n              <PersonFetch \r\n                pName=\"agentFio\"\r\n                pTin=\"agentTin\"\r\n                nameLabel={t(\"Ma'sul shaxs FIO\")}\r\n                tinLabel={t(\"STIR\")}\r\n                tinCol={11}\r\n                nameCol={11}\r\n                form={form}\r\n              />\r\n            </Col>\r\n          \r\n          </Row>\r\n\r\n         \r\n\r\n<Row justify=\"space-between\">\r\n  <Col md={24} >\r\n    <Form.Item>\r\n      <Form.Item \r\n    key=\"selenote-field\"\r\n    name=\"notes\">\r\n      <Input\r\n        size=\"large\"\r\n        placeholder={t(\"Qo'shimcha ma'lumotlar\")} />\r\n    </Form.Item>\r\n      <span className=\"custom-input-label-1\">{t(\"Qo'shimcha ma'lumotlar\")}</span>\r\n    </Form.Item>\r\n  </Col>\r\n  \r\n</Row>\r\n</div>\r\n          <div className=\"factura-data-sheet-container\">\r\n            <Row justify=\"space-around\">\r\n              <Col >\r\n                <Button \r\n                  loading={saveLoading}\r\n                  primary\r\n                  htmlType=\"submit\"\r\n                  className=\"factra-action-btns save-btn\" \r\n                  size=\"large\"\r\n                  icon={<FontAwesomeIcon icon=\"save\" className=\"factura-action-btn-icons\"  />}>\r\n                    {t(\"Saqlash\")}\r\n                  </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button \r\n                  className=\"factra-action-btns sing-btn\" \r\n                  size=\"large\"\r\n                  icon={<FontAwesomeIcon icon=\"signature\" className=\"factura-action-btn-icons\" />}>\r\n                    {t(\"Imzolash\")}\r\n                  </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button \r\n                  icon={<FontAwesomeIcon icon=\"ban\" className=\"factura-action-btn-icons\" />} \r\n                  danger \r\n                  className=\"factra-action-btns\" \r\n                  size=\"large\">\r\n                    {t(\"Bekor qilish\")}\r\n                  </Button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <Form.Item\r\n      key=\"hidden-factura-id\"\r\n      name=\"facturaId\"\r\n      >\r\n        <Input \r\n        type=\"hidden\"\r\n        />\r\n\r\n      </Form.Item>\r\n      <Form.Item\r\n      key=\"hidden-factura-product-id\"\r\n      name=\"facturaProductId\"\r\n      >\r\n        <Input \r\n        type=\"hidden\"\r\n        />\r\n\r\n      </Form.Item>\r\n\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  token: selectToken\r\n})\r\n\r\nexport default connect(mapStateToProps)(FacturaCreateForm);","C:\\HISOBXONA\\on_doc\\src\\cabinet\\act\\view\\view.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\person-fetch\\person-fetch.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\components\\admin-card\\admin-card.component.jsx",["340","341","342"],"import React from 'react';\r\nimport './admin-card.style.scss';\r\nimport { Badge, Card } from 'antd';\r\nimport {PlusCircleTwoTone} from '@ant-design/icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AdminCard = ({ data })=>{\r\n    const {title, icon, color, count} = data\r\n    return(\r\n    <Card className=\"admin-card-container\" >\r\n        <div className={`admin-card-icon-field admin-card-${color}`} ><FontAwesomeIcon icon={icon} className=\"admin-card-icon\"/></div>\r\n        <div className=\"admin-card-title\">{title}</div>\r\n        <div className=\"admin-card-content\">{count}</div>\r\n        \r\n    </Card>\r\n)}\r\n\r\nexport default AdminCard;",["343","344"],"C:\\HISOBXONA\\on_doc\\src\\components\\data-sheet-custom-selector\\custom-selector.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\components\\data-sheet-custom-measure-selector\\custom-selector.component.jsx",["345","346","347","348"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\contract\\create\\create.component.jsx",["349","350","351","352","353","354","355","356"],"C:\\HISOBXONA\\on_doc\\src\\reportWebVitals.js",[],"C:\\HISOBXONA\\on_doc\\src\\frontend\\login\\login.component.jsx",["357","358","359"],"C:\\HISOBXONA\\on_doc\\src\\components\\language-dropdown\\locale-dropdown.jsx",["360"],"import React, { useState, useEffect } from 'react';\r\n//import { connect } from 'react-redux';\r\n//import { setUserLocale } from '../../redux/user/user.actions';\r\n//import { createStructuredSelector } from 'reselect';\r\n//import { selectUserLocale } from '../../redux/user/user.selector';\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { useTranslation } from 'react-i18next';\r\nimport i18next from \"i18next\";\r\n\r\nconst LanguagesDropdown = ({ locale, changeLocale }) => {\r\n    const { i18n } = useTranslation();\r\n\r\n    const [activeLang, setActiveLang] = useState(i18next.language);\r\n\r\n    useEffect(()=>{\r\n        setActiveLang(i18next.language)\r\n    }, [i18next.language])\r\n\r\n    const languagesMenu = (\r\n        <Menu>\r\n            <Menu.Item onClick={() => { \r\n                //changeLocale('uz'); \r\n                i18n.changeLanguage('uz') \r\n                }}>\r\n                <img style={{ width: 25, borderRadius: '50%' }} alt=\"languange\" src=\"/images/uz.png\" /> O'zb\r\n            </Menu.Item>\r\n            <Menu.Item onClick={() => {\r\n                //changeLocale('uz');\r\n                i18n.changeLanguage('uz-Cyrl')\r\n            }}>\r\n                <img style={{ width: 25, borderRadius: '50%' }} alt=\"languange\" src=\"/images/uz.png\" /> Ўзб\r\n            </Menu.Item>\r\n            <Menu.Item onClick={() => { \r\n                //changeLocale('ru'); \r\n                i18n.changeLanguage('ru') \r\n            }}>\r\n                <img style={{ width: 25, borderRadius: '50%' }} alt=\"languange\" src=\"/images/ru.png\" /> Pyc\r\n            </Menu.Item>\r\n            <Menu.Item onClick={() => { \r\n                //changeLocale('en'); \r\n                i18n.changeLanguage('en') \r\n            }}>\r\n                <img style={{ width: 25, borderRadius: '50%' }} alt=\"languange\" src=\"/images/en.png\" /> Eng\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    return (<span className=\"trigger text-float-right\">\r\n        <Dropdown overlay={languagesMenu}>\r\n            <img style={{ width: 25, borderRadius: '50%', marginRight:30 }} alt=\"languange\" src={`/images/${activeLang===\"uz-Cyrl\"?\"uz\": activeLang}.png`} />\r\n        </Dropdown>\r\n    </span>)\r\n}\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//     changeLocale: locale => dispatch(setUserLocale(locale))\r\n// })\r\n\r\n// const mapStateToProps = createStructuredSelector({\r\n//     locale: selectUserLocale\r\n// })\r\n\r\n//export default connect(mapStateToProps, mapDispatchToProps)(LanguagesDropdown);\r\nexport default LanguagesDropdown;","C:\\HISOBXONA\\on_doc\\src\\frontend\\choose_company\\choose-company.component.jsx",["361"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\profile\\profile.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\password-change\\password-change.component.jsx",["362"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Form, Row, Col, Input, Button } from 'antd'\r\nimport React, {useState} from 'react'\r\n\r\nconst PasswordChange = () => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    \r\n    const handleFinish = values=>{\r\n        console.log(values)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                onFinish={handleFinish}\r\n            >\r\n                <Row justify=\"space-between\">\r\n                    <Col md={11}>\r\n                        <Form.Item>\r\n                            <Form.Item\r\n                                key={`dyna-form-facutura-no-old-tin`}\r\n                                name=\"password\"\r\n                            >\r\n                                <Input.Password\r\n                                    rules={[{ required: true }]}\r\n                                    size=\"large\"\r\n                                />\r\n                            </Form.Item>\r\n                            <span className=\"custom-input-label-1\">Yangi parol</span>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col md={11}>\r\n                        <Form.Item>\r\n                            <Form.Item\r\n                                key={`dyna-form-facutura-no-old-tin`}\r\n                                name=\"password-confirm\"\r\n                            >\r\n                                <Input.Password\r\n                                    rules={[{ required: true }]}\r\n                                    size=\"large\"\r\n                                />\r\n                            </Form.Item>\r\n                            <span className=\"custom-input-label-1\">Prolni tasdiqlang</span>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col md={11}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            loading={loading}\r\n                            className=\"factra-action-btns sing-btn\"\r\n                            size=\"large\"\r\n                            icon={<FontAwesomeIcon icon=\"save\" className=\"factura-action-btn-icons\" />}>\r\n                            Saqlash\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasswordChange\r\n","C:\\HISOBXONA\\on_doc\\src\\redux\\root-reducer.js",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\seller-form.component.jsx",["363"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\user-products\\user-products.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\frontend\\home\\home.component.jsx",["364","365","366"],"import React, { useState } from 'react';\r\nimport Header from '../../components/header/header.component';\r\n\r\nconst Home = ({})=>{\r\n\r\n    \r\n\r\n    return<div>\r\n        <div>\r\n            {/* <Header /> */}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Home;","C:\\HISOBXONA\\on_doc\\src\\translate.js",[],"C:\\HISOBXONA\\on_doc\\src\\utils\\utils.js",[],{"ruleId":"367","replacedBy":"368"},{"ruleId":"369","replacedBy":"370"},{"ruleId":"367","replacedBy":"371"},{"ruleId":"369","replacedBy":"372"},{"ruleId":"367","replacedBy":"373"},{"ruleId":"369","replacedBy":"374"},{"ruleId":"367","replacedBy":"375"},{"ruleId":"369","replacedBy":"376"},{"ruleId":"367","replacedBy":"377"},{"ruleId":"369","replacedBy":"378"},{"ruleId":"367","replacedBy":"379"},{"ruleId":"369","replacedBy":"380"},{"ruleId":"381","severity":1,"message":"382","line":1,"column":8,"nodeType":"383","messageId":"384","endLine":1,"endColumn":13},{"ruleId":"367","replacedBy":"385"},{"ruleId":"369","replacedBy":"386"},{"ruleId":"381","severity":1,"message":"387","line":2,"column":8,"nodeType":"383","messageId":"384","endLine":2,"endColumn":13},{"ruleId":"381","severity":1,"message":"388","line":4,"column":10,"nodeType":"383","messageId":"384","endLine":4,"endColumn":19},{"ruleId":"381","severity":1,"message":"389","line":7,"column":10,"nodeType":"383","messageId":"384","endLine":7,"endColumn":14},{"ruleId":"381","severity":1,"message":"390","line":75,"column":10,"nodeType":"383","messageId":"384","endLine":75,"endColumn":22},{"ruleId":"391","severity":1,"message":"392","line":470,"column":9,"nodeType":"393","endLine":470,"endColumn":73},{"ruleId":"367","replacedBy":"394"},{"ruleId":"369","replacedBy":"395"},{"ruleId":"381","severity":1,"message":"396","line":6,"column":53,"nodeType":"383","messageId":"384","endLine":6,"endColumn":59},{"ruleId":"397","severity":1,"message":"398","line":60,"column":6,"nodeType":"399","endLine":60,"endColumn":8,"suggestions":"400"},{"ruleId":"401","severity":1,"message":"402","line":66,"column":14,"nodeType":"403","messageId":"404","endLine":66,"endColumn":46},{"ruleId":"401","severity":1,"message":"402","line":67,"column":15,"nodeType":"403","messageId":"404","endLine":67,"endColumn":48},{"ruleId":"401","severity":1,"message":"402","line":70,"column":14,"nodeType":"403","messageId":"404","endLine":70,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":210,"column":25,"nodeType":"407","messageId":"408","endLine":210,"endColumn":27},{"ruleId":"405","severity":1,"message":"406","line":174,"column":22,"nodeType":"407","messageId":"408","endLine":174,"endColumn":24},{"ruleId":"381","severity":1,"message":"396","line":5,"column":53,"nodeType":"383","messageId":"384","endLine":5,"endColumn":59},{"ruleId":"397","severity":1,"message":"409","line":53,"column":6,"nodeType":"399","endLine":53,"endColumn":8,"suggestions":"410"},{"ruleId":"401","severity":1,"message":"402","line":59,"column":14,"nodeType":"403","messageId":"404","endLine":59,"endColumn":46},{"ruleId":"401","severity":1,"message":"402","line":60,"column":15,"nodeType":"403","messageId":"404","endLine":60,"endColumn":48},{"ruleId":"401","severity":1,"message":"402","line":63,"column":14,"nodeType":"403","messageId":"404","endLine":63,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":221,"column":25,"nodeType":"407","messageId":"408","endLine":221,"endColumn":27},{"ruleId":"367","replacedBy":"411"},{"ruleId":"369","replacedBy":"412"},{"ruleId":"381","severity":1,"message":"388","line":1,"column":27,"nodeType":"383","messageId":"384","endLine":1,"endColumn":36},{"ruleId":"381","severity":1,"message":"387","line":5,"column":8,"nodeType":"383","messageId":"384","endLine":5,"endColumn":13},{"ruleId":"381","severity":1,"message":"413","line":11,"column":9,"nodeType":"383","messageId":"384","endLine":11,"endColumn":16},{"ruleId":"381","severity":1,"message":"414","line":27,"column":12,"nodeType":"383","messageId":"384","endLine":27,"endColumn":19},{"ruleId":"381","severity":1,"message":"415","line":27,"column":21,"nodeType":"383","messageId":"384","endLine":27,"endColumn":31},{"ruleId":"381","severity":1,"message":"416","line":1,"column":8,"nodeType":"383","messageId":"384","endLine":1,"endColumn":14},{"ruleId":"417","severity":1,"message":"418","line":106,"column":13,"nodeType":"419","messageId":"420","endLine":116,"endColumn":14},{"ruleId":"417","severity":1,"message":"418","line":120,"column":13,"nodeType":"419","messageId":"420","endLine":132,"endColumn":14},{"ruleId":"417","severity":1,"message":"418","line":135,"column":13,"nodeType":"419","messageId":"420","endLine":154,"endColumn":14},{"ruleId":"417","severity":1,"message":"418","line":158,"column":13,"nodeType":"419","messageId":"420","endLine":176,"endColumn":14},{"ruleId":"381","severity":1,"message":"421","line":209,"column":7,"nodeType":"383","messageId":"384","endLine":209,"endColumn":29},{"ruleId":"422","severity":1,"message":"423","line":269,"column":31,"nodeType":"403","messageId":"424","endLine":269,"endColumn":32,"suggestions":"425"},{"ruleId":"397","severity":1,"message":"426","line":59,"column":8,"nodeType":"399","endLine":59,"endColumn":10,"suggestions":"427"},{"ruleId":"367","replacedBy":"428"},{"ruleId":"369","replacedBy":"429"},{"ruleId":"397","severity":1,"message":"430","line":27,"column":7,"nodeType":"399","endLine":27,"endColumn":9,"suggestions":"431"},{"ruleId":"432","severity":1,"message":"433","line":24,"column":1,"nodeType":"434","endLine":24,"endColumn":37},{"ruleId":"367","replacedBy":"435"},{"ruleId":"369","replacedBy":"436"},{"ruleId":"381","severity":1,"message":"437","line":1,"column":15,"nodeType":"383","messageId":"384","endLine":1,"endColumn":19},{"ruleId":"367","replacedBy":"438"},{"ruleId":"369","replacedBy":"439"},{"ruleId":"440","severity":1,"message":"441","line":1,"column":1,"nodeType":"442","messageId":"408","endLine":40,"endColumn":2},{"ruleId":"405","severity":1,"message":"443","line":4,"column":18,"nodeType":"407","messageId":"408","endLine":4,"endColumn":20},{"ruleId":"405","severity":1,"message":"406","line":7,"column":38,"nodeType":"407","messageId":"408","endLine":7,"endColumn":40},{"ruleId":"381","severity":1,"message":"444","line":17,"column":13,"nodeType":"383","messageId":"384","endLine":17,"endColumn":14},{"ruleId":"405","severity":1,"message":"406","line":25,"column":35,"nodeType":"407","messageId":"408","endLine":25,"endColumn":37},{"ruleId":"405","severity":1,"message":"443","line":26,"column":27,"nodeType":"407","messageId":"408","endLine":26,"endColumn":29},{"ruleId":"445","severity":1,"message":"446","line":33,"column":17,"nodeType":"383","messageId":"447","endLine":33,"endColumn":21},{"ruleId":"367","replacedBy":"448"},{"ruleId":"369","replacedBy":"449"},{"ruleId":"405","severity":1,"message":"406","line":99,"column":25,"nodeType":"407","messageId":"408","endLine":99,"endColumn":27},{"ruleId":"397","severity":1,"message":"450","line":193,"column":6,"nodeType":"399","endLine":193,"endColumn":8,"suggestions":"451"},{"ruleId":"401","severity":1,"message":"402","line":199,"column":14,"nodeType":"403","messageId":"404","endLine":199,"endColumn":46},{"ruleId":"401","severity":1,"message":"402","line":200,"column":15,"nodeType":"403","messageId":"404","endLine":200,"endColumn":48},{"ruleId":"401","severity":1,"message":"402","line":203,"column":14,"nodeType":"403","messageId":"404","endLine":203,"endColumn":58},{"ruleId":"381","severity":1,"message":"452","line":28,"column":15,"nodeType":"383","messageId":"384","endLine":28,"endColumn":19},{"ruleId":"397","severity":1,"message":"453","line":61,"column":6,"nodeType":"399","endLine":61,"endColumn":8,"suggestions":"454"},{"ruleId":"401","severity":1,"message":"402","line":67,"column":14,"nodeType":"403","messageId":"404","endLine":67,"endColumn":46},{"ruleId":"401","severity":1,"message":"402","line":68,"column":15,"nodeType":"403","messageId":"404","endLine":68,"endColumn":48},{"ruleId":"401","severity":1,"message":"402","line":71,"column":14,"nodeType":"403","messageId":"404","endLine":71,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":272,"column":25,"nodeType":"407","messageId":"408","endLine":272,"endColumn":27},{"ruleId":"381","severity":1,"message":"455","line":3,"column":10,"nodeType":"383","messageId":"384","endLine":3,"endColumn":15},{"ruleId":"381","severity":1,"message":"456","line":4,"column":9,"nodeType":"383","messageId":"384","endLine":4,"endColumn":26},{"ruleId":"381","severity":1,"message":"389","line":6,"column":10,"nodeType":"383","messageId":"384","endLine":6,"endColumn":14},{"ruleId":"367","replacedBy":"457"},{"ruleId":"369","replacedBy":"458"},{"ruleId":"381","severity":1,"message":"459","line":2,"column":9,"nodeType":"383","messageId":"384","endLine":2,"endColumn":18},{"ruleId":"381","severity":1,"message":"460","line":2,"column":20,"nodeType":"383","messageId":"384","endLine":2,"endColumn":27},{"ruleId":"381","severity":1,"message":"396","line":3,"column":8,"nodeType":"383","messageId":"384","endLine":3,"endColumn":14},{"ruleId":"381","severity":1,"message":"461","line":14,"column":25,"nodeType":"383","messageId":"384","endLine":14,"endColumn":33},{"ruleId":"381","severity":1,"message":"462","line":59,"column":13,"nodeType":"383","messageId":"384","endLine":59,"endColumn":22},{"ruleId":"381","severity":1,"message":"463","line":60,"column":13,"nodeType":"383","messageId":"384","endLine":60,"endColumn":24},{"ruleId":"381","severity":1,"message":"464","line":61,"column":13,"nodeType":"383","messageId":"384","endLine":61,"endColumn":25},{"ruleId":"397","severity":1,"message":"465","line":88,"column":6,"nodeType":"399","endLine":88,"endColumn":8,"suggestions":"466"},{"ruleId":"401","severity":1,"message":"402","line":94,"column":14,"nodeType":"403","messageId":"404","endLine":94,"endColumn":46},{"ruleId":"401","severity":1,"message":"402","line":95,"column":15,"nodeType":"403","messageId":"404","endLine":95,"endColumn":48},{"ruleId":"401","severity":1,"message":"402","line":98,"column":14,"nodeType":"403","messageId":"404","endLine":98,"endColumn":58},{"ruleId":"405","severity":1,"message":"406","line":254,"column":27,"nodeType":"407","messageId":"408","endLine":254,"endColumn":29},{"ruleId":"381","severity":1,"message":"467","line":15,"column":9,"nodeType":"383","messageId":"384","endLine":15,"endColumn":15},{"ruleId":"397","severity":1,"message":"468","line":44,"column":8,"nodeType":"399","endLine":44,"endColumn":10,"suggestions":"469"},{"ruleId":"381","severity":1,"message":"470","line":48,"column":26,"nodeType":"383","messageId":"384","endLine":48,"endColumn":41},{"ruleId":"397","severity":1,"message":"471","line":17,"column":8,"nodeType":"399","endLine":17,"endColumn":26,"suggestions":"472"},{"ruleId":"397","severity":1,"message":"473","line":39,"column":8,"nodeType":"399","endLine":39,"endColumn":10,"suggestions":"474"},{"ruleId":"381","severity":1,"message":"415","line":7,"column":21,"nodeType":"383","messageId":"384","endLine":7,"endColumn":31},{"ruleId":"405","severity":1,"message":"406","line":21,"column":16,"nodeType":"407","messageId":"408","endLine":21,"endColumn":18},{"ruleId":"381","severity":1,"message":"475","line":1,"column":17,"nodeType":"383","messageId":"384","endLine":1,"endColumn":25},{"ruleId":"381","severity":1,"message":"476","line":2,"column":8,"nodeType":"383","messageId":"384","endLine":2,"endColumn":14},{"ruleId":"477","severity":1,"message":"478","line":4,"column":15,"nodeType":"479","messageId":"408","endLine":4,"endColumn":17},"no-native-reassign",["480"],"no-negated-in-lhs",["481"],["480"],["481"],["480"],["481"],["480"],["481"],["480"],["481"],["480"],["481"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar",["480"],["481"],"'axios' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'filteredInfo' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["480"],["481"],"'Select' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'actId' and 'form'. Either include them or remove the dependency array.","ArrayExpression",["482"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'empowermentId' and 'form'. Either include them or remove the dependency array.",["483"],["480"],["481"],"'TabPane' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'moment' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'FACTURA_PRODUCT_FIELDS' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\/.","unnecessaryEscape",["484","485"],"React Hook useEffect has a missing dependency: 'setData'. Either include it or remove the dependency array. If 'setData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["486"],["480"],["481"],"React Hook useEffect has missing dependencies: 'form' and 'notificationId'. Either include them or remove the dependency array.",["487"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["480"],["481"],"'call' is defined but never used.",["480"],["481"],"no-extend-native","String prototype is read only, properties should not be added.","AssignmentExpression","Expected '!==' and instead saw '!='.","'r' is assigned a value but never used.","no-redeclare","'part' is already defined.","redeclared",["480"],["481"],"React Hook useEffect has missing dependencies: 'form' and 'ttyId'. Either include them or remove the dependency array.",["488"],"'i18n' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'facturaId' and 'form'. Either include them or remove the dependency array.",["489"],"'Badge' is defined but never used.","'PlusCircleTwoTone' is defined but never used.",["480"],["481"],"'ENTER_KEY' is defined but never used.","'TAB_KEY' is defined but never used.","'onRevert' is assigned a value but never used.","'workPhone' is assigned a value but never used.","'physicalTin' is assigned a value but never used.","'physicalName' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'contractId' and 'form'. Either include them or remove the dependency array.",["490"],"'Option' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'eKeys'. Either include it or remove the dependency array. You can also do a functional update 'setEKeys(e => ...)' if you only need 'eKeys' in the 'setEKeys' call.",["491"],"'setKeyIsLoading' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'i18next.language'. Either exclude it or remove the dependency array. Outer scope values like 'i18next.language' aren't valid dependencies because mutating them doesn't re-render the component.",["492"],"React Hook useEffect has missing dependencies: 'setUserComps' and 'user.username'. Either include them or remove the dependency array. If 'setUserComps' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["493"],"'useState' is defined but never used.","'Header' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","no-global-assign","no-unsafe-negation",{"desc":"494","fix":"495"},{"desc":"496","fix":"497"},{"messageId":"498","fix":"499","desc":"500"},{"messageId":"501","fix":"502","desc":"503"},{"desc":"504","fix":"505"},{"desc":"506","fix":"507"},{"desc":"508","fix":"509"},{"desc":"510","fix":"511"},{"desc":"512","fix":"513"},{"desc":"514","fix":"515"},{"desc":"516","fix":"517"},{"desc":"518","fix":"519"},"Update the dependencies array to be: [actId, form]",{"range":"520","text":"521"},"Update the dependencies array to be: [empowermentId, form]",{"range":"522","text":"523"},"removeEscape",{"range":"524","text":"525"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"526","text":"527"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [setData]",{"range":"528","text":"529"},"Update the dependencies array to be: [form, notificationId]",{"range":"530","text":"531"},"Update the dependencies array to be: [form, ttyId]",{"range":"532","text":"533"},"Update the dependencies array to be: [facturaId, form]",{"range":"534","text":"535"},"Update the dependencies array to be: [contractId, form]",{"range":"536","text":"537"},"Update the dependencies array to be: [eKeys]",{"range":"538","text":"539"},"Update the dependencies array to be: []",{"range":"540","text":"541"},"Update the dependencies array to be: [setUserComps, user.username]",{"range":"542","text":"543"},[2411,2413],"[actId, form]",[2062,2064],"[empowermentId, form]",[11532,11533],"",[11532,11532],"\\",[2097,2099],"[setData]",[787,789],"[form, notificationId]",[6296,6298],"[form, ttyId]",[2369,2371],"[facturaId, form]",[3097,3099],"[contractId, form]",[1654,1656],"[eKeys]",[651,669],"[]",[1383,1385],"[setUserComps, user.username]"]