[{"C:\\HISOBXONA\\on_doc\\src\\App.jsx":"1","C:\\HISOBXONA\\on_doc\\src\\index.js":"2","C:\\HISOBXONA\\on_doc\\src\\env.js":"3","C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.action.js":"4","C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.selector.js":"5","C:\\HISOBXONA\\on_doc\\src\\components\\font-awesome-icons\\font-awesome-icons.js":"6","C:\\HISOBXONA\\on_doc\\src\\admin\\admin.router.jsx":"7","C:\\HISOBXONA\\on_doc\\src\\frontend\\index.router.jsx":"8","C:\\HISOBXONA\\on_doc\\src\\cabinet\\index.component.jsx":"9","C:\\HISOBXONA\\on_doc\\src\\components\\header\\header.component.jsx":"10","C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.reducer.js":"11","C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.action-types.js":"12","C:\\HISOBXONA\\on_doc\\src\\cabinet\\profile\\profile.component.jsx":"13","C:\\HISOBXONA\\on_doc\\src\\cabinet\\user-products\\user-products.component.jsx":"14","C:\\HISOBXONA\\on_doc\\src\\cabinet\\password-change\\password-change.component.jsx":"15","C:\\HISOBXONA\\on_doc\\src\\cabinet\\account-form\\account-form.component.jsx":"16","C:\\HISOBXONA\\on_doc\\src\\cabinet\\contract\\index.router.jsx":"17","C:\\HISOBXONA\\on_doc\\src\\frontend\\home\\home.component.jsx":"18","C:\\HISOBXONA\\on_doc\\src\\cabinet\\contract\\view\\view.component.jsx":"19","C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\create\\create.component.jsx":"20","C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\buyer-form.component.jsx":"21","C:\\HISOBXONA\\on_doc\\src\\cabinet\\right-sidebar\\right-sidebar.component.jsx":"22","C:\\HISOBXONA\\on_doc\\src\\components\\language-dropdown\\locale-dropdown.jsx":"23","C:\\HISOBXONA\\on_doc\\src\\cabinet\\tty\\create\\create.component.jsx":"24","C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\seller-form.component.jsx":"25","C:\\HISOBXONA\\on_doc\\src\\cabinet\\empowerment\\index.component.jsx":"26","C:\\HISOBXONA\\on_doc\\src\\frontend\\login\\login.component.jsx":"27","C:\\HISOBXONA\\on_doc\\src\\utils\\e-imzo.js":"28","C:\\HISOBXONA\\on_doc\\src\\cabinet\\aferta-popup\\aferta-popup.component.jsx":"29","C:\\HISOBXONA\\on_doc\\src\\cabinet\\payme-form\\payme-form.component.jsx":"30","C:\\HISOBXONA\\on_doc\\src\\translate.js":"31","C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\home\\home.component.jsx":"32","C:\\HISOBXONA\\on_doc\\src\\cabinet\\act\\index.router.jsx":"33","C:\\HISOBXONA\\on_doc\\src\\components\\admin-card\\admin-card.component.jsx":"34","C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\person-fetch\\person-fetch.component.jsx":"35","C:\\HISOBXONA\\on_doc\\src\\admin\\notification\\form.component.jsx":"36","C:\\HISOBXONA\\on_doc\\src\\utils\\home.config.provider.js":"37","C:\\HISOBXONA\\on_doc\\src\\cabinet\\notifications\\notifications.component.jsx":"38","C:\\HISOBXONA\\on_doc\\src\\cabinet\\home\\home.component.jsx":"39","C:\\HISOBXONA\\on_doc\\src\\cabinet\\act\\create\\create.component.jsx":"40","C:\\HISOBXONA\\on_doc\\src\\components\\data-sheet-custom-measure-selector\\custom-selector.component.jsx":"41","C:\\HISOBXONA\\on_doc\\src\\redux\\store.js":"42","C:\\HISOBXONA\\on_doc\\src\\cabinet\\empowerment\\create\\create.component.jsx":"43","C:\\HISOBXONA\\on_doc\\src\\frontend\\choose_company\\choose-company.component.jsx":"44","C:\\HISOBXONA\\on_doc\\src\\cabinet\\bindrouming-popup\\bindrouming-popup.component.jsx":"45","C:\\HISOBXONA\\on_doc\\src\\utils\\utils.js":"46","C:\\HISOBXONA\\on_doc\\src\\components\\dyna-grid\\dyna-grid.component.jsx":"47","C:\\HISOBXONA\\on_doc\\src\\cabinet\\tty\\view\\view.component.jsx":"48","C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\view\\view.component.jsx":"49","C:\\HISOBXONA\\on_doc\\src\\reportWebVitals.js":"50","C:\\HISOBXONA\\on_doc\\src\\cabinet\\tty\\index.router.jsx":"51"},{"size":2387,"mtime":1616506434795,"results":"52","hashOfConfig":"53"},{"size":996,"mtime":1615900532271,"results":"54","hashOfConfig":"53"},{"size":761,"mtime":1616659655586,"results":"55","hashOfConfig":"53"},{"size":947,"mtime":1616239545310,"results":"56","hashOfConfig":"53"},{"size":888,"mtime":1616239600500,"results":"57","hashOfConfig":"53"},{"size":1372,"mtime":1615446024668,"results":"58","hashOfConfig":"53"},{"size":1184,"mtime":1613366375823,"results":"59","hashOfConfig":"53"},{"size":1151,"mtime":1616234567296,"results":"60","hashOfConfig":"53"},{"size":1777,"mtime":1615463207501,"results":"61","hashOfConfig":"53"},{"size":3821,"mtime":1616481216769,"results":"62","hashOfConfig":"53"},{"size":1700,"mtime":1616239480865,"results":"63","hashOfConfig":"53"},{"size":441,"mtime":1616239419424,"results":"64","hashOfConfig":"53"},{"size":1047,"mtime":1616238063076,"results":"65","hashOfConfig":"53"},{"size":294,"mtime":1615463543894,"results":"66","hashOfConfig":"53"},{"size":5151,"mtime":1616735584676,"results":"67","hashOfConfig":"53"},{"size":5588,"mtime":1616687560712,"results":"68","hashOfConfig":"53"},{"size":773,"mtime":1613135956409,"results":"69","hashOfConfig":"53"},{"size":257,"mtime":1611228286162,"results":"70","hashOfConfig":"53"},{"size":794,"mtime":1613136178081,"results":"71","hashOfConfig":"53"},{"size":21762,"mtime":1615972493109,"results":"72","hashOfConfig":"53"},{"size":13335,"mtime":1616236499836,"results":"73","hashOfConfig":"53"},{"size":7397,"mtime":1616658802815,"results":"74","hashOfConfig":"53"},{"size":2499,"mtime":1615957280514,"results":"75","hashOfConfig":"53"},{"size":23703,"mtime":1612874366487,"results":"76","hashOfConfig":"53"},{"size":6687,"mtime":1616236147364,"results":"77","hashOfConfig":"53"},{"size":692,"mtime":1613135948606,"results":"78","hashOfConfig":"53"},{"size":11053,"mtime":1616234442485,"results":"79","hashOfConfig":"53"},{"size":28500,"mtime":1616565728906,"results":"80","hashOfConfig":"53"},{"size":3339,"mtime":1616655202120,"results":"81","hashOfConfig":"53"},{"size":284,"mtime":1616589059995,"results":"82","hashOfConfig":"53"},{"size":1131,"mtime":1615974553232,"results":"83","hashOfConfig":"53"},{"size":2539,"mtime":1615958912549,"results":"84","hashOfConfig":"53"},{"size":704,"mtime":1613135776022,"results":"85","hashOfConfig":"53"},{"size":708,"mtime":1611212188734,"results":"86","hashOfConfig":"53"},{"size":2542,"mtime":1616235861977,"results":"87","hashOfConfig":"53"},{"size":7325,"mtime":1613367087580,"results":"88","hashOfConfig":"53"},{"size":19049,"mtime":1615959880377,"results":"89","hashOfConfig":"53"},{"size":1765,"mtime":1613469507764,"results":"90","hashOfConfig":"53"},{"size":5237,"mtime":1615958648169,"results":"91","hashOfConfig":"53"},{"size":15030,"mtime":1613196626550,"results":"92","hashOfConfig":"53"},{"size":3280,"mtime":1614077431713,"results":"93","hashOfConfig":"53"},{"size":675,"mtime":1610456259499,"results":"94","hashOfConfig":"53"},{"size":17314,"mtime":1616237265824,"results":"95","hashOfConfig":"53"},{"size":4214,"mtime":1616657209985,"results":"96","hashOfConfig":"53"},{"size":3344,"mtime":1616734599990,"results":"97","hashOfConfig":"53"},{"size":454,"mtime":1616735277264,"results":"98","hashOfConfig":"53"},{"size":16626,"mtime":1613651776397,"results":"99","hashOfConfig":"53"},{"size":769,"mtime":1613136250855,"results":"100","hashOfConfig":"53"},{"size":789,"mtime":1613135597311,"results":"101","hashOfConfig":"53"},{"size":362,"mtime":1606761669970,"results":"102","hashOfConfig":"53"},{"size":701,"mtime":1613136021785,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":1,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"gy4thq",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"134"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"111"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"146"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"131"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"149"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"131"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"134"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"111"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"131"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"111"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"146"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\HISOBXONA\\on_doc\\src\\App.jsx",["226","227","228","229","230"],"C:\\HISOBXONA\\on_doc\\src\\index.js",[],["231","232"],"C:\\HISOBXONA\\on_doc\\src\\env.js",[],["233","234"],"C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.action.js",[],"C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.selector.js",[],"C:\\HISOBXONA\\on_doc\\src\\components\\font-awesome-icons\\font-awesome-icons.js",[],"C:\\HISOBXONA\\on_doc\\src\\admin\\admin.router.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\frontend\\index.router.jsx",["235"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport Home from './home/home.component'\r\nimport Login from './login/login.component'\r\nimport { selectCurrentUser } from '../redux/user/user.selector'\r\nimport ChooseCompany from './choose_company/choose-company.component'\r\n\r\nconst FrontIndexRouter = ({ match, user }) => {\r\n    console.log(user)\r\n    return (\r\n        <div>\r\n            <Route exact path={`${match.path}`} component={ Home } />\r\n            {/* <Route exact path={`${match.path}/login`} component={ Login } /> */}\r\n            <Route\r\n                exact=\"choosecompany\"\r\n                path={`${match.path}/choosecompany`}\r\n                component={ChooseCompany}\r\n            />\r\n            <Route \r\n                exact \r\n                path={`${match.path}/login`} \r\n                component={ Login } \r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    user: selectCurrentUser,\r\n})\r\n\r\nexport default connect(mapStateToProps)(FrontIndexRouter)\r\n","C:\\HISOBXONA\\on_doc\\src\\cabinet\\index.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\components\\header\\header.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.reducer.js",[],"C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.action-types.js",[],["236","237"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\profile\\profile.component.jsx",[],["238","239"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\user-products\\user-products.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\password-change\\password-change.component.jsx",["240"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\account-form\\account-form.component.jsx",["241"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\contract\\index.router.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\frontend\\home\\home.component.jsx",["242","243","244"],"import React, { useState } from 'react';\r\nimport Header from '../../components/header/header.component';\r\n\r\nconst Home = ({})=>{\r\n\r\n    \r\n\r\n    return<div>\r\n        <div>\r\n            {/* <Header /> */}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Home;",["245","246"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\contract\\view\\view.component.jsx",[],["247","248"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\create\\create.component.jsx",["249","250","251","252","253","254"],"import React, { useState, useEffect } from 'react';\r\nimport 'react-datasheet/lib/react-datasheet.css';\r\nimport Datasheet from 'react-datasheet';\r\nimport SelectEditor from '../../../components/data-sheet-custom-selector/custom-selector.component';\r\nimport SelectMeasureEditor from '../../../components/data-sheet-custom-measure-selector/custom-selector.component';\r\nimport { Button, Input, Form, Row, Col, DatePicker, Select, Upload, message } from 'antd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './create.style.scss';\r\nimport axios from 'axios';\r\nimport BuyerForm from '../../common/buyer-form.component';\r\nimport SellerForm from '../../common/seller-form.component';\r\nimport { connect } from 'react-redux';\r\nimport { selectToken } from '../../../redux/user/user.selector';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport moment from 'moment';\r\nimport { \r\n  FullscreenOutlined, \r\n  FullscreenExitOutlined, \r\n  } from '@ant-design/icons';\r\nimport { convertProductsToGrid } from '../../../utils/main';\r\nimport PersonFetch from '../../common/person-fetch/person-fetch.component';\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst FacturaCreateForm = ({ token, match })=> {\r\n\r\n    const {t, i18n} = useTranslation();\r\n  const [form] = Form.useForm();\r\n  const { facturaId } = match.params;\r\n  const [initialData, setInitialData] = useState({facturaType: 0})\r\n  const [facturaType, setFacturaType] = useState();\r\n  const [saveLoading, setSaveLoading] = useState(false);\r\n\r\n\r\n  useEffect(()=>{\r\n    if(facturaId){\r\n\r\n      //fetch fatura data\r\n      axios({\r\n        url: `/api/v1/facturas/${facturaId}`,\r\n        method: \"GET\",\r\n      }).then(res=>{\r\n        let data = res.data;\r\n        data.contractDate=moment(data.contractDate);\r\n        data.created_at=moment(data.created_at);\r\n        data.facturaDate=moment(data.facturaDate);\r\n        data.empowermentDateOfIssue=moment(data.empowermentDateOfIssue);\r\n        data.oldFacturaDate=moment(data.oldFacturaDate);\r\n        data.updated_at=moment(data.updated_at);\r\n        console.log(data);\r\n  \r\n        setInitialData(res.data);\r\n        setGrid(convertProductsToGrid(res.data.factura_products));\r\n        form.resetFields();\r\n      }).catch(err=>{\r\n        console.log(err);\r\n      })\r\n      //end fetch factura data;\r\n    }\r\n  }, [])\r\n  \r\n\r\n  const validateMessages = {\r\n    required: t('Bu maydon majburiy!'),\r\n    types: {\r\n      email: '${label} is not a valid email!',\r\n      number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n      range: '${label} must be between ${min} and ${max}',\r\n    },\r\n    \r\n  };\r\n\r\n  const FACTURA_TYPES = {\r\n    \"STANDARD\": 0,\r\n    \"QOSHIMCHA\": 1,\r\n    \"HARAJATLARNI QOPLASH\": 2,\r\n    \"TOLOVSIZ\": 3,\r\n    \"TUZATUVCHI\": 4\r\n  }\r\n\r\n  const [fullView, toglleFullView] = useState(false)\r\n\r\n  const [grid, setGrid] = useState([\r\n      [\r\n          { readOnly: true, value: '', width: 50 },\r\n          { value: t('Tovar/xizmat nomi'), readOnly: true, width: 200 },\r\n          { value: t('Tovar/xizmatlar yagona elektron milliy katalog identifikatsiya kodi'), readOnly: true, width: 150 },\r\n          { value: t('Tovar/xizmat shtrix kodi'), readOnly: true, width: 100 },\r\n          { value: t(\"O'lchov birligi\"), readOnly: true, width: 100 },\r\n          { value: t(\"Miqdori\"), readOnly: true, width: 100 },\r\n          { value: t(\"Narxi\"), readOnly: true, width: 100 },\r\n          { value: t(\"Aksiz soliq (%)\"), readOnly: true, width: 100 },\r\n          { value: t(\"Aksiz soliq, miqdori\"), readOnly: true, width: 100 },\r\n          { value: t(\"Yetkazib berish narxi\"), readOnly: true, width: 100 },\r\n          { value: t(\"QQS (%)\"), readOnly: true, width: 100 },\r\n          { value: t(\"QQS, miqdori\"), readOnly: true, width: 100 },\r\n          { value: t(\"Umumiy summa\"), readOnly: true, width: 150 },\r\n      ],\r\n    [\r\n      { readOnly: true, value: 1 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectEditor},                //2 catalogCode\r\n      { value: \"\" },                                          //3 shrix code\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //4 measure\r\n      { value: '' },                                          //5 amount\r\n      { value: \"\", },                                         //6 price\r\n      { value: '' },                                          //7 aksiz rate\r\n      { value: '', readOnly: true },                          //8 aksiz amount\r\n      { value: '' },                                          //9 delivery cost\r\n      { value: \"\" },                                          //10 VAT rate\r\n      { value: '', readOnly: true },                          //11 VAT amount\r\n      { value: '', readOnly: true,},                          //12 total\r\n    ], \r\n    [\r\n      { readOnly: true, value: 2 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectEditor},                //2 catalogCode\r\n      { value: \"\" },                                          //3 shrix code\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //4 measure\r\n      { value: '' },                                          //5 amount\r\n      { value: \"\", },                                         //6 price\r\n      { value: '' },                                          //7 aksiz rate\r\n      { value: '', readOnly: true },                          //8 aksiz amount\r\n      { value: '' },                                          //9 delivery cost\r\n      { value: \"\" },                                          //10 VAT rate\r\n      { value: '', readOnly: true },                          //11 VAT amount\r\n      { value: '', readOnly: true,},                          //12 total\r\n    ], \r\n    [\r\n      { readOnly: true, value: 3 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectEditor},                //2 catalogCode\r\n      { value: \"\" },                                          //3 shrix code\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //4 measure\r\n      { value: '' },                                          //5 amount\r\n      { value: \"\", },                                         //6 price\r\n      { value: '' },                                          //7 aksiz rate\r\n      { value: '', readOnly: true },                          //8 aksiz amount\r\n      { value: '' },                                          //9 delivery cost\r\n      { value: \"\" },                                          //10 VAT rate\r\n      { value: '', readOnly: true },                          //11 VAT amount\r\n      { value: '', readOnly: true,},                          //12 total\r\n    ], \r\n    [\r\n      { readOnly: true, value: 4 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectEditor},                //2 catalogCode\r\n      { value: \"\" },                                          //3 shrix code\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //4 measure\r\n      { value: '' },                                          //5 amount\r\n      { value: \"\", },                                         //6 price\r\n      { value: '' },                                          //7 aksiz rate\r\n      { value: '', readOnly: true },                          //8 aksiz amount\r\n      { value: '' },                                          //9 delivery cost\r\n      { value: \"\" },                                          //10 VAT rate\r\n      { value: '', readOnly: true },                          //11 VAT amount\r\n      { value: '', readOnly: true,},                          //12 total\r\n    ], \r\n  ])\r\n\r\n  //#region data-sheet methods\r\n  const handleRemoveRow = (rowId)=>{\r\n    console.log(rowId)\r\n\r\n    grid.splice(rowId, 1)\r\n    setGrid([...grid])\r\n  }\r\n\r\n  const valueRenderer = cell => cell.value;\r\n  const onCellsChanged = changes => {\r\n    changes.forEach(({ cell, row, col, value }, index) => {\r\n        //this sets changed values\r\n        grid[row][col] = { ...grid[row][col], value };\r\n        \r\n\r\n        //Lets calculate\r\n        let priceamount = parseFloat(grid[row][5].value) * parseFloat(grid[row][6].value);\r\n        let aksizamount = parseFloat(priceamount * grid[row][7].value / 100);\r\n        \r\n        grid[row][8]={ value: parseFloat(aksizamount), readOnly: true };\r\n        \r\n        let vatamout = parseFloat(priceamount * parseFloat(grid[row][10].value) / 100);\r\n        \r\n        grid[row][11] = { value: vatamout, readOnly: true }\r\n\r\n        grid[row][12] = { value: priceamount ? parseFloat(priceamount + aksizamount + vatamout + parseFloat(grid[row][9].value, 2), 2) : 0, readOnly: true}\r\n       \r\n     \r\n    });\r\n     setGrid([...grid]);\r\n  };\r\n\r\n  const handleAddRow = ()=>{\r\n    \r\n    const sampleRow = [\r\n      { readOnly: true, value:    grid.length }, //0 ordNo\r\n      { value: \"\" }, //1 product name\r\n      { value: \"\", dataEditor:  SelectEditor}, //2 catalogCode\r\n      { value: \"\" }, //3 shrix code\r\n      { value: \"\", dataEditor:  SelectMeasureEditor }, //4 measure\r\n      { value: '' }, //5 amount\r\n      { value: \"\", }, //6 price\r\n      { value: '' }, //7 aksiz rate\r\n      { value: '', readOnly: true }, //8 aksiz amount\r\n      { value: '' }, //9 delivery cost\r\n      { value: \"\" }, //10 VAT rate\r\n      { value: '', readOnly: true }, //11 VAT amount\r\n      { value: '', readOnly: true }, //12 total\r\n    ]\r\n\r\n    let newgrid = [...grid, sampleRow];\r\n\r\n     setGrid(newgrid)\r\n  }\r\n\r\n  const onContextMenu = (e, cell, i, j) =>\r\n    cell.readOnly ? e.preventDefault() : null;\r\n//#endregion\r\n  \r\n  //#region form methods\r\n\r\n  const handleSubmit = (values)=>{\r\n    setSaveLoading(true);\r\n    console.log(values)\r\n    if(facturaId){\r\n      axios({\r\n        url:`/api/v1/facturas/${facturaId}`,\r\n        method: 'PATCH',\r\n        data: {factura: values, products: grid}\r\n      }).then(res=>{\r\n        if(res.data.ok){\r\n          message.success(t(\"Faktura o'zgartirildi!\"))\r\n        }else{\r\n          message.error(t(\"Faktura o'zgartirishda xatolik!\"));\r\n        }\r\n        console.log(res)\r\n        setSaveLoading(false);\r\n      }).catch(err=>{\r\n        message.error(t(\"Faktura o'zgartirishda xatolik!\"));\r\n        console.log(err)\r\n        setSaveLoading(false);\r\n      })\r\n    } else{\r\n      axios({\r\n        url:'/api/v1/facturas',\r\n        method: 'post',\r\n        data: {factura: values, products: grid}\r\n      }).then(res=>{\r\n        if(res.data.ok){\r\n          message.success(t(\"Faktura yaratili!\"))\r\n        }\r\n        else{\r\n          message.error(t(\"Faktura yaratishda xatolik!\"));\r\n        }\r\n        console.log(res)\r\n        setSaveLoading(false);\r\n      }).catch(err=>{\r\n        console.log(err)\r\n        message.error(t(\"Faktura yaratishda xatolik!\"));\r\n        setSaveLoading(false);\r\n      })\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  const handleImportExecl =(value)=>{\r\n\r\n    if(value.file.status==\"done\"){\r\n      \r\n      const { response } = value.file\r\n\r\n      response.excel.forEach((element, index)=>{\r\n        element[0].value = index + 1;\r\n        element[0].readOnly = true;\r\n        element[2].dataEditor = SelectEditor;\r\n        element[4].dataEditor = SelectMeasureEditor;\r\n      })\r\n\r\n      setGrid([grid[0], ...response.excel])\r\n      console.log(response)\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n  \r\n  return (\r\n    <div style={{padding: 15}}>\r\n      <Form\r\n        initialValues={initialData}\r\n        form={form}\r\n        name=\"factura\"\r\n        onFinish = {handleSubmit}\r\n        scrollToFirstError\r\n        validateMessages={validateMessages}\r\n      >\r\n\r\n      <div className=\"factura-data-sheet-container\">\r\n      <h3>{t(\"Hujjat turi\")}</h3>\r\n      <Row justify=\"space-between\">\r\n          <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                key=\"dyna-form-facutura-no\"\r\n                name=\"facturaType\"\r\n                >\r\n                  <Select\r\n                    onChange={setFacturaType}\r\n                    bordered={false}\r\n                    size=\"large\"\r\n                    placeholder=\"Faktura turi\">\r\n                      <Option value={FACTURA_TYPES[\"STANDARD\"]}>{t(\"Standard\")}</Option>\r\n                      <Option value={FACTURA_TYPES[\"QOSHIMCHA\"]}>{t(\"Qo'shimcha\")}</Option>\r\n                      <Option value={FACTURA_TYPES[\"HARAJATLARNI QOPLASH\"]}>{t(\"Harajatni qoplash\")}</Option>\r\n                      <Option value={FACTURA_TYPES[\"TOLOVSIZ\"]}>{t(\"To'lovsiz\")}</Option>\r\n                      <Option value={FACTURA_TYPES[\"TUZATUVCHI\"]}>{t(\"Tuzatuvchi\")}</Option>\r\n                    </Select>\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">{t(\"Faktura turi\")}</span>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col md={facturaType===FACTURA_TYPES[\"QOSHIMCHA\"] || facturaType===FACTURA_TYPES[\"TUZATUVCHI\"] ? 11 : 0}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                key=\"dyna-form-facutura-no-old\"\r\n                name=\"oldFacturaId\">\r\n                  <Input\r\n                    rules={[{required: true}]}\r\n                    size=\"large\"\r\n                    placeholder=\"Eski faktura ID\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">{t(\"Eski faktura ID\")}</span>\r\n              </Form.Item>\r\n          </Col>\r\n      </Row>  \r\n      <Row justify=\"space-between\">\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                rules={[{required: true}]}\r\n                key=\"dyna-form-facutura-no\"\r\n                name=\"facturaNo\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder={t(\"Faktura raqami\")} />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">{t(\"Faktura raqami\")}</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                key=\"dyna-form-item-inn-date\"\r\n                name=\"facturaDate\"\r\n                rules={[{required: true}]}>\r\n                  <DatePicker                \r\n                    size=\"large\"\r\n                    placeholder={t(\"Faktura sanasi\")} />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">{t(\"Faktura sanasi\")}</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                rules={[{required: true}]}\r\n                key=\"dyna-form-item-contract-n0\"\r\n                name=\"contractNo\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder={t(\"Shartnoma raqami\")} />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">{t(\"Shartnoma raqami\")}</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                rules={[{required: true}]}\r\n                key=\"dyna-form-item-contract-date\"\r\n                name=\"contractDate\">\r\n                  <DatePicker\r\n                    size=\"large\"\r\n                    placeholder={t(\"Shartnoma sanasi\")} />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">{t(\"Shartnoma sanasi\")}</span>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n      </div>\r\n\r\n      <div className=\"factura-data-sheet-container\">\r\n        \r\n        <Row justify=\"space-between\">\r\n        <Col md={11}>  \r\n          <SellerForm form={form} />\r\n        </Col>\r\n\r\n        <Col md={11}>\r\n          <BuyerForm form={ form } docType=\"factura\" />\r\n        </Col>\r\n      </Row>\r\n      </div>\r\n      <div className={`factura-data-sheet-container ${fullView ? 'grid-full-view' : null}`}>\r\n        <div style={{marginBottom: 10, display: 'flex', justifyContent:'space-between'}}>\r\n          <div style={{display: 'flex'}}>\r\n              <Upload \r\n                headers={{\r\n                  Authorization: \"Bearer \" + token\r\n                }}\r\n                multiple={false}\r\n                action=\"http://127.0.0.1:8000/api/v1/factura-products/read-excel\"\r\n                accept=\".xlsx, .xls\" \r\n                onChange={handleImportExecl}>\r\n                \r\n                  <Button style={{marginRight: 10}}>{t(\"Exceldan yuklash\")}</Button>\r\n               \r\n              </Upload>\r\n              <a target=\"_blank\" href=\"../../../excels/on_doc_factura_products.xlsx\" download>\r\n                <Button >\r\n                    {t(\"Shablonni yuklash\")}\r\n                </Button>\r\n              </a>\r\n            </div>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={fullView ? <FullscreenExitOutlined /> : <FullscreenOutlined />} \r\n              onClick={()=>toglleFullView(!fullView)}>\r\n                { fullView ? t(\"Kichraytirish\") : t(\"Kengaytirish\") }\r\n            </Button>\r\n        </div>\r\n        \r\n      <div style={{overflowX: 'auto'}} >\r\n        <div style={{width: '100%'}}>\r\n          <Datasheet\r\n            data={ grid}\r\n            valueRenderer={ valueRenderer}\r\n            onContextMenu={ onContextMenu}\r\n            onCellsChanged={ onCellsChanged}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Button \r\n        size=\"large\" \r\n        style={{marginTop: 20, marginRight: 7, width: 220}} \r\n        type=\"primary\" \r\n        icon={<FontAwesomeIcon \r\n          style={{marginRight: 7}} \r\n          icon={[\"far\", \"plus-square\"]} />} \r\n        onClick={  handleAddRow }>{t(\"Qo'shish\")}</Button>\r\n      \r\n      <Button \r\n        size=\"large\" \r\n        style={{marginTop: 20, width: 220 }} \r\n        danger\r\n        type=\"primary\" \r\n        icon={<FontAwesomeIcon \r\n          style={{marginRight: 7}} \r\n          icon={[\"far\", \"trash-alt\"]} />} \r\n        onClick={ ()=>{ if(grid.length>1){ handleRemoveRow(grid.length-1) }}  }>{t(\"Oxirgi qatorni o'chirish\")}</Button>\r\n      </div>\r\n          \r\n        <div className=\"factura-data-sheet-container\">\r\n\r\n          <Row justify=\"space-between\">\r\n            <Col md={5} >\r\n              <Form.Item>\r\n                <Form.Item \r\n              key=\"empowerment-no\"\r\n              name=\"empowermentNo\">\r\n                <Input\r\n                  size=\"large\"\r\n                  placeholder={t(\"Ishonchnoma raqami\")} />\r\n              </Form.Item>\r\n                <span className=\"custom-input-label-1\">{t(\"Ishonchnoma raqami\")}</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={5}>\r\n              <Form.Item>\r\n                <Form.Item \r\n              key=\"seler-account-empowerment-dateof-issue\"\r\n              name=\"empowermentDateOfIssue\">\r\n                <DatePicker\r\n                  size=\"large\"\r\n                  placeholder={t(\"Ishonchnoma sanasi\")} />\r\n              </Form.Item>\r\n                <span className=\"custom-input-label-1\">{t(\"Ishonchnoma sanasi\")}</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12}>\r\n              <PersonFetch \r\n                pName=\"agentFio\"\r\n                pTin=\"agentTin\"\r\n                nameLabel={t(\"Ma'sul shaxs FIO\")}\r\n                tinLabel={t(\"STIR\")}\r\n                tinCol={11}\r\n                nameCol={11}\r\n                form={form}\r\n              />\r\n            </Col>\r\n          \r\n          </Row>\r\n\r\n         \r\n\r\n<Row justify=\"space-between\">\r\n  <Col md={24} >\r\n    <Form.Item>\r\n      <Form.Item \r\n    key=\"selenote-field\"\r\n    name=\"notes\">\r\n      <Input\r\n        size=\"large\"\r\n        placeholder={t(\"Qo'shimcha ma'lumotlar\")} />\r\n    </Form.Item>\r\n      <span className=\"custom-input-label-1\">{t(\"Qo'shimcha ma'lumotlar\")}</span>\r\n    </Form.Item>\r\n  </Col>\r\n  \r\n</Row>\r\n</div>\r\n          <div className=\"factura-data-sheet-container\">\r\n            <Row justify=\"space-around\">\r\n              <Col >\r\n                <Button \r\n                  loading={saveLoading}\r\n                  primary\r\n                  htmlType=\"submit\"\r\n                  className=\"factra-action-btns save-btn\" \r\n                  size=\"large\"\r\n                  icon={<FontAwesomeIcon icon=\"save\" className=\"factura-action-btn-icons\"  />}>\r\n                    {t(\"Saqlash\")}\r\n                  </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button \r\n                  className=\"factra-action-btns sing-btn\" \r\n                  size=\"large\"\r\n                  icon={<FontAwesomeIcon icon=\"signature\" className=\"factura-action-btn-icons\" />}>\r\n                    {t(\"Imzolash\")}\r\n                  </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button \r\n                  icon={<FontAwesomeIcon icon=\"ban\" className=\"factura-action-btn-icons\" />} \r\n                  danger \r\n                  className=\"factra-action-btns\" \r\n                  size=\"large\">\r\n                    {t(\"Bekor qilish\")}\r\n                  </Button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <Form.Item\r\n      key=\"hidden-factura-id\"\r\n      name=\"facturaId\"\r\n      >\r\n        <Input \r\n        type=\"hidden\"\r\n        />\r\n\r\n      </Form.Item>\r\n      <Form.Item\r\n      key=\"hidden-factura-product-id\"\r\n      name=\"facturaProductId\"\r\n      >\r\n        <Input \r\n        type=\"hidden\"\r\n        />\r\n\r\n      </Form.Item>\r\n\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  token: selectToken\r\n})\r\n\r\nexport default connect(mapStateToProps)(FacturaCreateForm);","C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\buyer-form.component.jsx",["255"],"import React, { Fragment } from 'react';\r\nimport { Input, Form, Row, Col, message, Switch, Select, Button } from 'antd';\r\nimport { CloseOutlined, CheckOutlined } from '@ant-design/icons';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport PersonFetch from './person-fetch/person-fetch.component';\r\nimport { setActClient } from '../act/create/create.component';\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst BuyerForm = ({ form, docType, remove, fieldList }) => {\r\n\r\n  const {t} = useTranslation();\r\n  const [isFacturaSingleSided, setIsFacturaSingleSided] = useState(false);\r\n  const [buyerBranches, setBuyerBranches] = useState([]);\r\n\r\n  const handleSingleSided = (value) => {\r\n    setIsFacturaSingleSided(value)\r\n  }\r\n\r\n  const handleFetchBuyer = e => {\r\n    console.log(e.target.value)\r\n    if (!isNaN(e.target.value)) {\r\n      if (e.target.value > 100000000 && e.target.value <= 999999999) {\r\n        axios({\r\n          url: \r\n          `info/contragent-by-tin?tin=${e.target.value}`,\r\n          method: \"GET\",\r\n         \r\n        }).then(res => {\r\n          const { \r\n            tin, \r\n            accountant, \r\n            account, \r\n            address, \r\n            phone, \r\n            name, \r\n            fullName, \r\n            mfo, \r\n            director,\r\n            directorTin, \r\n            regCode } = res.data;\r\n\r\n          let data = {\r\n            buyerTin: tin,\r\n            buyerAccountant: accountant,\r\n            buyerAccount: account,\r\n            buyerAddress: address,\r\n            buyerMobilePhone: phone,\r\n            buyerName: name ?? fullName,\r\n            buyerMfo: mfo,\r\n            buyerDirector: director,\r\n            buyerDirectorTin: directorTin,\r\n            buyerVatRegCode: regCode\r\n          }\r\n\r\n          if(docType===\"act\"){\r\n            form.setFieldsValue({\r\n              actText: setActClient(form.getFieldValue(\"sellerName\"), name ?? fullName)\r\n            })\r\n          }\r\n\r\n\r\n          if(fieldList){\r\n            let fetcherData = form.getFieldValue(\"contract_partners\");\r\n            \r\n            fetcherData[fieldList.name] = {...fetcherData[fieldList.name], ...data}\r\n\r\n            setBuyerBranches(res.data.branches ?? []);\r\n\r\n            form.setFieldsValue({contract_partners: [...fetcherData]})\r\n          }else{\r\n            \r\n            form.setFieldsValue(data)\r\n          }\r\n         \r\n        }).catch(err => {\r\n          console.log(err)\r\n        })\r\n      } else {\r\n        form.setFieldsValue({\r\n          buyerAccountant: null,\r\n          buyerAccount: null,\r\n          buyerAddress: null,\r\n          buyerMobilePhone: null,\r\n          buyerName: null,\r\n          buyerMfo: null,\r\n          buyerDirector: null,\r\n          buyerVatRegCode: null\r\n        })\r\n      }\r\n    } else {\r\n      message.warning(t(\"STIR notog'ri kiritildi!\"))\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <h3>{t(\"Kontragent ma'lumotlari\")}</h3>\r\n      {\r\n        docType ===\"contract\"\r\n        ? <PersonFetch \r\n          form={form} \r\n          pTin={fieldList ? [fieldList.name,\"buyerPhysicalTin\"] : \"buyerPhysicalTin\"} \r\n          pName={fieldList ? [fieldList.name, \"buyerPhysicalFio\"] : \"buyerPhysicalFio\"} \r\n          tinLabel={t(\"Jis. Shaxs STIR\")} nameLabel={t(\"Jis. Shaxs FIO\")} tinCol={11} nameCol={11} />\r\n        : null\r\n      }\r\n      \r\n      <Row justify=\"space-between\">\r\n        <Col md={docType !== \"factura\" ? 24 : 11}>\r\n          <Form.Item>\r\n            <Form.Item\r\n              key={fieldList ? `dyna-form-item-inn-buyer-${fieldList.key}` : \"dyna-form-item-inn-buyer\"}\r\n              name={fieldList ? [fieldList.name,\"buyerTin\"] : \"buyerTin\"}\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input\r\n                onChange={handleFetchBuyer}\r\n                size=\"large\"\r\n                placeholder={t(\"STIR\")} />\r\n            </Form.Item>\r\n            <span className=\"custom-input-label-1\">{t(\"STIR\")}</span>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col md={docType !== \"factura\" ? 0 : 11}>\r\n          <h4>{t(\"Bir tomonlama fakturami?\")}</h4>\r\n          <Switch\r\n            onChange={handleSingleSided}\r\n            checkedChildren={<CheckOutlined />}\r\n            unCheckedChildren={<CloseOutlined />}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      {\r\n        isFacturaSingleSided ?\r\n          <div>\r\n            <h3>{t(\"Turi\")}</h3>\r\n            <Form.Item\r\n              key=\"sigle-sided-factura-type-1\"\r\n              name={fieldList ? [fieldList.name,\"singleSidedType\"] : \"singleSidedType\"}\r\n              >\r\n              <Form.Item>\r\n                <Select bordered={false} size=\"large\">\r\n                  <Option value={1}>На физ. лицо</Option>\r\n                  <Option value={2}> На экспорт</Option>\r\n                  <Option value={3}>На импорт</Option>\r\n                  <Option value={4}>Реализация, связанная с гос. секретом</Option>\r\n                  <Option value={5}>Финансовые услуги</Option>\r\n                </Select>\r\n\r\n              </Form.Item>\r\n              <span className=\"custom-input-label-1\">{t(\"Kontragent turi\")}</span>\r\n            </Form.Item>\r\n          </div>\r\n          : null\r\n      }\r\n\r\n      {\r\n        !isFacturaSingleSided ?\r\n          <div>\r\n            { docType==\"contract\" ? null : <h3>{t(\"Hamkor korxonasi\")}</h3> }\r\n            <Form.Item>\r\n              <Form.Item\r\n                rules={[{ required: true }]}\r\n                key=\"buyer-name-1-buyerName\"\r\n                name={fieldList ? [fieldList.name,\"buyerName\"] : \"buyerName\"}\r\n              >\r\n                <Input\r\n                  onChange={val=>{\r\n                    form.setFieldsValue({\r\n                      actText: setActClient(form.getFieldValue(\"sellerName\"), val.target.value)})\r\n                    }\r\n                  }\r\n                  size=\"large\"\r\n                  placeholder={t(\"Nomi\")} />\r\n              </Form.Item>\r\n              <span className=\"custom-input-label-1\">{t(\"Nomi\")}</span>\r\n            </Form.Item>\r\n            {\r\n              docType !== \"act\" ?\r\n                <Fragment>\r\n                  {\r\n                    docType === \"contract\" || docType === \"empowerment\"\r\n                      ? null\r\n                      : <Form.Item>\r\n                        <Form.Item\r\n                          key=\"seler-account-vatreg\"\r\n                          name={fieldList ? [fieldList.name, \"buyerVatRegCode\"] : \"buyerVatRegCode\"}\r\n                        >\r\n                          <Input\r\n                            size=\"large\"\r\n                            placeholder={t(\"QQS tolovchi registratsiya raqami\")}\r\n                          />\r\n                        </Form.Item>\r\n                        <span className=\"custom-input-label-1\">{t(\"QQS tolovchi registratsiya raqami\")}</span>\r\n                      </Form.Item>\r\n                  }\r\n\r\n                  <Row justify=\"space-between\">\r\n                    <Col md={11} >\r\n                      <Form.Item>\r\n                        <Form.Item\r\n                          key=\"seler-account\"\r\n\r\n                          name={fieldList ? [fieldList.name,\"buyerAccount\"] : \"buyerAccount\"}\r\n                          >\r\n                          <Input\r\n                            size=\"large\"\r\n                            placeholder={t(\"Hisob raqami\")} />\r\n                        </Form.Item>\r\n                        <span className=\"custom-input-label-1\">{t(\"Hisob raqami\")}</span>\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col md={11}>\r\n                      {\r\n                        docType === \"contract\"\r\n                          ? <Form.Item>\r\n                          <Form.Item\r\n                            key=\"seler-account\"\r\n                            name={fieldList ? [fieldList.name,\"buyerMobilePhone\"] : \"buyerMobilePhone\"}\r\n                          >\r\n                            <Input\r\n                              size=\"large\"\r\n                              placeholder={t(\"Telfon raqam\")}\r\n                            />\r\n                          </Form.Item>\r\n                          <span className=\"custom-input-label-1\">{t(\"Telfon raqam\")}</span>\r\n                        </Form.Item>\r\n                          : <Form.Item>\r\n                            <Form.Item\r\n                              key=\"seler-account\"\r\n                              name={fieldList ? [fieldList.name,\"buyerMfo\"] : \"buyerMfo\"}\r\n                            >\r\n                              <Input\r\n                                size=\"large\"\r\n                                placeholder={t(\"MFO\")}\r\n                              />\r\n                            </Form.Item>\r\n                            <span className=\"custom-input-label-1\">{t(\"MFO\")}</span>\r\n                          </Form.Item>\r\n                      }\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Form.Item>\r\n                    <Form.Item\r\n                      rules={[{ required: true }]}\r\n                      key=\"seler-account\"\r\n                      name={fieldList ? [fieldList.name,\"buyerAddress\"] : \"buyerAddress\"}\r\n                    >\r\n                      <Input\r\n                        size=\"large\"\r\n                        placeholder={t(\"Manzil\")} />\r\n                    </Form.Item>\r\n                    <span className=\"custom-input-label-1\">{t(\"Manzil\")}</span>\r\n                  </Form.Item>\r\n                    \r\n                  {\r\n                      docType===\"contract\"?\r\n                      <Col md={24} >\r\n                      <Form.Item>\r\n                        <Form.Item\r\n                          key=\"seler-account\"\r\n                          name={fieldList ? [fieldList.name,\"buyerBranch\"] : \"buyerBranch\"}\r\n                        >\r\n                          <Select\r\n                            bordered={false}\r\n                            size=\"large\"\r\n                            defaultActiveFirstOption\r\n                            placeholder=\"\">\r\n                              {buyerBranches.map(item=><Option value={item.tin}>{ item.tin } - {item.name}</Option>)}\r\n                          </Select>\r\n                        </Form.Item>\r\n                        <span className=\"custom-input-label-1\">{t(\"Filiali\")}</span>\r\n                      </Form.Item>\r\n                    </Col>\r\n                    :null\r\n                    }\r\n\r\n                  <Row justify=\"space-between\" align=\"stretch\">\r\n                    <Col md={11} >\r\n                      <Form.Item>\r\n                        <Form.Item\r\n                          key=\"seler-account\"\r\n                          name={fieldList ? [fieldList.name,\"buyerDirector\"] : \"buyerDirector\"}\r\n                        >\r\n                          <Input\r\n                            size=\"large\"\r\n                            placeholder={t(\"Direktor\")}  />\r\n                        </Form.Item>\r\n                        <span className=\"custom-input-label-1\">{t(\"Direktor\")}</span>\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col md={11} >\r\n                      {\r\n                        docType === \"contract\"\r\n                          ? (remove && fieldList ? <Button \r\n                              className=\"factra-action-btns\" \r\n                              style={{width: '100%'}} \r\n                              danger \r\n                              size=\"large\" \r\n                              onClick={()=>remove(fieldList.name)} >\r\n                                Olib tashlash\r\n                                </Button> \r\n                                : null ) \r\n                          : <Form.Item>\r\n                            <Form.Item\r\n                              key=\"seler-account\"\r\n                              name={fieldList ? [fieldList.name,\"buyerAccountant\"] : \"buyerAccountant\"}\r\n                            >\r\n                              <Input\r\n                                size=\"large\"\r\n                                placeholder={t(\"Bosh hisobchi\")} />\r\n                            </Form.Item>\r\n                            <span className=\"custom-input-label-1\">{t(\"Bosh hisobchi\")}</span>\r\n                          </Form.Item>\r\n                      }\r\n\r\n                    </Col>\r\n                    {\r\n                    docType===\"contract\" ?\r\n                    <Col md={11}>\r\n                      <Form.Item\r\n                        key=\"seler-account-buyer-dir-tin\"\r\n                        name={ fieldList ? [fieldList.name, \"buyerDirectorTin\"] :\"buyerDirectorTin\"}\r\n                        >\r\n                        <Input\r\n                          type=\"hidden\"\r\n                          size=\"large\"\r\n                          placeholder={t(\"Direktor\") + \" \" + t(\"STIR\")} />\r\n                      </Form.Item>\r\n                      \r\n                      </Col>\r\n                    : null\r\n                  }\r\n                  </Row>\r\n                  \r\n                  \r\n                </Fragment>\r\n                : null\r\n            }\r\n          </div>\r\n          : null\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BuyerForm;","C:\\HISOBXONA\\on_doc\\src\\cabinet\\right-sidebar\\right-sidebar.component.jsx",["256","257","258"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Badge, Modal, Tag, Statistic, Spin, Checkbox } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport './right-sidebar.style.scss';\r\nimport { IMPORTANCE } from '../../env';\r\nimport { logOut, setCabinetData } from '../../redux/user/user.action';\r\nimport { connect } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectLoadedKey } from '../../redux/user/user.selector';\r\nimport AfertaPopup from '../aferta-popup/aferta-popup.component';\r\nimport BindroumingPopup from '../bindrouming-popup/bindrouming-popup.component';\r\n\r\nconst { Countdown } = Statistic;\r\n\r\nconst RightSidebar = ({ location, admin, setData, loadedKey, uOut }) => {\r\n\r\n    const { t } = useTranslation();\r\n\r\n   \r\n\r\n\r\n    const [active, setActive] = useState({})\r\n    const [notifications, setNotifications] = useState([])\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [badgeCount, setBedgeCount]=useState({\r\n        factura_awaiting: 0,\r\n        contract_awaiting: 0,\r\n        act_awaiting:0,\r\n        emp_awating: 0,\r\n        tty_awaiting:0,\r\n    })\r\n    useEffect(()=>{\r\n        setActive({\r\n            cabinet: location.pathname===\"/cabinet\",\r\n            factura: location.pathname.includes(\"/factura\"),\r\n            contract: location.pathname.includes(\"/contract\"),\r\n            empowerment: location.pathname.includes(\"/empowerment\"),\r\n            act: location.pathname.includes(\"/act\"),\r\n            tty: location.pathname.includes(\"/tty\"),\r\n            freeDoc: location.pathname.includes(\"/free-template\"),\r\n            notification: location.pathname.includes(\"/notification\")\r\n        })\r\n    }, [location.pathname])\r\n\r\n    const closeModel = ()=>{\r\n        setShowModal(false);\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        axios({\r\n            method: \"GET\",\r\n            url: \"/api/v1/cabinet\"\r\n        }).then(res=>{\r\n            const { notifications } = res.data\r\n            setData(res.data)\r\n            setNotifications(notifications);\r\n            if(Array.isArray(notifications) && notifications.length){\r\n                setShowModal(true)\r\n            }\r\n            setBedgeCount(res.data)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"cabiner-right-sidebar-cmain-container\">\r\n            <AfertaPopup />\r\n            <BindroumingPopup />\r\n            <Modal \r\n            bodyStyle={{width: '70wv'}}\r\n            title=\"Notifications\"\r\n            visible={showModal}\r\n            onOk={closeModel}\r\n            onCancel={closeModel}\r\n            cancelButtonProps={{style: {display: \"none\"}}}\r\n            >\r\n                {\r\n                    notifications.map((n, index)=><div style={{marginBottom: 30}}>\r\n                        <h3>{index+1}. {n.title_uz}</h3>\r\n                        <div><Tag \r\n                        style={{marginRight: 10}}\r\n                            color={IMPORTANCE[n.importance].color}>\r\n                                {IMPORTANCE[n.importance].text} \r\n                        </Tag>\r\n                        {moment(n.updated_at).format(\"MMMM Do YYYY, H:mm:ss\")}\r\n                        </div>\r\n                        <div>{ n.body_uz }</div>\r\n                        <hr/>\r\n                    </div>)\r\n                }\r\n            </Modal>\r\n            \r\n\r\n            <div className=\"cabiner-right-sidebar-sub-container\">\r\n                <div className=\"cabinet-documents-action-containers-bloks\">\r\n                    <Link to=\"/cabinet\">\r\n                        <div className={`action-bloks ${active.cabinet ? 'active' : ''}`}>\r\n                            <FontAwesomeIcon icon=\"home\" /> {t(\"Bosh sahifa\")}\r\n                        </div>\r\n                    </Link>\r\n                    <Link to=\"/cabinet/factura\">\r\n                            <div className={`action-bloks ${active.factura ? 'active' : ''}`}>\r\n                                <FontAwesomeIcon icon=\"file-invoice\" className=\"action-icon\" /> {t(\"Faktura\")}\r\n                                <Badge style={{marginLeft: 10}} count={badgeCount.factura_awaiting} />\r\n                            </div>\r\n                    </Link>\r\n                    <Link to=\"/cabinet/contract\">\r\n                        <div className={`action-bloks ${active.contract ? 'active' : ''}`}>\r\n                            <FontAwesomeIcon icon=\"file-contract\" className=\"action-icon\"/> {t(\"Shartnoma\")}\r\n                            <Badge style={{marginLeft: 10}} count={badgeCount.contract_awaiting} />\r\n                        </div>\r\n                    </Link>\r\n                    <Link to=\"/cabinet/act\">\r\n                        <div className={`action-bloks ${active.act ? 'active' : ''}`}>\r\n                            <FontAwesomeIcon icon={[\"far\", \"file-alt\"]} className=\"action-icon\"/> {t(\"Akt\")}\r\n                            <Badge style={{marginLeft: 10}} count={badgeCount.act_awaiting} />\r\n                        </div>\r\n                    </Link>\r\n                    <Link to=\"/cabinet/empowerment\">\r\n                        <div className={`action-bloks ${active.empowerment ? 'active' : ''}`}>\r\n                            <FontAwesomeIcon icon=\"file-signature\" className=\"action-icon\"/>{t(\"Ishonchnoma\")}\r\n                            <Badge style={{marginLeft: 10}} count={badgeCount.emp_awating} />\r\n                        </div>\r\n                    </Link>\r\n                    <Link to=\"/cabinet/tty\">\r\n                        <div className={`action-bloks ${active.tty ? 'active' : ''}`}>\r\n                            <FontAwesomeIcon icon={[\"far\", \"file-archive\"]} className=\"action-icon\"/> {t(\"TTY\")}\r\n                            <Badge style={{marginLeft: 10}} count={badgeCount.tty_awaiting} />\r\n                        </div>\r\n                    </Link>\r\n                    {\r\n                        admin \r\n                        ? <Link to=\"/admin/notification\">\r\n                            <div className={`action-bloks ${active.notification ? 'active' : ''}`}>\r\n                                <FontAwesomeIcon icon={[\"far\", \"bell\"]}  className=\"action-icon\"/> Notification\r\n                                <Badge style={{marginLeft: 10}} count={3} />\r\n                            </div>\r\n                        </Link>\r\n                        : null\r\n                    }\r\n\r\n                    {\r\n                        loadedKey ?\r\n                            <Countdown\r\n                                valueStyle={{fontSize: 15}}\r\n                                value={loadedKey.time + 1000 * 60 * 30}\r\n                                title={t(\"Sessiya tugaydi\")}\r\n                                onFinish={uOut} />\r\n                            : null\r\n                    }\r\n\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    loadedKey: selectLoadedKey\r\n})\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    setData: data => dispatch(setCabinetData(data)),\r\n    uOut: () => dispatch(logOut())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(RightSidebar));\r\n","C:\\HISOBXONA\\on_doc\\src\\components\\language-dropdown\\locale-dropdown.jsx",["259"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\tty\\create\\create.component.jsx",["260","261","262","263","264"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\seller-form.component.jsx",["265"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\empowerment\\index.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\frontend\\login\\login.component.jsx",["266","267","268"],"C:\\HISOBXONA\\on_doc\\src\\utils\\e-imzo.js",["269","270","271","272","273","274","275"],"String.prototype.splitKeep = function(splitter, ahead) {\r\n    var self = this;\r\n    var result = [];\r\n    if (splitter != '') {\r\n        // Substitution of matched string\r\n        function getSubst(value) {\r\n            var substChar = value[0] == '0' ? '1' : '0';\r\n            var subst = '';\r\n            for (var i = 0; i < value.length; i++) {\r\n                subst += substChar;\r\n            }\r\n            return subst;\r\n        };\r\n        var matches = [];\r\n        // Getting mached value and its index\r\n        var replaceName = splitter instanceof RegExp ? \"replace\" : \"replaceAll\";\r\n        var r = self[replaceName](splitter, function(m, i, e) {\r\n            matches.push({ value: m, index: i });\r\n            return getSubst(m);\r\n        });\r\n        // Finds split substrings\r\n        var lastIndex = 0;\r\n        for (var i = 0; i < matches.length; i++) {\r\n            var m = matches[i];\r\n            var nextIndex = ahead == true ? m.index : m.index + m.value.length;\r\n            if (nextIndex != lastIndex) {\r\n                var part = self.substring(lastIndex, nextIndex);\r\n                result.push(part);\r\n                lastIndex = nextIndex;\r\n            }\r\n        };\r\n        if (lastIndex < self.length) {\r\n            var part = self.substring(lastIndex, self.length);\r\n            result.push(part);\r\n        };\r\n    } else {\r\n        result.add(self);\r\n    };\r\n    return result;\r\n};\r\n\r\nexport const CAPIWS = {\r\n    URL: (window.location.protocol.toLowerCase() === \"https:\" ? \"wss://127.0.0.1:64443\" : \"ws://127.0.0.1:64646\") + \"/service/cryptapi\",\r\n    callFunction: function(funcDef, callback, error) {\r\n        if (!window.WebSocket) {\r\n            if (error)\r\n                error();\r\n            return;\r\n        }\r\n        var socket;\r\n        try {\r\n            socket = new WebSocket(this.URL);\r\n        } catch (e) {\r\n            error(e);\r\n        }\r\n        socket.onerror = function(e) {\r\n            if (error)\r\n                error(e);\r\n        };\r\n        socket.onmessage = function(event) {\r\n            var data = JSON.parse(event.data);\r\n            socket.close();\r\n            callback(event, data);\r\n        };\r\n        socket.onopen = function() {\r\n            socket.send(JSON.stringify(funcDef));\r\n        };\r\n    },\r\n    version: function(callback, error) {\r\n        if (!window.WebSocket) {\r\n            if (error)\r\n                error();\r\n            return;\r\n        }\r\n        var socket;\r\n        try {\r\n            socket = new WebSocket(this.URL);\r\n        } catch (e) {\r\n            error(e);\r\n        }\r\n        socket.onerror = function(e) {\r\n            if (error)\r\n                error(e);\r\n        };\r\n        socket.onmessage = function(event) {\r\n            var data = JSON.parse(event.data);\r\n            socket.close();\r\n            callback(event, data);\r\n        };\r\n        socket.onopen = function() {\r\n            var o = { name: 'version' };\r\n            socket.send(JSON.stringify(o));\r\n        };\r\n    },\r\n    apidoc: function(callback, error) {\r\n        if (!window.WebSocket) {\r\n            if (error)\r\n                error();\r\n            return;\r\n        }\r\n        var socket;\r\n        try {\r\n            socket = new WebSocket(this.URL);\r\n        } catch (e) {\r\n            error(e);\r\n        }\r\n        socket.onerror = function(e) {\r\n            if (error)\r\n                error(e);\r\n        };\r\n        socket.onmessage = function(event) {\r\n            var data = JSON.parse(event.data);\r\n            socket.close();\r\n            callback(event, data);\r\n        };\r\n        socket.onopen = function() {\r\n            var o = { name: 'apidoc' };\r\n            socket.send(JSON.stringify(o));\r\n        };\r\n    },\r\n    apikey: function(domainAndKey, callback, error) {\r\n        if (!window.WebSocket) {\r\n            if (error)\r\n                error();\r\n            return;\r\n        }\r\n        var socket;\r\n        try {\r\n            socket = new WebSocket(this.URL);\r\n        } catch (e) {\r\n            error(e);\r\n        }\r\n        socket.onerror = function(e) {\r\n            if (error)\r\n                error(e);\r\n        };\r\n        socket.onmessage = function(event) {\r\n            var data = JSON.parse(event.data);\r\n            socket.close();\r\n            callback(event, data);\r\n        };\r\n        socket.onopen = function() {\r\n            var o = { name: 'apikey', arguments: domainAndKey };\r\n            socket.send(JSON.stringify(o));\r\n        };\r\n    }\r\n};\r\n\r\nexport const EIMZOClient = {\r\n    NEW_API: false,\r\n    API_KEYS: [\r\n        'cabinet.onlinefactura.uz', 'F09A2CBE8EA25A5C065AF78D32F517B1DCF12E997575556CBD90B405A90420E6EB538FCCFFCBAA22C5D191CAB3803965621B023E8642F77F35DDA072FBA17914'\r\n    ],\r\n    checkVersion: function(success, fail) {\r\n        CAPIWS.version(function(event, data) {\r\n            if (data.success === true) {\r\n                if (data.major && data.minor) {\r\n                    var installedVersion = parseInt(data.major) * 100 + parseInt(data.minor);\r\n                    EIMZOClient.NEW_API = installedVersion >= 336;\r\n                    success(data.major, data.minor);\r\n                } else {\r\n                    fail(null, 'E-IMZO Version is undefined');\r\n                }\r\n            } else {\r\n                fail(null, data.reason);\r\n            }\r\n        }, function(e) {\r\n            fail(e, null);\r\n        });\r\n    },\r\n    installApiKeys: function(success, fail) {\r\n        CAPIWS.apikey(EIMZOClient.API_KEYS, function(event, data) {\r\n            if (data.success) {\r\n                success();\r\n            } else {\r\n                fail(null, data.reason);\r\n            }\r\n        }, function(e) {\r\n            fail(e, null);\r\n        });\r\n    },\r\n    listAllUserKeys: function(itemIdGen, itemUiGen, success, fail) {\r\n        var items = [];\r\n        var errors = [];\r\n        if (!EIMZOClient.NEW_API) {\r\n            EIMZOClient._findCertKeys(itemIdGen, itemUiGen, items, errors, function(firstItmId) {\r\n                EIMZOClient._findPfxs(itemIdGen, itemUiGen, items, errors, function(firstItmId2) {\r\n                    if (items.length === 0 && errors.length > 0) {\r\n                        fail(errors[0].e, errors[0].r);\r\n                    } else {\r\n                        var firstId = null;\r\n                        if (items.length === 1) {\r\n                            if (firstItmId) {\r\n                                firstId = firstItmId;\r\n                            } else if (firstItmId2) {\r\n                                firstId = firstItmId2;\r\n                            }\r\n                        }\r\n                        success(items, firstId);\r\n                    }\r\n                });\r\n            });\r\n        } else {\r\n            EIMZOClient._findCertKeys2(itemIdGen, itemUiGen, items, errors, function(firstItmId) {\r\n                EIMZOClient._findPfxs2(itemIdGen, itemUiGen, items, errors, function(firstItmId2) {\r\n                    EIMZOClient._findTokens2(itemIdGen, itemUiGen, items, errors, function(firstItmId3) {\r\n                        if (items.length === 0 && errors.length > 0) {\r\n                            fail(errors[0].e, errors[0].r);\r\n                        } else {\r\n                            var firstId = null;\r\n                            if (items.length === 1) {\r\n                                if (firstItmId) {\r\n                                    firstId = firstItmId;\r\n                                } else if (firstItmId2) {\r\n                                    firstId = firstItmId2;\r\n                                } else if (firstItmId3) {\r\n                                    firstId = firstItmId3;\r\n                                }\r\n                            }\r\n                            success(items, firstId);\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    },\r\n    loadKey: function(itemObject, success, fail, verifyPassword) {\r\n        if (itemObject) {\r\n            var vo = itemObject;\r\n            if (vo.type === \"certkey\") {\r\n                CAPIWS.callFunction({ plugin: \"certkey\", name: \"load_key\", arguments: [vo.disk, vo.path, vo.name, vo.serialNumber] }, function(event, data) {\r\n                    if (data.success) {\r\n                        var id = data.keyId;\r\n                        success(id);\r\n                    } else {\r\n                        fail(null, data.reason);\r\n                    }\r\n                }, function(e) {\r\n                    fail(e, null);\r\n                });\r\n            } else if (vo.type === \"pfx\") {\r\n                CAPIWS.callFunction({ plugin: \"pfx\", name: \"load_key\", arguments: [vo.disk, vo.path, vo.name, vo.alias] }, function(event, data) {\r\n                    if (data.success) {\r\n                        var id = data.keyId;\r\n                        if (verifyPassword) {\r\n                            CAPIWS.callFunction({ name: \"verify_password\", plugin: \"pfx\", arguments: [id] }, function(event, data) {\r\n                                if (data.success) {\r\n                                    success(id);\r\n                                } else {\r\n                                    fail(null, data.reason);\r\n                                }\r\n                            }, function(e) {\r\n                                fail(e, null);\r\n                            });\r\n                        } else {\r\n                            success(id);\r\n                        }\r\n                    } else {\r\n                        fail(null, data.reason);\r\n                    }\r\n                }, function(e) {\r\n                    fail(e, null);\r\n                });\r\n            } else if (vo.type === \"ftjc\") {\r\n                CAPIWS.callFunction({ plugin: \"ftjc\", name: \"load_key\", arguments: [vo.cardUID] }, function(event, data) {\r\n                    if (data.success) {\r\n                        var id = data.keyId;\r\n                        if (verifyPassword) {\r\n                            CAPIWS.callFunction({ plugin: \"ftjc\", name: \"verify_pin\", arguments: [id, '1'] }, function(event, data) {\r\n                                if (data.success) {\r\n                                    success(id);\r\n                                } else {\r\n                                    fail(null, data.reason);\r\n                                }\r\n                            }, function(e) {\r\n                                fail(e, null);\r\n                            });\r\n                        } else {\r\n                            success(id);\r\n                        }\r\n                    } else {\r\n                        fail(null, data.reason);\r\n                    }\r\n                }, function(e) {\r\n                    fail(e, null);\r\n                });\r\n            }\r\n        }\r\n    },\r\n    changeKeyPassword: function(itemObject, success, fail) {\r\n        if (itemObject) {\r\n            var vo = itemObject;\r\n            if (vo.type === \"pfx\") {\r\n                CAPIWS.callFunction({ plugin: \"pfx\", name: \"load_key\", arguments: [vo.disk, vo.path, vo.name, vo.alias] }, function(event, data) {\r\n                    if (data.success) {\r\n                        var id = data.keyId;\r\n                        CAPIWS.callFunction({ name: \"change_password\", plugin: \"pfx\", arguments: [id] }, function(event, data) {\r\n                            if (data.success) {\r\n                                success();\r\n                            } else {\r\n                                fail(null, data.reason);\r\n                            }\r\n                        }, function(e) {\r\n                            fail(e, null);\r\n                        });\r\n                    } else {\r\n                        fail(null, data.reason);\r\n                    }\r\n                }, function(e) {\r\n                    fail(e, null);\r\n                });\r\n            } else if (vo.type === \"ftjc\") {\r\n                CAPIWS.callFunction({ plugin: \"ftjc\", name: \"load_key\", arguments: [vo.cardUID] }, function(event, data) {\r\n                    if (data.success) {\r\n                        var id = data.keyId;\r\n                        CAPIWS.callFunction({ name: \"change_pin\", plugin: \"ftjc\", arguments: [id, '1'] }, function(event, data) {\r\n                            if (data.success) {\r\n                                success();\r\n                            } else {\r\n                                fail(null, data.reason);\r\n                            }\r\n                        }, function(e) {\r\n                            fail(e, null);\r\n                        });\r\n                    } else {\r\n                        fail(null, data.reason);\r\n                    }\r\n                }, function(e) {\r\n                    fail(e, null);\r\n                });\r\n            }\r\n        }\r\n    },\r\n    createPkcs7: function(id, data, timestamper, success, fail) {\r\n        CAPIWS.callFunction({ plugin: \"pkcs7\", name: \"create_pkcs7\", arguments: [btoa(unescape(encodeURIComponent(data))), id, 'no'] }, function(event, data) {\r\n            if (data.success) {\r\n                var pkcs7 = data.pkcs7_64;\r\n                if (timestamper) {\r\n                    var sn = data.signer_serial_number;\r\n                    timestamper(data.signature_hex, function(tst) {\r\n                        CAPIWS.callFunction({ plugin: \"pkcs7\", name: \"attach_timestamp_token_pkcs7\", arguments: [pkcs7, sn, tst] }, function(event, data) {\r\n                            if (data.success) {\r\n                                var pkcs7tst = data.pkcs7_64;\r\n                                success(pkcs7tst);\r\n                            } else {\r\n                                fail(null, data.reason);\r\n                            }\r\n                        }, function(e) {\r\n                            fail(e, null);\r\n                        });\r\n                    }, fail);\r\n                } else {\r\n                    success(pkcs7);\r\n                }\r\n            } else {\r\n                fail(null, data.reason);\r\n            }\r\n        }, function(e) {\r\n            fail(e, null);\r\n        });\r\n    },\r\n    appendPkcs7Attached: function(id, data, timestamper, success, fail) {\r\n        CAPIWS.callFunction({ plugin: \"pkcs7\", name: \"append_pkcs7_attached\", arguments: [data, id] }, function(event, data) {\r\n            if (data.success) {\r\n                var pkcs7 = data.pkcs7_64;\r\n                if (timestamper) {\r\n                    var sn = data.signer_serial_number;\r\n                    timestamper(data.signature_hex, function(tst) {\r\n                        CAPIWS.callFunction({ plugin: \"pkcs7\", name: \"attach_timestamp_token_pkcs7\", arguments: [pkcs7, sn, tst] }, function(event, data) {\r\n                            if (data.success) {\r\n                                var pkcs7tst = data.pkcs7_64;\r\n                                success(pkcs7tst);\r\n                            } else {\r\n                                fail(null, data.reason);\r\n                            }\r\n                        }, function(e) {\r\n                            fail(e, null);\r\n                        });\r\n                    }, fail);\r\n                } else {\r\n                    success(pkcs7);\r\n                }\r\n            } else {\r\n                fail(null, data.reason);\r\n            }\r\n        }, function(e) {\r\n            fail(e, null);\r\n        });\r\n    },\r\n    _getX500Val: function(s, f) {\r\n        var res = s.splitKeep(/,[A-Z]+=/g, true);\r\n        for (var i in res) {\r\n            var n = res[i].search((i > 0 ? \",\" : \"\") + f + \"=\");\r\n            if (n !== -1) {\r\n                return res[i].slice(n + f.length + 1 + (i > 0 ? 1 : 0));\r\n            }\r\n        }\r\n        return \"\";\r\n    },\r\n    _findCertKeyCertificates: function(itemIdGen, itemUiGen, items, errors, allDisks, diskIndex, params, callback) {\r\n        if (parseInt(diskIndex) + 1 > allDisks.length) {\r\n            callback(params);\r\n            return;\r\n        }\r\n        CAPIWS.callFunction({ plugin: \"certkey\", name: \"list_certificates\", arguments: [allDisks[diskIndex]] }, function(event, data) {\r\n            if (data.success) {\r\n                for (var rec in data.certificates) {\r\n                    var el = data.certificates[rec];\r\n                    var vo = {\r\n                        disk: el.disk,\r\n                        path: el.path,\r\n                        name: el.name,\r\n                        serialNumber: el.serialNumber,\r\n                        subjectName: el.subjectName,\r\n                        validFrom: new Date(el.validFrom),\r\n                        validTo: new Date(el.validTo),\r\n                        issuerName: el.issuerName,\r\n                        publicKeyAlgName: el.publicKeyAlgName,\r\n                        CN: EIMZOClient._getX500Val(el.subjectName, \"CN\"),\r\n                        TIN: EIMZOClient._getX500Val(el.subjectName, \"INITIALS\"),\r\n                        O: EIMZOClient._getX500Val(el.subjectName, \"O\"),\r\n                        T: EIMZOClient._getX500Val(el.subjectName, \"T\"),\r\n                        type: 'certkey'\r\n                    };\r\n                    if (!vo.TIN)\r\n                        continue;\r\n                    var itmkey = itemIdGen(vo, rec);\r\n                    if (params.length === 0) {\r\n                        params.push(itmkey);\r\n                    }\r\n                    var itm = itemUiGen(itmkey, vo);\r\n                    items.push(itm);\r\n                }\r\n            } else {\r\n                errors.push({ r: data.reason });\r\n            }\r\n            EIMZOClient._findCertKeyCertificates(itemIdGen, itemUiGen, items, errors, allDisks, parseInt(diskIndex) + 1, params, callback);\r\n        }, function(e) {\r\n            errors.push({ e: e });\r\n            EIMZOClient._findCertKeyCertificates(itemIdGen, itemUiGen, items, errors, allDisks, parseInt(diskIndex) + 1, params, callback);\r\n        });\r\n    },\r\n    _findCertKeys: function(itemIdGen, itemUiGen, items, errors, callback) {\r\n        var allDisks = [];\r\n        CAPIWS.callFunction({ plugin: \"certkey\", name: \"list_disks\" }, function(event, data) {\r\n            if (data.success) {\r\n                for (var rec in data.disks) {\r\n                    allDisks.push(data.disks[rec]);\r\n                    if (parseInt(rec) + 1 >= data.disks.length) {\r\n                        var params = [];\r\n                        EIMZOClient._findCertKeyCertificates(itemIdGen, itemUiGen, items, errors, allDisks, 0, params, function(params) {\r\n                            callback(params[0]);\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                errors.push({ r: data.reason });\r\n            }\r\n        }, function(e) {\r\n            errors.push({ e: e });\r\n            callback();\r\n        });\r\n    },\r\n    _findPfxCertificates: function(itemIdGen, itemUiGen, items, errors, allDisks, diskIndex, params, callback) {\r\n        if (parseInt(diskIndex) + 1 > allDisks.length) {\r\n            callback(params);\r\n            return;\r\n        }\r\n        CAPIWS.callFunction({ plugin: \"pfx\", name: \"list_certificates\", arguments: [allDisks[diskIndex]] }, function(event, data) {\r\n            if (data.success) {\r\n                for (var rec in data.certificates) {\r\n                    var el = data.certificates[rec];\r\n                    var x500name_ex = el.alias.toUpperCase();\r\n                    x500name_ex = x500name_ex.replace(\"1.2.860.3.16.1.1=\", \"INN=\");\r\n                    x500name_ex = x500name_ex.replace(\"1.2.860.3.16.1.2=\", \"PINFL=\");\r\n                    var vo = {\r\n                        disk: el.disk,\r\n                        path: el.path,\r\n                        name: el.name,\r\n                        alias: el.alias,\r\n                        serialNumber: EIMZOClient._getX500Val(x500name_ex, \"SERIALNUMBER\"),\r\n                        validFrom: new Date(EIMZOClient._getX500Val(x500name_ex, \"VALIDFROM\").replace(/\\./g, \"-\").replace(\" \", \"T\")),\r\n                        validTo: new Date(EIMZOClient._getX500Val(x500name_ex, \"VALIDTO\").replace(/\\./g, \"-\").replace(\" \", \"T\")),\r\n                        CN: EIMZOClient._getX500Val(x500name_ex, \"CN\"),\r\n                        TIN: (EIMZOClient._getX500Val(x500name_ex, \"INN\") ? EIMZOClient._getX500Val(x500name_ex, \"INN\") : EIMZOClient._getX500Val(x500name_ex, \"UID\")),\r\n                        UID: EIMZOClient._getX500Val(x500name_ex, \"UID\"),\r\n                        O: EIMZOClient._getX500Val(x500name_ex, \"O\"),\r\n                        T: EIMZOClient._getX500Val(x500name_ex, \"T\"),\r\n                        type: 'pfx'\r\n                    };\r\n                    if (!vo.TIN)\r\n                        continue;\r\n                    var itmkey = itemIdGen(vo, rec);\r\n                    if (params.length === 0) {\r\n                        params.push(itmkey);\r\n                    }\r\n                    var itm = itemUiGen(itmkey, vo);\r\n                    items.push(itm);\r\n                }\r\n            } else {\r\n                errors.push({ r: data.reason });\r\n            }\r\n            EIMZOClient._findPfxCertificates(itemIdGen, itemUiGen, items, errors, allDisks, parseInt(diskIndex) + 1, params, callback);\r\n        }, function(e) {\r\n            errors.push({ e: e });\r\n            EIMZOClient._findPfxCertificates(itemIdGen, itemUiGen, items, errors, allDisks, parseInt(diskIndex) + 1, params, callback);\r\n        });\r\n    },\r\n    _findPfxs: function(itemIdGen, itemUiGen, items, errors, callback) {\r\n        var allDisks = [];\r\n        CAPIWS.callFunction({ plugin: \"pfx\", name: \"list_disks\" }, function(event, data) {\r\n            if (data.success) {\r\n                var disks = data.disks;\r\n                for (var rec in disks) {\r\n                    allDisks.push(data.disks[rec]);\r\n                    if (parseInt(rec) + 1 >= data.disks.length) {\r\n                        var params = [];\r\n                        EIMZOClient._findPfxCertificates(itemIdGen, itemUiGen, items, errors, allDisks, 0, params, function(params) {\r\n                            callback(params[0]);\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                errors.push({ r: data.reason });\r\n            }\r\n        }, function(e) {\r\n            errors.push({ e: e });\r\n            callback();\r\n        });\r\n    },\r\n    _findCertKeys2: function(itemIdGen, itemUiGen, items, errors, callback) {\r\n        var itmkey0;\r\n        CAPIWS.callFunction({ plugin: \"certkey\", name: \"list_all_certificates\" }, function(event, data) {\r\n            if (data.success) {\r\n                for (var rec in data.certificates) {\r\n                    var el = data.certificates[rec];\r\n                    var vo = {\r\n                        disk: el.disk,\r\n                        path: el.path,\r\n                        name: el.name,\r\n                        serialNumber: el.serialNumber,\r\n                        subjectName: el.subjectName,\r\n                        validFrom: new Date(el.validFrom),\r\n                        validTo: new Date(el.validTo),\r\n                        issuerName: el.issuerName,\r\n                        publicKeyAlgName: el.publicKeyAlgName,\r\n                        CN: EIMZOClient._getX500Val(el.subjectName, \"CN\"),\r\n                        TIN: EIMZOClient._getX500Val(el.subjectName, \"INITIALS\"),\r\n                        O: EIMZOClient._getX500Val(el.subjectName, \"O\"),\r\n                        T: EIMZOClient._getX500Val(el.subjectName, \"T\"),\r\n                        type: 'certkey'\r\n                    };\r\n                    if (!vo.TIN)\r\n                        continue;\r\n                    var itmkey = itemIdGen(vo, rec);\r\n                    if (!itmkey0) {\r\n                        itmkey0 = itmkey;\r\n                    }\r\n                    var itm = itemUiGen(itmkey, vo);\r\n                    items.push(itm);\r\n                }\r\n            } else {\r\n                errors.push({ r: data.reason });\r\n            }\r\n            callback(itmkey0);\r\n        }, function(e) {\r\n            errors.push({ e: e });\r\n            callback(itmkey0);\r\n        });\r\n    },\r\n    _findPfxs2: function(itemIdGen, itemUiGen, items, errors, callback) {\r\n        var itmkey0;\r\n        CAPIWS.callFunction({ plugin: \"pfx\", name: \"list_all_certificates\" }, function(event, data) {\r\n            if (data.success) {\r\n                for (var rec in data.certificates) {\r\n                    var el = data.certificates[rec];\r\n                    var x500name_ex = el.alias.toUpperCase();\r\n                    x500name_ex = x500name_ex.replace(\"1.2.860.3.16.1.1=\", \"INN=\");\r\n                    x500name_ex = x500name_ex.replace(\"1.2.860.3.16.1.2=\", \"PINFL=\");\r\n                    var vo = {\r\n                        disk: el.disk,\r\n                        path: el.path,\r\n                        name: el.name,\r\n                        alias: el.alias,\r\n                        serialNumber: EIMZOClient._getX500Val(x500name_ex, \"SERIALNUMBER\"),\r\n                        validFrom: new Date(EIMZOClient._getX500Val(x500name_ex, \"VALIDFROM\").replace(/\\./g, \"-\").replace(\" \", \"T\")),\r\n                        validTo: new Date(EIMZOClient._getX500Val(x500name_ex, \"VALIDTO\").replace(/\\./g, \"-\").replace(\" \", \"T\")),\r\n                        CN: EIMZOClient._getX500Val(x500name_ex, \"CN\"),\r\n                        TIN: (EIMZOClient._getX500Val(x500name_ex, \"INN\") ? EIMZOClient._getX500Val(x500name_ex, \"INN\") : EIMZOClient._getX500Val(x500name_ex, \"UID\")),\r\n                        UID: EIMZOClient._getX500Val(x500name_ex, \"UID\"),\r\n                        O: EIMZOClient._getX500Val(x500name_ex, \"O\"),\r\n                        T: EIMZOClient._getX500Val(x500name_ex, \"T\"),\r\n                        type: 'pfx'\r\n                    };\r\n                    if (!vo.TIN)\r\n                        continue;\r\n                    var itmkey = itemIdGen(vo, rec);\r\n                    if (!itmkey0) {\r\n                        itmkey0 = itmkey;\r\n                    }\r\n                    var itm = itemUiGen(itmkey, vo);\r\n                    items.push(itm);\r\n                }\r\n            } else {\r\n                errors.push({ r: data.reason });\r\n            }\r\n            callback(itmkey0);\r\n        }, function(e) {\r\n            errors.push({ e: e });\r\n            callback(itmkey0);\r\n        });\r\n    },\r\n    _findTokens2: function(itemIdGen, itemUiGen, items, errors, callback) {\r\n        var itmkey0;\r\n        CAPIWS.callFunction({ plugin: \"ftjc\", name: \"list_all_keys\", arguments: [''] }, function(event, data) {\r\n            if (data.success) {\r\n                for (var rec in data.tokens) {\r\n                    var el = data.tokens[rec];\r\n                    var x500name_ex = el.info.toUpperCase();\r\n                    x500name_ex = x500name_ex.replace(\"1.2.860.3.16.1.1=\", \"INN=\");\r\n                    x500name_ex = x500name_ex.replace(\"1.2.860.3.16.1.2=\", \"PINFL=\");\r\n                    var vo = {\r\n                        cardUID: el.cardUID,\r\n                        statusInfo: el.statusInfo,\r\n                        ownerName: el.ownerName,\r\n                        info: el.info,\r\n                        serialNumber: EIMZOClient._getX500Val(x500name_ex, \"SERIALNUMBER\"),\r\n                        validFrom: new Date(EIMZOClient._getX500Val(x500name_ex, \"VALIDFROM\")),\r\n                        validTo: new Date(EIMZOClient._getX500Val(x500name_ex, \"VALIDTO\")),\r\n                        CN: EIMZOClient._getX500Val(x500name_ex, \"CN\"),\r\n                        TIN: (EIMZOClient._getX500Val(x500name_ex, \"INN\") ? EIMZOClient._getX500Val(x500name_ex, \"INN\") : EIMZOClient._getX500Val(x500name_ex, \"UID\")),\r\n                        UID: EIMZOClient._getX500Val(x500name_ex, \"UID\"),\r\n                        O: EIMZOClient._getX500Val(x500name_ex, \"O\"),\r\n                        T: EIMZOClient._getX500Val(x500name_ex, \"T\"),\r\n                        type: 'ftjc'\r\n                    };\r\n                    if (!vo.TIN)\r\n                        continue;\r\n                    var itmkey = itemIdGen(vo, rec);\r\n                    if (!itmkey0) {\r\n                        itmkey0 = itmkey;\r\n                    }\r\n                    var itm = itemUiGen(itmkey, vo);\r\n                    items.push(itm);\r\n                }\r\n            } else {\r\n                errors.push({ r: data.reason });\r\n            }\r\n            callback(itmkey0);\r\n        }, function(e) {\r\n            errors.push({ e: e });\r\n            callback(itmkey0);\r\n        });\r\n    }\r\n};","C:\\HISOBXONA\\on_doc\\src\\cabinet\\aferta-popup\\aferta-popup.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\payme-form\\payme-form.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\translate.js",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\home\\home.component.jsx",["276","277","278","279","280"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\act\\index.router.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\components\\admin-card\\admin-card.component.jsx",["281","282","283"],"import React from 'react';\r\nimport './admin-card.style.scss';\r\nimport { Badge, Card } from 'antd';\r\nimport {PlusCircleTwoTone} from '@ant-design/icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AdminCard = ({ data })=>{\r\n    const {title, icon, color, count} = data\r\n    return(\r\n    <Card className=\"admin-card-container\" >\r\n        <div className={`admin-card-icon-field admin-card-${color}`} ><FontAwesomeIcon icon={icon} className=\"admin-card-icon\"/></div>\r\n        <div className=\"admin-card-title\">{title}</div>\r\n        <div className=\"admin-card-content\">{count}</div>\r\n        \r\n    </Card>\r\n)}\r\n\r\nexport default AdminCard;","C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\person-fetch\\person-fetch.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\admin\\notification\\form.component.jsx",["284"],"import { Col, Form, Input, Row, Select, Button, Switch, message } from 'antd'\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nconst { Option } = Select;\r\n\r\nconst NotificationForm = ({ match }) => {\r\n\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(false);\r\n    const { notificationId } = match.params;\r\n    \r\n    useEffect(()=>{\r\n        if(notificationId){\r\n            axios({\r\n                url:\"api/v1/notifications/\"+notificationId,\r\n                method: \"get\"\r\n            })\r\n            .then(res=>{\r\n                form.setFieldsValue(res.data)\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n    },[])\r\n    \r\n    const handleSubmit = values => {\r\n\r\n        setLoading(true)\r\n        axios({\r\n            method:  notificationId ? \"patch\" : \"post\",\r\n            data: values,\r\n            url: notificationId ? \"/api/v1/notifications/\"+notificationId  : \"/api/v1/notifications\" \r\n        }).then(res=>{\r\n            if(res.data.ok){\r\n                message.success(\"Notification saqlandi!\");\r\n            }else{\r\n                message.error(\"Notification saqlashda xatolik!\");\r\n            }\r\n            setLoading(false);\r\n        }).catch(err=>{\r\n            console.log(err)\r\n            message.error(\"Notification saqalashda xatolik!\");\r\n            setLoading(false);\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{marginTop: 20}}>\r\n            <Form\r\n                form={form}\r\n                onFinish={handleSubmit}\r\n                scrollToFirstError\r\n            >\r\n                <div className=\"factura-data-sheet-container\">\r\n                <h3>Notification yaratish</h3>\r\n                <Row justify=\"space-between\">\r\n                    <Col md={11}>\r\n                        <Form.Item>\r\n                            <Form.Item\r\n                                rules={[{ required: true }]}\r\n                                key=\"dyna-form-facutura-no\"\r\n                                name=\"title_uz\">\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    />\r\n                            </Form.Item>\r\n                            <span className=\"custom-input-label-1\">Notification sarlavhasi (uz)</span>\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Form.Item\r\n                                rules={[{ required: true }]}\r\n                                key=\"dyna-form-facutura-no\"\r\n                                name=\"title_ru\">\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    />\r\n                            </Form.Item>\r\n                            <span className=\"custom-input-label-1\">Notification sarlavhasi (ru)</span>\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Form.Item\r\n                                rules={[{ required: true }]}\r\n                                key=\"dyna-form-facutura-no\"\r\n                                name=\"title_en\">\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    />\r\n                            </Form.Item>\r\n                            <span className=\"custom-input-label-1\">Notification sarlavhasi (en)</span>\r\n                        </Form.Item>\r\n                        \r\n                        <Form.Item>\r\n                            <Form.Item\r\n                                rules={[{ required: true }]}\r\n                                key=\"dyna-form-facutura-no\"\r\n                                name=\"importance\">\r\n                                <Select\r\n                                    bordered={false}\r\n                                    size=\"large\"\r\n                                    name=\"importance\"\r\n                                    defaultActiveFirstOption\r\n                                >\r\n                                    <Option value={1}>1 - Uncha muxim emas</Option>\r\n                                    <Option value={2}>2 - Muxim emas</Option>\r\n                                    <Option value={3}>3 - Muxim</Option>\r\n                                    <Option value={4}>4 - Muximroq</Option>\r\n                                    <Option value={5}>5 - O'ta muxim</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <span className=\"custom-input-label-1\">Notification muximligi</span>\r\n                        </Form.Item>\r\n                        <Row justify=\"space-between\">\r\n                            <Col md={11}>\r\n                                <Form.Item\r\n                                    label=\"Holati\"\r\n                                    name=\"isActive\"\r\n                                    valuePropName=\"checked\"\r\n                                    rules={[{ required: true }]}\r\n                                >\r\n                                    <Switch />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col md={11}>\r\n                                <Form.Item>\r\n                                    <Button \r\n                                        loading={loading}\r\n                                        style={{width: '100%'}}\r\n                                        size=\"large\" \r\n                                        htmlType=\"submit\"\r\n                                        className=\"factra-action-btns save-btn\"\r\n                                        >Saqlash</Button>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <Form.Item\r\n                            name=\"body_uz\"\r\n                            \r\n                            rules={[{ required: true }]}\r\n                        >\r\n                            <TextArea \r\n                                placeholder=\"Body uz\"\r\n                                rows={4} size=\"large\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                        \r\n                            name=\"body_ru\"\r\n                            rules={[{ required: true }]}\r\n                        >\r\n                            <TextArea rows={4} \r\n                                placeholder=\"Body ru\"\r\n                                size=\"large\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"body_en\"\r\n                            \r\n                            rules={[{ required: true }]}\r\n                        >\r\n                            <TextArea \r\n                                placeholder=\"Body en\"\r\n                                rows={4} size=\"large\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotificationForm\r\n","C:\\HISOBXONA\\on_doc\\src\\utils\\home.config.provider.js",["285"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\notifications\\notifications.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\home\\home.component.jsx",["286","287","288"],"import { Col, Row } from 'antd';\r\nimport axios from 'axios';\r\nimport React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport AdminCard from '../../components/admin-card/admin-card.component';\r\nimport DynaGrid from '../../components/dyna-grid/dyna-grid.component';\r\nimport { selectCabinetData } from '../../redux/user/user.selector';\r\nimport './home.component.scss';\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst CabinetHome = ({ cabinetData }) => {\r\n\r\n    const {t} = useTranslation()\r\n\r\n    const [activeTab, setActiveTab] = useState(0)\r\n    const { income, outcome, rejected, saved } = cabinetData ?? {};\r\n    const TabList= {\r\n        0: t(\"Kiruvchi hujjatlar\"),\r\n        1: t(\"Chiquvchi hujjatlar\"),\r\n        2: t(\"Rad etilgan hujjatlar\"),\r\n        3: t(\"Saqlangan hujjatlar\")\r\n    }\r\n\r\n    const list_of_docs = [\r\n        {\r\n            title: t(\"Kiruvchi\"),\r\n            count: income,\r\n            icon: \"cloud-download-alt\",\r\n            color: \"purple\",\r\n            footer: \"Faktura yaratish\",\r\n            create_url: \"/cabinet/documents/waiting\"\r\n        },\r\n        {\r\n            title: t(\"Chiquvchi\"),\r\n            count: outcome,\r\n            icon: \"cloud-upload-alt\",\r\n            color: \"green\",\r\n            footer: \"Shartnoma yaratish\",\r\n            create_url: \"/cabinet/documents/signed\"\r\n        },\r\n        {\r\n            title: t(\"Rad etilgan\"),\r\n            count: rejected,\r\n            icon: \"ban\",\r\n            color: \"pink\",\r\n            footer: \"Akt yaratish\",\r\n            create_url: \"/cabinet/documents/rejected\"\r\n        },\r\n        {\r\n            title: t(\"Saqlangan\"),\r\n            count: saved,\r\n            icon: [\"far\", \"bookmark\"],\r\n            color: \"orange\",\r\n            footer: \"Ishonchnoma yaratish\",\r\n            create_url: \"/cabinet/documents/saved\"\r\n        },\r\n    \r\n    ]\r\n\r\n    const dyna_config = {\r\n        dataSourcePath: `/api/v1/cabinet/${activeTab}?hi`,\r\n        addActionPath: 'actions/add',\r\n        viewActionPath: '/cabinet/{docType}/view',\r\n        replaceInViewPath: \"docType\",\r\n        deleteConfirmText: \"Shu faktura ochirilsinmi?\",\r\n        actions: {\r\n            edit: activeTab===3 ? true : false,\r\n            delete: activeTab===3 ? true : false,\r\n            view: true\r\n        },\r\n        allColumns: [\r\n            {\r\n                title: t(\"Hujjat №\"),\r\n                dataIndex: 'docNo',\r\n                isSearchable: true,\r\n            },\r\n            {\r\n                title: t(\"Hujjat turi\"),\r\n                dataIndex: \"docType\",\r\n                isFilterable: true,\r\n                filters: ['factura', 'act', 'contract', 'empowerment', \"tty\"]\r\n            },\r\n            {\r\n                title: t(\"Kontrakt №\"),\r\n                dataIndex: 'contractNo',\r\n                isSearchable: true,\r\n            },\r\n            {\r\n                title: t(\"Kontragent\"),\r\n                dataIndex: 'sellerName',\r\n                isSearchable: true,\r\n                width: 150\r\n            },\r\n            {\r\n                title: t(\"Kontragent\")+\" \"+t(\"STIR\"),\r\n                dataIndex: \"sellerTin\",\r\n                isSearchable: true,\r\n            },\r\n            {\r\n                title: \"Oluvchi\",\r\n                dataIndex: 'buyerName',\r\n                isSearchable: true,\r\n                width: 150\r\n            },\r\n            {\r\n                title: \"Oluvchi STIR\",\r\n                dataIndex: \"buyerTin\",\r\n                isSearchable: true,\r\n            },\r\n            {\r\n                title: t(\"Holati\"),\r\n                dataIndex: \"status\",\r\n                isFilterable: true,\r\n                width: 70,\r\n                filters: [\r\n                    {value: 1, text: \"1-Saqlangan\"}, \r\n                    {value: 2, text: \"2-Imzo kutilmoqda\"}, \r\n                    {value: 3, text: \"3-Jo'natilgan\"}, \r\n                    {value: 4, text: \"4-Xatolik yuzbergan\"},\r\n                    {value: 5, text: \"5-Qaytarib yuborilgan\"}, \r\n                    {value: 6, text: \"6-Qabul qilingan\"}, \r\n                    {value: 7, text: \"7-Muaffaqiyatli\"}]\r\n            },\r\n            {\r\n                title: t('Yaratilgan sana'),\r\n                dataIndex: \"created_at\",\r\n                dataType: 'date',\r\n            },\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <div className=\"cabinet-home-main-container\">\r\n            <div className=\"cabinet-home-sub-container\">\r\n                <Row gutter={[16, 16]}>\r\n                    {\r\n                        list_of_docs.map((data, index)=><Col onClick={()=>setActiveTab(index)} md={6}>\r\n                            <AdminCard data={data} />\r\n                        </Col>)\r\n                    }\r\n                    \r\n                </Row>\r\n                <DynaGrid\r\n                    title={TabList[activeTab]}\r\n                    config={dyna_config}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    cabinetData: selectCabinetData\r\n})\r\n\r\nexport default connect(mapStateToProps)(CabinetHome)\r\n","C:\\HISOBXONA\\on_doc\\src\\cabinet\\act\\create\\create.component.jsx",["289","290","291","292","293","294"],"C:\\HISOBXONA\\on_doc\\src\\components\\data-sheet-custom-measure-selector\\custom-selector.component.jsx",["295","296","297","298"],"C:\\HISOBXONA\\on_doc\\src\\redux\\store.js",["299"],"import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport { persistStore } from 'redux-persist';\r\nimport rootReducer from './root-reducer';\r\nimport creatSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './root-saga';\r\n\r\nconst sagaMiddleWare = creatSagaMiddleware();\r\n\r\nconst middleWares = [sagaMiddleWare];\r\n\r\nmiddleWares.push(logger);\r\n\r\n// if(process.env.NODE_ENV ==='development'){\r\n//     middleWares.push(logger);\r\n// }\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middleWares));\r\n\r\nsagaMiddleWare.run(rootSaga)\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default { store, persistor };","C:\\HISOBXONA\\on_doc\\src\\cabinet\\empowerment\\create\\create.component.jsx",["300","301","302","303","304","305"],"import React, { useState, useEffect } from 'react';\r\nimport 'react-datasheet/lib/react-datasheet.css';\r\nimport Datasheet from 'react-datasheet';\r\nimport SelectMeasureEditor from '../../../components/data-sheet-custom-measure-selector/custom-selector.component';\r\nimport { Button, Input, Form, Row, Col, DatePicker, Select, Upload, message } from 'antd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n//import './create.style.scss';\r\nimport axios from 'axios';\r\nimport BuyerForm from '../../common/buyer-form.component';\r\nimport SellerForm from '../../common/seller-form.component';\r\nimport { connect } from 'react-redux';\r\nimport { selectToken } from '../../../redux/user/user.selector';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport moment from 'moment';\r\nimport { \r\n  FullscreenOutlined, \r\n  FullscreenExitOutlined, \r\n  } from '@ant-design/icons';\r\nimport { convertProductsToGrid, FIRST_EMPOWERMENT_GRID_ROW } from '../../../utils/main';\r\n\r\nconst EmpowermentForm = ({ token, match })=> {\r\n\r\n  const [form] = Form.useForm();\r\n  const { empowermentId } = match.params;\r\n  const [initialData, setInitialData] = useState()\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n  useEffect(()=>{\r\n    if(empowermentId){\r\n\r\n      //fetch fatura data\r\n      axios({\r\n        url: `/api/v1/empowerments/${empowermentId}`,\r\n        method: \"GET\",\r\n      }).then(res=>{\r\n        let data = res.data;\r\n        data.contractDate=moment(data.contractDate);\r\n        data.created_at=moment(data.created_at);\r\n        data.empowermentDateOfExpire=moment(data.empowermentDateOfExpire);\r\n        data.empowermentDateOfIssue=moment(data.empowermentDateOfIssue);\r\n        data.agentPassportDateOfIssue=moment(data.agentPassportDateOfIssue);\r\n        data.updated_at=moment(data.updated_at);\r\n  \r\n        setInitialData(data);\r\n        form.resetFields();\r\n        setGrid(convertProductsToGrid(res.data.products, \"empowerment\"));\r\n      }).catch(err=>{\r\n        console.log(err);\r\n      })\r\n      //end fetch factura data;\r\n    }\r\n  }, [])\r\n  \r\n\r\n  const validateMessages = {\r\n    required: 'Bu maydon majburiy!',\r\n    types: {\r\n      email: '${label} is not a valid email!',\r\n      number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n      range: '${label} must be between ${min} and ${max}',\r\n    },\r\n    \r\n  };\r\n\r\n\r\n  const [fullView, toglleFullView] = useState(false)\r\n\r\n\r\n  const [grid, setGrid] = useState([\r\n    FIRST_EMPOWERMENT_GRID_ROW,\r\n    [\r\n      { readOnly: true, value: 1 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //2 measure\r\n      { value: '' },                                          //3 amount\r\n    ], \r\n    [\r\n      { readOnly: true, value: 2 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //2 measure\r\n      { value: '' },                                          //3 amount\r\n    ], \r\n    [\r\n      { readOnly: true, value: 3 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //2 measure\r\n      { value: '' },                                          //3 amount\r\n    ], \r\n    [\r\n      { readOnly: true, value: 4 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //4 measure\r\n      { value: '' },                                          //5 amount\r\n    ], \r\n  ])\r\n\r\n  const fetchAgent = e=>{\r\n    let val = e.target.value;\r\n    if(!isNaN(val)){\r\n\r\n      if(val > 100000000 && val<999999999){\r\n        axios({\r\n          method: \"GET\",\r\n          url: \"info/contragent-by-tin?tin=\"+val\r\n        })\r\n        .then(res=>{\r\n          const { \r\n            name, \r\n            fullName, \r\n            passIssueDate, \r\n            passOrg,\r\n            passNumber,\r\n            passSeries\r\n          } = res.data;\r\n          console.log(moment('2020-00-00 00:00:00')._isValid)\r\n          form.setFieldsValue({\r\n            agentFio: fullName ?? name,\r\n            agentPassportDateOfIssue: moment(passIssueDate)._isValid ? moment(passIssueDate) : null,\r\n            agentPassportIssuedBy: passOrg,\r\n            agentPassportNumber: passSeries + passNumber\r\n          })\r\n        })\r\n      }\r\n\r\n    }else{\r\n      message.warning(\"STIR notog'ri kiritildi!\");\r\n    }\r\n  }\r\n\r\n\r\n  //#region data-sheet methods\r\n  const handleRemoveRow = (rowId)=>{\r\n    console.log(rowId)\r\n\r\n    console.log(grid)\r\n    grid.splice(rowId, 1)\r\n    console.log(grid)\r\n    setGrid([...grid])\r\n  }\r\n\r\n  const valueRenderer = cell => cell.value;\r\n  const onCellsChanged = changes => {\r\n    changes.forEach(({ cell, row, col, value }, index) => {\r\n        //this sets changed values\r\n        grid[row][col] = { ...grid[row][col], value };        \r\n\r\n    });\r\n     setGrid([...grid]);\r\n  };\r\n\r\n  const handleAddRow = ()=>{\r\n    \r\n    const sampleRow = [\r\n      { readOnly: true, value:    grid.length }, //0 ordNo\r\n      { value: \"\" }, //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor }, //4 measure\r\n      { value: '' }, //5 amount\r\n    ]\r\n\r\n    let newgrid = [...grid, sampleRow];\r\n\r\n     setGrid(newgrid)\r\n  }\r\n\r\n  const onContextMenu = (e, cell, i, j) =>\r\n    cell.readOnly ? e.preventDefault() : null;\r\n//#endregion\r\n  \r\n  //#region form methods\r\n\r\n  const handleSubmit = (values)=>{\r\n    setIsLoading(true)\r\n    console.log(values)\r\n    if(empowermentId){\r\n      axios({\r\n        url:`/api/v1/empowerments/${empowermentId}`,\r\n        method: 'PATCH',\r\n        data: {emp: values, products: grid}\r\n      }).then(res=>{\r\n        console.log(res)\r\n        setIsLoading(false);\r\n        if(res.data.ok){\r\n          message.success(\"Ishonchnoma ozgartirildi!\")\r\n        }\r\n        else{\r\n          message.error(\"Ishonchnoma o'zgartirishda xatolik!\");\r\n        }\r\n      }).catch(err=>{\r\n        setIsLoading(false);\r\n        message.error(\"Ishonchnoma o'zgartirishda xatolik!\");\r\n        console.log(err)\r\n      })\r\n    } else{\r\n      axios({\r\n        url:'/api/v1/empowerments',\r\n        method: 'post',\r\n        data: {emp: values, products: grid}\r\n      }).then(res=>{\r\n        setIsLoading(false)\r\n        if(res.data.ok){\r\n          message.success(\"Ishonchnma yaratildi!\");\r\n        }else{\r\n          message.error(\"Ishonchnoma yaratishda xatolik\");\r\n        }\r\n\r\n        console.log(res)\r\n      }).catch(err=>{\r\n        setIsLoading(false);\r\n        message.error(\"Ishonchnoma yaratishda xatolik\");\r\n        console.log(err)\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n  const handleImportExecl =(value)=>{\r\n    console.log(\"me fired\")\r\n\r\n    if(value.file.status==\"done\"){\r\n      \r\n      const { response } = value.file\r\n\r\n      response.excel.forEach((element, index)=>{\r\n        element[0].value = index + 1;\r\n        element[0].readOnly = true;\r\n        element[4].dataEditor = SelectMeasureEditor;\r\n      })\r\n\r\n      setGrid([grid[0], ...response.excel])\r\n      console.log(response)\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n  \r\n  return (\r\n    <div style={{padding: 15}}>\r\n      <Form\r\n        initialValues={initialData}\r\n        form={form}\r\n        name=\"factura\"\r\n        onFinish = {handleSubmit}\r\n        scrollToFirstError\r\n        validateMessages={validateMessages}\r\n      >\r\n\r\n      <div className=\"factura-data-sheet-container\">\r\n      <h3>Ishonchnoma</h3>\r\n      \r\n      <Row justify=\"space-between\">\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                rules={[{required: true}]}\r\n                key=\"dyna-form-facutura-no\"\r\n                name=\"empowermentNo\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder=\"Inshonchnoma raqami\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Inshonchnoma raqami</span>\r\n              </Form.Item>\r\n            </Col>\r\n            \r\n            <Col md={11}>\r\n              <div style={{display: 'flex', justifyContent: \"space-between\"}}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                key=\"dyna-form-item-inn-date\"\r\n                name=\"empowermentDateOfIssue\"\r\n                rules={[{required: true}]}>\r\n                  <DatePicker                \r\n                    size=\"large\"\r\n                    placeholder=\"Berilgan sanasi\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Berilgan sanasi</span>\r\n              </Form.Item>\r\n          \r\n            <Form.Item>\r\n              <Form.Item \r\n                key=\"dyna-form-item-inn-date-expire\"\r\n                name=\"empowermentDateOfExpire\"\r\n                rules={[{required: true}]}>\r\n                  <DatePicker                \r\n                    size=\"large\"\r\n                    placeholder=\"Amal qilish sanasi\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Amal qilish sanasi</span>\r\n              </Form.Item>\r\n              </div>\r\n            </Col>\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                rules={[{required: true}]}\r\n                key=\"dyna-form-item-contract-n0\"\r\n                name=\"contractNo\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder=\"Shartnoma raqami\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Shartnoma raqami</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                rules={[{required: true}]}\r\n                key=\"dyna-form-item-contract-date\"\r\n                name=\"contractDate\">\r\n                  <DatePicker\r\n                    size=\"large\"\r\n                    placeholder=\"Shartnoma sanasi\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Shartnoma sanasi</span>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n      </div>\r\n\r\n      <div className=\"factura-data-sheet-container\">\r\n        \r\n        <Row justify=\"space-between\">\r\n        <Col md={11}>  \r\n          <SellerForm docType=\"empowerment\"/>\r\n        </Col>\r\n\r\n        <Col md={11}>\r\n          <BuyerForm form={ form } docType=\"empowerment\"/>\r\n        </Col>\r\n      </Row>\r\n      </div>\r\n      <div className={`factura-data-sheet-container ${fullView ? 'grid-full-view' : null}`}>\r\n        <div style={{marginBottom: 10, display: 'flex', justifyContent:'space-between'}}>\r\n          <div style={{display: 'flex'}}>\r\n              <Upload \r\n                headers={{\r\n                  Authorization: \"Bearer \" + token\r\n                }}\r\n                multiple={false}\r\n                action=\"http://127.0.0.1:8000/api/v1/factura-products/read-excel\"\r\n                accept=\".xlsx, .xls\" \r\n                onChange={handleImportExecl}>\r\n                \r\n                  <Button style={{marginRight: 10}}>Exceldan yuklash</Button>\r\n               \r\n              </Upload>\r\n              <a target=\"_blank\" href=\"../../../excels/on_doc_factura_products.xlsx\" download>\r\n                <Button >\r\n                  Shablon yuklash\r\n                </Button>\r\n              </a>\r\n            </div>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={fullView ? <FullscreenExitOutlined /> : <FullscreenOutlined />} \r\n              onClick={()=>toglleFullView(!fullView)}>\r\n                { fullView ? \"Kichraytirish\" : \"Kengaytirish\" }\r\n            </Button>\r\n        </div>\r\n        \r\n      <div style={{overflowX: 'auto'}} >\r\n        <div style={{width: '100%'}}>\r\n          <Datasheet\r\n            data={ grid}\r\n            valueRenderer={ valueRenderer}\r\n            onContextMenu={ onContextMenu}\r\n            onCellsChanged={ onCellsChanged}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Button \r\n        size=\"large\" \r\n        style={{marginTop: 20, marginRight: 7, width: 220}} \r\n        type=\"primary\" \r\n        icon={<FontAwesomeIcon \r\n          style={{marginRight: 7}} \r\n          icon={[\"far\", \"plus-square\"]} />} \r\n        onClick={  handleAddRow }>Qo'shish</Button>\r\n      \r\n      <Button \r\n        size=\"large\" \r\n        style={{marginTop: 20, width: 220 }} \r\n        danger\r\n        type=\"primary\" \r\n        icon={<FontAwesomeIcon \r\n          style={{marginRight: 7}} \r\n          icon={[\"far\", \"trash-alt\"]} />} \r\n        onClick={ ()=>{ if(grid.length>1){ handleRemoveRow(grid.length-1) }}  }>Oxirgi qatorni o'chirish</Button>\r\n      </div>\r\n          \r\n        <div className=\"factura-data-sheet-container\">\r\n\r\n          <Row justify=\"space-between\">\r\n          <Col md={7}>\r\n              <Form.Item>\r\n                <Form.Item \r\n              key=\"seler-account-tyin-inn\"\r\n              name=\"agentTin\">\r\n                <Input\r\n                  size=\"large\"\r\n                  placeholder=\"СТИР\"\r\n                  onChange={fetchAgent}\r\n\r\n                  />\r\n              </Form.Item>\r\n                <span className=\"custom-input-label-1\">СТИР</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={7} >\r\n              <Form.Item>\r\n                <Form.Item \r\n              key=\"agentFio-no\"\r\n              name=\"agentFio\">\r\n                <Input\r\n                  size=\"large\"\r\n                  placeholder=\"ФИШ\" />\r\n              </Form.Item>\r\n                <span className=\"custom-input-label-1\">ФИШ</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={7}>\r\n              <Form.Item>\r\n                <Form.Item \r\n              key=\"seler-account-empowerment-dateof-issue-agentJobTittle\"\r\n              name=\"agentJobTittle\">\r\n                <Input\r\n                  size=\"large\"\r\n                  placeholder=\"Мансаб\" />\r\n              </Form.Item>\r\n                <span className=\"custom-input-label-1\">Мансаб</span>\r\n              </Form.Item>\r\n            </Col>\r\n            \r\n            <Col md={7}>\r\n          \r\n                <Form.Item>\r\n                  <Form.Item \r\n                key=\"seler-account-agent-fioe\"\r\n                name=\"agentPassportNumber\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder=\"Паспорт серия ва рақами\" />\r\n                </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Паспорт серия ва рақами</span>\r\n                </Form.Item>\r\n            \r\n            </Col>\r\n\r\n  <Col md={7} >\r\n    <Form.Item>\r\n      <Form.Item \r\n    key=\"selenote-field\"\r\n    name=\"agentPassportIssuedBy\">\r\n      <Input\r\n        size=\"large\"\r\n        placeholder=\"Ким томонидан берилган\" />\r\n    </Form.Item>\r\n      <span className=\"custom-input-label-1\">Ким томонидан берилган</span>\r\n    </Form.Item>\r\n  </Col>\r\n  <Col md={7} >\r\n    <Form.Item>\r\n      <Form.Item \r\n    key=\"selenote-field\"\r\n    name=\"agentPassportDateOfIssue\">\r\n      <DatePicker\r\n        size=\"large\"\r\n        placeholder=\"Паспорт берилган сана\" />\r\n    </Form.Item>\r\n      <span className=\"custom-input-label-1\">Паспорт берилган сана</span>\r\n    </Form.Item>\r\n  </Col>\r\n  \r\n</Row>\r\n</div>\r\n          <div className=\"factura-data-sheet-container\">\r\n            <Row justify=\"space-around\">\r\n              <Col >\r\n                <Button \r\n                  loading={isLoading}\r\n                  primary\r\n                  htmlType=\"submit\"\r\n                  className=\"factra-action-btns save-btn\" \r\n                  size=\"large\"\r\n                  icon={<FontAwesomeIcon icon=\"save\" className=\"factura-action-btn-icons\"  />}>\r\n                    Сақлаб қолиш\r\n                  </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button \r\n                  className=\"factra-action-btns sing-btn\" \r\n                  size=\"large\"\r\n                  icon={<FontAwesomeIcon icon=\"signature\" className=\"factura-action-btn-icons\" />}>\r\n                    Имзолаш\r\n                  </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button \r\n                  icon={<FontAwesomeIcon icon=\"ban\" className=\"factura-action-btn-icons\" />} \r\n                  danger \r\n                  className=\"factra-action-btns\" \r\n                  size=\"large\">\r\n                    Бекор қилиш\r\n                  </Button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <Form.Item\r\n            name=\"empowermentId\"\r\n            key=\"empowermemt-id\"\r\n          >\r\n            <Input type=\"hidden\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"empowermentProductId\"\r\n            key=\"empowermemt-product-id\"\r\n          >\r\n            <Input type=\"hidden\" />\r\n          </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  token: selectToken\r\n})\r\n\r\nexport default connect(mapStateToProps)(EmpowermentForm);","C:\\HISOBXONA\\on_doc\\src\\frontend\\choose_company\\choose-company.component.jsx",["306","307","308"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, List, message } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { setUser, setUserCompanies } from '../../redux/user/user.action';\r\nimport { selectKeyUser, selectUserCompanies } from '../../redux/user/user.selector';\r\nimport './choose-company.style.scss';\r\n\r\nconst ChooseCompany = ({ setCurrentUser, history, user, setUserComps, companies }) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const setChoosenCompany = async (tin, push_to_cabinet=true)=>{\r\n        await axios({\r\n            url: `user/get-company-data?tin=${tin}`,\r\n            method: 'get'\r\n        }).then(res => {\r\n            setLoading(false)\r\n            setCurrentUser(res.data.company)\r\n            if(push_to_cabinet){\r\n                history.push(\"/cabinet\")\r\n            }\r\n\r\n        }).catch(e => {\r\n\r\n            console.log(e)\r\n\r\n        })\r\n    }\r\n\r\n    const { t } = useTranslation();\r\n    \r\n\r\n    const [chosen, setChosen] = useState(null);\r\n\r\n    useEffect(()=>{\r\n\r\n        if(chosen){\r\n            setChoosenCompany(chosen)\r\n        }\r\n\r\n    }, [chosen]);\r\n\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        axios({\r\n            url: `info/director-company/?tin=${user.username}`,\r\n            method: 'get',\r\n        }).then(res=>{\r\n            console.log(res);\r\n            if(res.data.success){\r\n                setUserComps(res.data.data)\r\n                setLoading(false)\r\n                if(res.data?.data?.length==1){\r\n                    setChoosenCompany(res.data.data[0].company_tin)\r\n                }\r\n            }else{\r\n                message.error(\"Serverda xatolik!\");\r\n                setLoading(false)\r\n            }\r\n            \r\n        }).catch(err=>{\r\n            console.log(err);\r\n            message.error(\"Serverda xatolik!\");\r\n            setLoading(false)\r\n        })\r\n    }, [])\r\n\r\n\r\n    return (<div className=\"choose-company-main-container\">\r\n        <div className=\"choose-company-sub-container\">\r\n            <Button\r\n                onClick={() => { history.goBack() }}\r\n                type=\"primary\"\r\n\r\n                icon={<FontAwesomeIcon\r\n                    style={{ marginRight: 10 }}\r\n                    icon=\"arrow-circle-left\" />}>\r\n                {t(\"Back\")}\r\n            </Button>\r\n            <h2 style={{ textAlign: \"center\" }}>{t(\"Korxona tanlang\")}</h2>\r\n            <div className=\"company-card-con\">\r\n                \r\n                    \r\n                <List\r\n                    grid={{\r\n                        gutter: 8,\r\n                        xs: 1,\r\n                        md: 2,\r\n                        lg: 3\r\n                    }}\r\n                    loading={loading}\r\n                    dataSource={companies}\r\n                    renderItem={comp => <div onClick={() => setChosen(comp.company_tin)} \r\n                    className=\"company-card\">\r\n                        <div className=\"company-name\">\r\n                            {comp.company_name}\r\n                        </div>\r\n\r\n                        <div className=\"company-text\">\r\n                            <span\r\n                                className=\"company-tin\"\r\n                                style={{ margin: 0, padding: 0 }}\r\n                            >{comp.company_tin}</span>\r\n                            <div>{t(\"STIR\")}</div>\r\n                        </div>\r\n\r\n                    </div>}\r\n                />\r\n                        \r\n                \r\n               \r\n                \r\n            </div>\r\n\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nconst mapDispatchToProps = dispatch=>({\r\n    setUserComps: data => dispatch(setUserCompanies(data)),\r\n    setCurrentUser: data => dispatch(setUser(data)),\r\n})\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    user: selectKeyUser,\r\n    companies: selectUserCompanies\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ChooseCompany));","C:\\HISOBXONA\\on_doc\\src\\cabinet\\bindrouming-popup\\bindrouming-popup.component.jsx",["309","310"],"import { Modal, Spin, Checkbox, message } from 'antd'\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useTranslation } from 'react-i18next';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { PROVIDER } from '../../env';\r\nimport { logOut } from '../../redux/user/user.action';\r\nimport { selectCurrentUser, selectLoadedKey } from '../../redux/user/user.selector';\r\nimport { EIMZOClient } from '../../utils/e-imzo';\r\n\r\nconst BindRoumingPopup = ({ user, signOut, loadedKey }) => {\r\n\r\n    const { t } = useTranslation()\r\n\r\n    const [isOpen, setIsOpen] = useState(!user?.is_online);\r\n    const [okDisable, setOkDisable] = useState(true)\r\n    const [afertaText, setAfertaText] = useState();\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            url: `info/get-bind-provider?tin=${user.tin ?? user.username}`,\r\n            method: \"get\"\r\n        }).then(res => {\r\n            \r\n            setAfertaText(JSON.stringify({\r\n                providers: [...res.data.providers, PROVIDER] \r\n            }))\r\n            \r\n        }).catch(ex => {\r\n            console.log(ex);\r\n        })\r\n    }, [])\r\n\r\n    const handleOk = () => {\r\n        setIsOpen(false)\r\n        EIMZOClient.createPkcs7(\r\n            loadedKey.id,\r\n            afertaText,\r\n            null,\r\n            pkcs7 => {\r\n\r\n                axios({\r\n                    url: 'user/bind-provider',\r\n                    method: \"post\",\r\n                    data: {\r\n                        tin: user.tin ?? user.username,\r\n                        sign: pkcs7\r\n                    }\r\n                }).then(res => {\r\n                    console.log(res)\r\n                }).catch(ex => {\r\n                    console.log(ex);\r\n                })\r\n            },\r\n            (e, r) => {\r\n                message(r);\r\n            },\r\n            (e, r) => {\r\n                message(r);\r\n            },\r\n        )\r\n    }\r\n    const handleCancel = () => {\r\n        setIsOpen(false);\r\n        //signOut()\r\n    }\r\n\r\n    const handleAgree = e => {\r\n        //console.log(data)\r\n        if (e.target.checked) {\r\n            setOkDisable(false)\r\n        } else {\r\n            setOkDisable(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                keyboard={false}\r\n                closable={false}\r\n                onCancel={handleCancel}\r\n                onOk={handleOk}\r\n                visible={isOpen}\r\n                okButtonProps={{ disabled: okDisable }}\r\n                zIndex={999}\r\n                title={t(\"Roumingga operatori sifatida qo'shing?\")}\r\n                maskClosable={false}\r\n            >\r\n                <div style={{ top: 0, width: '100%', bottom: 20, height: '40vh'}}>\r\n                    {t(\"Bini rouming operatoringiz sifatida ornating.\")}\r\n                </div>\r\n\r\n                <br />\r\n\r\n                <Checkbox onChange={handleAgree} /><span style={{ marginLeft: 20 }}>{t(\"Roziman.\")}</span>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    user: selectCurrentUser,\r\n    loadedKey: selectLoadedKey\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    signOut: () => dispatch(logOut())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BindRoumingPopup)\r\n","C:\\HISOBXONA\\on_doc\\src\\utils\\utils.js",[],"C:\\HISOBXONA\\on_doc\\src\\components\\dyna-grid\\dyna-grid.component.jsx",["311","312"],"import React, { useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Tooltip, Input, Button, Space, Popconfirm, message } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './dyna-grid.style.scss';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n//import { setItemToBeEdited, triggerFetchStart, triggerActionWithPayload } from '../../redux/admin/admin.actions';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n//import { selectCurrentUser } from '../../redux/user/user.selector';\r\nimport { \r\n  EditOutlined, \r\n  DeleteOutlined, \r\n  EyeOutlined, \r\n  SearchOutlined, \r\n  FullscreenOutlined, \r\n  FullscreenExitOutlined, \r\n  } from '@ant-design/icons';\r\n//import { RESOURCES_PATH } from '../../env';\r\nimport RichTextParser from '../rich-text-parser/rich-text-parser.component';\r\nimport { useEffect } from 'react';\r\n\r\nconst DynaGrid = ({\r\n  loading,                //loading state of table\r\n  currentUser,            //Provided by the comonent\r\n  match,                  //Provided by the comonent\r\n  setItemToBeEdited,      //Provided by the comonent\r\n  triggerAction,          //Provided by the comonent, redux action consumer\r\n  triggerActionWithPayload, //Provided by comonent, redux action and payload consumer\r\n  title,                  //title of DynaGrid\r\n  //dataSource,             //data source for the component\r\n  config:{                //Config object\r\n    dataSourcePath,       //data source path for the table should be pagination\r\n    addElementViewPath,     //add element to the core\r\n    deleteRequestPath,    //delete request path for API server \r\n    replaceInViewPath,\r\n    approveRequestPath,   //approve request path for API server \r\n    viewActionPath,       //UI route to view the element\r\n    editActionPath,\r\n    resultsViewPath,      //view path to see the results\r\n    triggerReload,        //action to triggere when delete, approve is done\r\n    triggerWithPayload,   //Trigger action with payload\r\n    payload,              //Payload to trigger action\r\n    deleteConfirmText,    //Delete confirm text\r\n    actions,              //Object of actions to allow\r\n                          //  {\r\n                          //    add: true,\r\n                          //    edit: true,\r\n                          //    delete: true,\r\n                          //    approve: true,\r\n                          //    view: true\r\n                          //  }\r\n    allColumns,           // array of columns to show\r\n                          //  [\r\n                          //    dataIndex: name of the data in the source object  \r\n                          //    dataType: \"image\" | to show image, \r\n                          //              \"array\" | to show array of strings\r\n                          //               \"rich-text\" | to show rich text format\r\n                          //              \"object\" | if dataIndex value is object,\r\n                          //                    then you have to provide \"items\" array to show certain properties of object\r\n                          //               \"rich-text\": if dataIndex value includes HTML tags \r\n                          //    isSearchable: true | false \r\n                          //    isFilterable: true | false\r\n                          //    filters: [\"item1\", \"item2\"]  filter options\r\n                          //  ]\r\n  }\r\n})=> {\r\n\r\n\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchedColumn, setSearchedColumn] = useState('');\r\n  const [filteredInfo, setFilteredInfo] = useState(null);\r\n  const [isFulliew, toggleFullView] = useState(false);\r\n  \r\n  const [pagination, setPagination] = useState({current: 1, pageSize: 10})\r\n  const [totalDataCount, setTotalDataCount] = useState(0);\r\n  const [ajaxDataSource, setAjaxDataSource] = useState([])\r\n  const [loadingSource, setLoadingResource] = useState(false);\r\n\r\n\r\n  let searchInput = null;\r\n\r\n  //#region PAGINATION PART\r\n  useEffect(()=>{\r\n\r\n    let url = `${dataSourcePath}&page=${pagination.current}&limit=${pagination.pageSize}${searchText ? `&search=${searchText}&searchFrom=${searchedColumn}` : ''}`\r\n\r\n    setLoadingResource(true)\r\n    axios({\r\n      url: url.replace(/[ ]+/g, \"\"),\r\n      method: \"GET\"\r\n    }).then(res=>{\r\n\r\n      if (Array.isArray(res.data.data)){\r\n        setAjaxDataSource(res.data.data);\r\n        setTotalDataCount(res.data.total)\r\n      }else{\r\n        console.log(res);\r\n      }\r\n      setLoadingResource(false)\r\n    }).catch(error=>{\r\n      console.log(error);\r\n      setLoadingResource(false)\r\n    })\r\n  }, [pagination, dataSourcePath, searchText, searchedColumn])\r\n  //#endregion PAGINATION PART\r\n\r\n  \r\n  //#region PopConfirm functions\r\n  const confirmDelete = (record) => {\r\n\r\n    //setVisible(false);\r\n    \r\n    axios({\r\n      url: `/${deleteRequestPath}/${record.id}`, \r\n      method: 'delete',\r\n      data: {creator: record.creator}\r\n      })\r\n      .then(res=>{\r\n        \r\n        if(triggerReload){\r\n          triggerAction(triggerReload)\r\n        }\r\n\r\n        if(triggerWithPayload){\r\n          triggerActionWithPayload(triggerActionWithPayload, payload)\r\n        }\r\n        //setAction(Math.random())\r\n        message.success(`${record.id} is deleted!`);\r\n      }).catch(error=>{\r\n        message.error('Failed to delete!');\r\n        console.error(error);\r\n        \r\n      })\r\n  };\r\n\r\n  const confirmApprove = (record) => {\r\n\r\n    //setVisible(false);\r\n    axios.patch(`/${approveRequestPath}/${record.id}`, \r\n      {userId: currentUser.id},)\r\n    .then(res=>{\r\n      if(triggerReload){\r\n        triggerAction(triggerReload)\r\n      }\r\n      \r\n      if(triggerWithPayload){\r\n        triggerActionWithPayload(triggerActionWithPayload, payload)\r\n      }\r\n      //setAction(Math.random())\r\n      message.success(`${record.id} is approved!`);\r\n    }).catch(error=>{\r\n      message.error('Failed to approve!');\r\n      console.error(error);\r\n      \r\n    })\r\n  };\r\n\r\n  const cancel = () => {\r\n    //setVisible(false);\r\n    message.error('Action cancelled!');\r\n  };\r\n\r\n  //#endregion\r\n\r\n  //#region getColumnSearchProps\r\n  const getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            searchInput = node;\r\n          }}\r\n          placeholder={`${dataIndex} qidirish`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Qidirish\r\n          </Button>\r\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Qaytarish\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n    record[dataIndex] \r\n      ? record[dataIndex].toString().toLowerCase().includes(value.toString().toLowerCase()) \r\n      : false,\r\n      onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => searchInput.select());\r\n      }\r\n    },\r\n    render: text =>\r\n      searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={ text ? text.toString() : null}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  //#endregion\r\n\r\n  //#region handleSearch\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n\r\n    setSearchText(selectedKeys[0]);\r\n    setSearchedColumn(dataIndex)\r\n\r\n  };\r\n\r\n  const handleReset = clearFilters => {\r\n    console.log(clearFilters)\r\n    \r\n    clearFilters();\r\n    setSearchText('')\r\n  \r\n  };\r\n\r\n  const handleChange = (pagination, filters, sorter) => {\r\n    console.log('Various parameters', pagination, filters, sorter);\r\n    setPagination(pagination)\r\n    setFilteredInfo(filters);\r\n    //setSortedInfo(sorter);\r\n\r\n  };\r\n  //#endregion\r\n\r\n  const columns =[]\r\n\r\n  //#region column config\r\n  allColumns.forEach((element, index)=> {\r\n    columns.push(\r\n      {\r\n        dataIndex: element.dataIndex,\r\n        title: element.title,\r\n        key: element.dataIndex,\r\n        width: element.width ? element.width : 90,\r\n        ellipsis: element.dataIndex==='detail' || element.dataIndex ==='description' ? true : false,     \r\n      });\r\n\r\n    if(element.isSearchable) \r\n    {\r\n        columns[index] = {...columns[index], ...getColumnSearchProps(element.dataIndex)}\r\n    }\r\n\r\n    if(element.isFilterable)\r\n    {\r\n      columns[index] = {...columns[index], \r\n        filters: element.filters.map(univer=>({text: univer.text ?? univer, value: univer.value ?? univer})), \r\n        onFilter: (value, record) => {\r\n          setSearchText(value.toString().toLowerCase())\r\n          setSearchedColumn(element.dataIndex)\r\n          return ajaxDataSource;\r\n        }}//record[element.dataIndex].toString().toLowerCase().includes(value.toString().toLowerCase()),}\r\n    }\r\n\r\n    if(element.isBoolean){\r\n      columns[index] = {...columns[index], \r\n      dataIndex: null,\r\n      render: (record)=><div>{record[element.dataIndex] ? 1 : 0}</div>}\r\n    }\r\n\r\n    if(element.isBoolean && element.isFilterable){\r\n      columns[index] = {...columns[index], \r\n      dataIndex: null,\r\n      filters: [{text: 1, value: true}, {text: 0, value: false}], \r\n      onFilter: (value, record) =>!!record[element.dataIndex] === !!value,\r\n      render: (record)=><div>{record[element.dataIndex] ? 1 : 0}</div>}\r\n    }\r\n    \r\n    // if(element.dataType === 'image'){\r\n    //   columns[index] = { \r\n    //     ...columns[index],\r\n    //     dataIndex: null,\r\n    //     width: 170,\r\n    //     render: (record)=><div style={{textAlign: \"center\"}}>\r\n    //       <img style={{width: 80, height: 80 }} src={`${RESOURCES_PATH}/${record[element.dataIndex]}`} alt={`${record[element.dataIndex]}`} />\r\n    //     </div>\r\n    //   }\r\n    // }\r\n\r\n    if(element.dataType === 'rich-text'){\r\n      columns[index] = { \r\n        ...columns[index],\r\n        dataIndex: null,\r\n        render: (record)=><RichTextParser text={record[element.dataIndex]} />\r\n      }\r\n    }\r\n\r\n    if(element.dataType === 'object'){\r\n      columns[index]={\r\n        ...columns[index],\r\n        dataIndex: null,\r\n        render: record=><div style={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap'}}>\r\n          {\r\n            record[element.dataIndex] \r\n          ? element.items.map((field, index)=><div key={`sub-dyna-field-${index}`}>{`${field}: `}{ record[element.dataIndex][field] }</div>)\r\n            : \"Nothing found!\"\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n\r\n    if(element.dataType === 'array'){\r\n      columns[index]={\r\n        ...columns[index],\r\n        dataIndex: null,\r\n        onFilter: (value, record) => record[element.dataIndex].includes(value),\r\n        render: record=><div>\r\n          {\r\n            record[element.dataIndex].map(item => <span style={{ backgroundColor: '#4870c7', color: 'white', padding: 3, marginRight: 5, marginBottom: 5, borderRadius: 3 }}>{item} </span>)\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n\r\n    if (element.dataType === \"date\") {\r\n      columns[index]={\r\n        ...columns[index],\r\n        width: 150,\r\n        dataIndex: null,\r\n        render: record=><span>{ moment(record[element.dataIndex]).format('MMMM Do YYYY, H:mm:ss') }</span>\r\n      }\r\n    }\r\n\r\n    if(element.dataType === 'array-count'){\r\n      columns[index]={\r\n        ...columns[index],\r\n        dataIndex: null,\r\n        onFilter: (value, record) => record[element.dataIndex].includes(value),\r\n        render: record=><div>\r\n          {\r\n            record[element.dataIndex].length\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n\r\n  });\r\n    //#endregion\r\n    \r\n    //Actions\r\n    columns.push({\r\n      title: \" \",\r\n      key: 'actions',\r\n      width: 90,\r\n      fixed: 'right',\r\n      render: (record) => \r\n        <div className=\"dyna-grid-actions\">\r\n          {actions.edit \r\n          ? <Tooltip placement=\"left\" title=\"O'zgartirish\">\r\n              <Link \r\n                to={`${editActionPath}/${record.id}`}>\r\n                  <EditOutlined style={{color: 'blue'}}/>\r\n              </Link>\r\n            </Tooltip>\r\n          : null\r\n          }\r\n\r\n          {actions.delete \r\n          ? <Tooltip placement=\"bottom\" title=\"O'chirish\">\r\n              <Popconfirm\r\n                title={ deleteConfirmText ? deleteConfirmText : \"O'chirilsin?\" }\r\n                onConfirm={()=>{confirmDelete(record)}}\r\n                onCancel={cancel}\r\n                okText=\"Ha\"\r\n                cancelText=\"Yo'q\"\r\n              >\r\n              <DeleteOutlined style={{color: 'red'}} />\r\n            </Popconfirm>\r\n          </Tooltip>\r\n          : null\r\n          }\r\n          \r\n          {actions.approve \r\n            ? <Tooltip placement=\"bottom\" title=\"Tasdiqlash\">\r\n                <Popconfirm\r\n                  title=\"Approve this news?\"\r\n                  onConfirm={()=>{confirmApprove(record)}}\r\n                  onCancel={cancel}\r\n                  okText=\"Yes\"\r\n                  cancelText=\"No\"\r\n                >\r\n                  <FontAwesomeIcon style={{color: 'green'}} icon=\"check-circle\" />\r\n                </Popconfirm>\r\n              </Tooltip>\r\n          : null\r\n          }\r\n\r\n          {actions.view \r\n          ? <Tooltip placement=\"bottom\" title=\"Ko'rish\" >\r\n                <Link to={`${ replaceInViewPath \r\n                  ? viewActionPath.replace(`{${replaceInViewPath}}`, record[replaceInViewPath]) \r\n                  : viewActionPath}/${record.id}`}><EyeOutlined /></Link>\r\n              </Tooltip>\r\n          : null  \r\n          }\r\n\r\n          {actions.chart\r\n          ?\r\n            <Tooltip placement=\"bottomLeft\" title=\"Natijalar\">\r\n              <Link to={`${resultsViewPath}/${record.id}`}>\r\n                <FontAwesomeIcon icon=\"chart-line\" style={{color: '#fb8c00'}} />\r\n              </Link>\r\n            </Tooltip>\r\n          : null\r\n          }\r\n\r\n          {\r\n            actions.addElement\r\n            ?\r\n              <Tooltip placement=\"bottomLeft\" title=\"Qoshimcha  qoshish\">\r\n                <Link to={`${match.path}/${addElementViewPath}/${record.id}`}>\r\n                  <FontAwesomeIcon style={{color: \"#e91e63\"}} icon=\"plus-circle\" />\r\n                </Link>\r\n              </Tooltip>\r\n            :null\r\n          }\r\n        </div>,\r\n    })\r\n\r\n    return (\r\n    <div className={`dyna-grid-main-container ${isFulliew ? 'akhadjon-dyna-grid-full-view' : null}`} >\r\n      <div onDoubleClick={()=>toggleFullView(!isFulliew)} \r\n        \r\n        style={{marginTop: 40, marginBottom: 10, display: \"flex\", justifyContent: \"space-between\"}}>\r\n        <Button \r\n          \r\n          onClick={()=>{toggleFullView(!isFulliew)}} \r\n          type=\"primary\" \r\n          icon={isFulliew ? <FullscreenExitOutlined /> : <FullscreenOutlined />}>\r\n            { isFulliew ? \"Kichraytirish\" : \"Kengaytirish\" }\r\n          </Button>\r\n        <div>\r\n          <h3>{title}</h3>\r\n        </div>\r\n      </div>\r\n      <Table\r\n        \r\n        loading={loadingSource}\r\n        rowKey=\"id\"\r\n        onChange={handleChange} \r\n        bordered \r\n        pagination={pagination}\r\n        columns={columns} \r\n          dataSource={ajaxDataSource} \r\n        scroll={{ x: allColumns.length * 120, }}//y: window.innerHeight - window.innerHeight / 13 }} \r\n        pagination={{position: ['bottomCenter'], total: totalDataCount}}\r\n      />\r\n    </div>);\r\n  }\r\n\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  //currentUser: selectCurrentUser,\r\n})\r\n\r\nconst dispatchMapStateToPros = (dispatch)=>({\r\n  //setItemToBeEdited: (item)=>dispatch(setItemToBeEdited(item)),\r\n  //triggerAction: (action)=>dispatch(triggerFetchStart(action)),\r\n  //triggerActionWithPayload: (action, payload)=>dispatch(triggerActionWithPayload(action, payload))\r\n})\r\n\r\nexport default connect(mapStateToProps, dispatchMapStateToPros)(withRouter(DynaGrid));","C:\\HISOBXONA\\on_doc\\src\\cabinet\\tty\\view\\view.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\view\\view.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\reportWebVitals.js",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\tty\\index.router.jsx",[],{"ruleId":"313","severity":1,"message":"314","line":18,"column":19,"nodeType":"315","messageId":"316","endLine":18,"endColumn":24},{"ruleId":"313","severity":1,"message":"317","line":19,"column":21,"nodeType":"315","messageId":"316","endLine":19,"endColumn":29},{"ruleId":"318","severity":1,"message":"319","line":40,"column":8,"nodeType":"320","endLine":40,"endColumn":10,"suggestions":"321"},{"ruleId":"313","severity":1,"message":"322","line":42,"column":11,"nodeType":"315","messageId":"316","endLine":42,"endColumn":22},{"ruleId":"323","severity":2,"message":"324","line":43,"column":9,"nodeType":"315","messageId":"325","endLine":43,"endColumn":18},{"ruleId":"326","replacedBy":"327"},{"ruleId":"328","replacedBy":"329"},{"ruleId":"326","replacedBy":"330"},{"ruleId":"328","replacedBy":"331"},{"ruleId":"313","severity":1,"message":"332","line":3,"column":10,"nodeType":"315","messageId":"316","endLine":3,"endColumn":18},{"ruleId":"326","replacedBy":"333"},{"ruleId":"328","replacedBy":"334"},{"ruleId":"326","replacedBy":"335"},{"ruleId":"328","replacedBy":"336"},{"ruleId":"313","severity":1,"message":"337","line":10,"column":8,"nodeType":"315","messageId":"316","endLine":10,"endColumn":17},{"ruleId":"313","severity":1,"message":"338","line":11,"column":10,"nodeType":"315","messageId":"316","endLine":11,"endColumn":23},{"ruleId":"313","severity":1,"message":"317","line":1,"column":17,"nodeType":"315","messageId":"316","endLine":1,"endColumn":25},{"ruleId":"313","severity":1,"message":"339","line":2,"column":8,"nodeType":"315","messageId":"316","endLine":2,"endColumn":14},{"ruleId":"340","severity":1,"message":"341","line":4,"column":15,"nodeType":"342","messageId":"343","endLine":4,"endColumn":17},{"ruleId":"326","replacedBy":"344"},{"ruleId":"328","replacedBy":"345"},{"ruleId":"326","replacedBy":"346"},{"ruleId":"328","replacedBy":"347"},{"ruleId":"313","severity":1,"message":"348","line":28,"column":15,"nodeType":"315","messageId":"316","endLine":28,"endColumn":19},{"ruleId":"318","severity":1,"message":"349","line":61,"column":6,"nodeType":"320","endLine":61,"endColumn":8,"suggestions":"350"},{"ruleId":"351","severity":1,"message":"352","line":67,"column":14,"nodeType":"353","messageId":"354","endLine":67,"endColumn":46},{"ruleId":"351","severity":1,"message":"352","line":68,"column":15,"nodeType":"353","messageId":"354","endLine":68,"endColumn":48},{"ruleId":"351","severity":1,"message":"352","line":71,"column":14,"nodeType":"353","messageId":"354","endLine":71,"endColumn":58},{"ruleId":"355","severity":1,"message":"356","line":272,"column":25,"nodeType":"357","messageId":"343","endLine":272,"endColumn":27},{"ruleId":"355","severity":1,"message":"356","line":166,"column":22,"nodeType":"357","messageId":"343","endLine":166,"endColumn":24},{"ruleId":"313","severity":1,"message":"358","line":2,"column":40,"nodeType":"315","messageId":"316","endLine":2,"endColumn":44},{"ruleId":"313","severity":1,"message":"359","line":2,"column":46,"nodeType":"315","messageId":"316","endLine":2,"endColumn":54},{"ruleId":"318","severity":1,"message":"360","line":69,"column":8,"nodeType":"320","endLine":69,"endColumn":10,"suggestions":"361"},{"ruleId":"318","severity":1,"message":"362","line":17,"column":8,"nodeType":"320","endLine":17,"endColumn":26,"suggestions":"363"},{"ruleId":"355","severity":1,"message":"356","line":99,"column":25,"nodeType":"357","messageId":"343","endLine":99,"endColumn":27},{"ruleId":"318","severity":1,"message":"364","line":193,"column":6,"nodeType":"320","endLine":193,"endColumn":8,"suggestions":"365"},{"ruleId":"351","severity":1,"message":"352","line":199,"column":14,"nodeType":"353","messageId":"354","endLine":199,"endColumn":46},{"ruleId":"351","severity":1,"message":"352","line":200,"column":15,"nodeType":"353","messageId":"354","endLine":200,"endColumn":48},{"ruleId":"351","severity":1,"message":"352","line":203,"column":14,"nodeType":"353","messageId":"354","endLine":203,"endColumn":58},{"ruleId":"355","severity":1,"message":"356","line":21,"column":16,"nodeType":"357","messageId":"343","endLine":21,"endColumn":18},{"ruleId":"313","severity":1,"message":"366","line":15,"column":9,"nodeType":"315","messageId":"316","endLine":15,"endColumn":15},{"ruleId":"318","severity":1,"message":"367","line":41,"column":8,"nodeType":"320","endLine":41,"endColumn":10,"suggestions":"368"},{"ruleId":"313","severity":1,"message":"369","line":45,"column":26,"nodeType":"315","messageId":"316","endLine":45,"endColumn":41},{"ruleId":"370","severity":1,"message":"371","line":1,"column":1,"nodeType":"372","messageId":"343","endLine":40,"endColumn":2},{"ruleId":"355","severity":1,"message":"373","line":4,"column":18,"nodeType":"357","messageId":"343","endLine":4,"endColumn":20},{"ruleId":"355","severity":1,"message":"356","line":7,"column":38,"nodeType":"357","messageId":"343","endLine":7,"endColumn":40},{"ruleId":"313","severity":1,"message":"374","line":17,"column":13,"nodeType":"315","messageId":"316","endLine":17,"endColumn":14},{"ruleId":"355","severity":1,"message":"356","line":25,"column":35,"nodeType":"357","messageId":"343","endLine":25,"endColumn":37},{"ruleId":"355","severity":1,"message":"373","line":26,"column":27,"nodeType":"357","messageId":"343","endLine":26,"endColumn":29},{"ruleId":"375","severity":1,"message":"376","line":33,"column":17,"nodeType":"315","messageId":"377","endLine":33,"endColumn":21},{"ruleId":"313","severity":1,"message":"378","line":1,"column":27,"nodeType":"315","messageId":"316","endLine":1,"endColumn":36},{"ruleId":"313","severity":1,"message":"379","line":5,"column":8,"nodeType":"315","messageId":"316","endLine":5,"endColumn":13},{"ruleId":"313","severity":1,"message":"380","line":11,"column":9,"nodeType":"315","messageId":"316","endLine":11,"endColumn":16},{"ruleId":"313","severity":1,"message":"381","line":27,"column":12,"nodeType":"315","messageId":"316","endLine":27,"endColumn":19},{"ruleId":"313","severity":1,"message":"382","line":27,"column":21,"nodeType":"315","messageId":"316","endLine":27,"endColumn":31},{"ruleId":"313","severity":1,"message":"383","line":3,"column":10,"nodeType":"315","messageId":"316","endLine":3,"endColumn":15},{"ruleId":"313","severity":1,"message":"384","line":4,"column":9,"nodeType":"315","messageId":"316","endLine":4,"endColumn":26},{"ruleId":"313","severity":1,"message":"385","line":6,"column":10,"nodeType":"315","messageId":"316","endLine":6,"endColumn":14},{"ruleId":"318","severity":1,"message":"386","line":27,"column":7,"nodeType":"320","endLine":27,"endColumn":9,"suggestions":"387"},{"ruleId":"313","severity":1,"message":"388","line":1,"column":8,"nodeType":"315","messageId":"316","endLine":1,"endColumn":13},{"ruleId":"313","severity":1,"message":"379","line":2,"column":8,"nodeType":"315","messageId":"316","endLine":2,"endColumn":13},{"ruleId":"313","severity":1,"message":"378","line":4,"column":10,"nodeType":"315","messageId":"316","endLine":4,"endColumn":19},{"ruleId":"313","severity":1,"message":"385","line":7,"column":10,"nodeType":"315","messageId":"316","endLine":7,"endColumn":14},{"ruleId":"313","severity":1,"message":"389","line":6,"column":53,"nodeType":"315","messageId":"316","endLine":6,"endColumn":59},{"ruleId":"318","severity":1,"message":"390","line":60,"column":6,"nodeType":"320","endLine":60,"endColumn":8,"suggestions":"391"},{"ruleId":"351","severity":1,"message":"352","line":66,"column":14,"nodeType":"353","messageId":"354","endLine":66,"endColumn":46},{"ruleId":"351","severity":1,"message":"352","line":67,"column":15,"nodeType":"353","messageId":"354","endLine":67,"endColumn":48},{"ruleId":"351","severity":1,"message":"352","line":70,"column":14,"nodeType":"353","messageId":"354","endLine":70,"endColumn":58},{"ruleId":"355","severity":1,"message":"356","line":210,"column":25,"nodeType":"357","messageId":"343","endLine":210,"endColumn":27},{"ruleId":"313","severity":1,"message":"392","line":2,"column":9,"nodeType":"315","messageId":"316","endLine":2,"endColumn":18},{"ruleId":"313","severity":1,"message":"393","line":2,"column":20,"nodeType":"315","messageId":"316","endLine":2,"endColumn":27},{"ruleId":"313","severity":1,"message":"389","line":3,"column":8,"nodeType":"315","messageId":"316","endLine":3,"endColumn":14},{"ruleId":"313","severity":1,"message":"394","line":14,"column":25,"nodeType":"315","messageId":"316","endLine":14,"endColumn":33},{"ruleId":"395","severity":1,"message":"396","line":24,"column":1,"nodeType":"397","endLine":24,"endColumn":37},{"ruleId":"313","severity":1,"message":"389","line":5,"column":53,"nodeType":"315","messageId":"316","endLine":5,"endColumn":59},{"ruleId":"318","severity":1,"message":"398","line":53,"column":6,"nodeType":"320","endLine":53,"endColumn":8,"suggestions":"399"},{"ruleId":"351","severity":1,"message":"352","line":59,"column":14,"nodeType":"353","messageId":"354","endLine":59,"endColumn":46},{"ruleId":"351","severity":1,"message":"352","line":60,"column":15,"nodeType":"353","messageId":"354","endLine":60,"endColumn":48},{"ruleId":"351","severity":1,"message":"352","line":63,"column":14,"nodeType":"353","messageId":"354","endLine":63,"endColumn":58},{"ruleId":"355","severity":1,"message":"356","line":222,"column":25,"nodeType":"357","messageId":"343","endLine":222,"endColumn":27},{"ruleId":"318","severity":1,"message":"400","line":45,"column":8,"nodeType":"320","endLine":45,"endColumn":16,"suggestions":"401"},{"ruleId":"355","severity":1,"message":"356","line":57,"column":42,"nodeType":"357","messageId":"343","endLine":57,"endColumn":44},{"ruleId":"318","severity":1,"message":"402","line":70,"column":8,"nodeType":"320","endLine":70,"endColumn":10,"suggestions":"403"},{"ruleId":"313","severity":1,"message":"358","line":1,"column":17,"nodeType":"315","messageId":"316","endLine":1,"endColumn":21},{"ruleId":"318","severity":1,"message":"404","line":33,"column":8,"nodeType":"320","endLine":33,"endColumn":10,"suggestions":"405"},{"ruleId":"313","severity":1,"message":"406","line":75,"column":10,"nodeType":"315","messageId":"316","endLine":75,"endColumn":22},{"ruleId":"407","severity":1,"message":"408","line":470,"column":9,"nodeType":"409","endLine":470,"endColumn":73},"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadedKey?.time', 'signOut', and 't'. Either include them or remove the dependency array. If 'signOut' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["410"],"'handleClose' is assigned a value but never used.","no-undef","'setIsOpen' is not defined.","undef","no-native-reassign",["411"],"no-negated-in-lhs",["412"],["411"],["412"],"'Redirect' is defined but never used.",["411"],["412"],["411"],["412"],"'PaymeForm' is defined but never used.","'TextInBracket' is defined but never used.","'Header' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["411"],["412"],["411"],["412"],"'i18n' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'facturaId' and 'form'. Either include them or remove the dependency array.",["413"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'Spin' is defined but never used.","'Checkbox' is defined but never used.","React Hook useEffect has a missing dependency: 'setData'. Either include it or remove the dependency array. If 'setData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["414"],"React Hook useEffect has an unnecessary dependency: 'i18next.language'. Either exclude it or remove the dependency array. Outer scope values like 'i18next.language' aren't valid dependencies because mutating them doesn't re-render the component.",["415"],"React Hook useEffect has missing dependencies: 'form' and 'ttyId'. Either include them or remove the dependency array.",["416"],"'Option' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'eKeys' and 't'. Either include them or remove the dependency array. You can also do a functional update 'setEKeys(e => ...)' if you only need 'eKeys' in the 'setEKeys' call.",["417"],"'setKeyIsLoading' is assigned a value but never used.","no-extend-native","String prototype is read only, properties should not be added.","AssignmentExpression","Expected '!==' and instead saw '!='.","'r' is assigned a value but never used.","no-redeclare","'part' is already defined.","redeclared","'useEffect' is defined but never used.","'axios' is defined but never used.","'TabPane' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'Badge' is defined but never used.","'PlusCircleTwoTone' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'form' and 'notificationId'. Either include them or remove the dependency array.",["418"],"'React' is defined but never used.","'Select' is defined but never used.","React Hook useEffect has missing dependencies: 'actId' and 'form'. Either include them or remove the dependency array.",["419"],"'ENTER_KEY' is defined but never used.","'TAB_KEY' is defined but never used.","'onRevert' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'empowermentId' and 'form'. Either include them or remove the dependency array.",["420"],"React Hook useEffect has a missing dependency: 'setChoosenCompany'. Either include it or remove the dependency array.",["421"],"React Hook useEffect has missing dependencies: 'setChoosenCompany', 'setUserComps', and 'user.username'. Either include them or remove the dependency array. If 'setUserComps' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["422"],"React Hook useEffect has missing dependencies: 'user.tin' and 'user.username'. Either include them or remove the dependency array.",["423"],"'filteredInfo' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",{"desc":"424","fix":"425"},"no-global-assign","no-unsafe-negation",{"desc":"426","fix":"427"},{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},{"desc":"438","fix":"439"},{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},{"desc":"446","fix":"447"},"Update the dependencies array to be: [loadedKey?.time, signOut, t]",{"range":"448","text":"449"},"Update the dependencies array to be: [facturaId, form]",{"range":"450","text":"451"},"Update the dependencies array to be: [setData]",{"range":"452","text":"453"},"Update the dependencies array to be: []",{"range":"454","text":"455"},"Update the dependencies array to be: [form, ttyId]",{"range":"456","text":"457"},"Update the dependencies array to be: [eKeys, t]",{"range":"458","text":"459"},"Update the dependencies array to be: [form, notificationId]",{"range":"460","text":"461"},"Update the dependencies array to be: [actId, form]",{"range":"462","text":"463"},"Update the dependencies array to be: [empowermentId, form]",{"range":"464","text":"465"},"Update the dependencies array to be: [chosen, setChoosenCompany]",{"range":"466","text":"467"},"Update the dependencies array to be: [setChoosenCompany, setUserComps, user.username]",{"range":"468","text":"469"},"Update the dependencies array to be: [user.tin, user.username]",{"range":"470","text":"471"},[1355,1357],"[loadedKey?.time, signOut, t]",[2369,2371],"[facturaId, form]",[2467,2469],"[setData]",[651,669],"[]",[6296,6298],"[form, ttyId]",[1574,1576],"[eKeys, t]",[787,789],"[form, notificationId]",[2411,2413],"[actId, form]",[2062,2064],"[empowermentId, form]",[1376,1384],"[chosen, setChoosenCompany]",[2145,2147],"[setChoosenCompany, setUserComps, user.username]",[1181,1183],"[user.tin, user.username]"]