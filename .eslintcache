[{"C:\\HISOBXONA\\on_doc\\src\\App.jsx":"1","C:\\HISOBXONA\\on_doc\\src\\index.js":"2","C:\\HISOBXONA\\on_doc\\src\\env.js":"3","C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.action.js":"4","C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.selector.js":"5","C:\\HISOBXONA\\on_doc\\src\\components\\font-awesome-icons\\font-awesome-icons.js":"6","C:\\HISOBXONA\\on_doc\\src\\admin\\admin.router.jsx":"7","C:\\HISOBXONA\\on_doc\\src\\frontend\\index.router.jsx":"8","C:\\HISOBXONA\\on_doc\\src\\cabinet\\index.component.jsx":"9","C:\\HISOBXONA\\on_doc\\src\\components\\header\\header.component.jsx":"10","C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.reducer.js":"11","C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.action-types.js":"12","C:\\HISOBXONA\\on_doc\\src\\cabinet\\profile\\profile.component.jsx":"13","C:\\HISOBXONA\\on_doc\\src\\cabinet\\user-products\\user-products.component.jsx":"14","C:\\HISOBXONA\\on_doc\\src\\cabinet\\password-change\\password-change.component.jsx":"15","C:\\HISOBXONA\\on_doc\\src\\cabinet\\account-form\\account-form.component.jsx":"16","C:\\HISOBXONA\\on_doc\\src\\cabinet\\contract\\index.router.jsx":"17","C:\\HISOBXONA\\on_doc\\src\\frontend\\home\\home.component.jsx":"18","C:\\HISOBXONA\\on_doc\\src\\cabinet\\contract\\view\\view.component.jsx":"19","C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\create\\create.component.jsx":"20","C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\buyer-form.component.jsx":"21","C:\\HISOBXONA\\on_doc\\src\\cabinet\\right-sidebar\\right-sidebar.component.jsx":"22","C:\\HISOBXONA\\on_doc\\src\\components\\language-dropdown\\locale-dropdown.jsx":"23","C:\\HISOBXONA\\on_doc\\src\\cabinet\\tty\\create\\create.component.jsx":"24","C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\seller-form.component.jsx":"25","C:\\HISOBXONA\\on_doc\\src\\cabinet\\empowerment\\index.component.jsx":"26","C:\\HISOBXONA\\on_doc\\src\\frontend\\login\\login.component.jsx":"27","C:\\HISOBXONA\\on_doc\\src\\utils\\e-imzo.js":"28","C:\\HISOBXONA\\on_doc\\src\\cabinet\\aferta-popup\\aferta-popup.component.jsx":"29","C:\\HISOBXONA\\on_doc\\src\\cabinet\\payme-form\\payme-form.component.jsx":"30","C:\\HISOBXONA\\on_doc\\src\\translate.js":"31","C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\home\\home.component.jsx":"32","C:\\HISOBXONA\\on_doc\\src\\cabinet\\act\\index.router.jsx":"33","C:\\HISOBXONA\\on_doc\\src\\components\\admin-card\\admin-card.component.jsx":"34","C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\person-fetch\\person-fetch.component.jsx":"35","C:\\HISOBXONA\\on_doc\\src\\admin\\notification\\form.component.jsx":"36","C:\\HISOBXONA\\on_doc\\src\\utils\\home.config.provider.js":"37","C:\\HISOBXONA\\on_doc\\src\\cabinet\\notifications\\notifications.component.jsx":"38","C:\\HISOBXONA\\on_doc\\src\\cabinet\\home\\home.component.jsx":"39","C:\\HISOBXONA\\on_doc\\src\\cabinet\\act\\create\\create.component.jsx":"40","C:\\HISOBXONA\\on_doc\\src\\components\\data-sheet-custom-measure-selector\\custom-selector.component.jsx":"41","C:\\HISOBXONA\\on_doc\\src\\redux\\store.js":"42","C:\\HISOBXONA\\on_doc\\src\\cabinet\\empowerment\\create\\create.component.jsx":"43","C:\\HISOBXONA\\on_doc\\src\\frontend\\choose_company\\choose-company.component.jsx":"44","C:\\HISOBXONA\\on_doc\\src\\cabinet\\bindrouming-popup\\bindrouming-popup.component.jsx":"45","C:\\HISOBXONA\\on_doc\\src\\utils\\utils.js":"46","C:\\HISOBXONA\\on_doc\\src\\components\\dyna-grid\\dyna-grid.component.jsx":"47","C:\\HISOBXONA\\on_doc\\src\\cabinet\\tty\\view\\view.component.jsx":"48","C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\view\\view.component.jsx":"49","C:\\HISOBXONA\\on_doc\\src\\reportWebVitals.js":"50","C:\\HISOBXONA\\on_doc\\src\\cabinet\\tty\\index.router.jsx":"51","C:\\HISOBXONA\\on_doc\\src\\cabinet\\models\\Factura.js":"52","C:\\HISOBXONA\\on_doc\\src\\cabinet\\models\\FacturaProduct.js":"53","C:\\HISOBXONA\\on_doc\\src\\components\\data-sheet-custom-selector\\custom-selector.component.jsx":"54","C:\\HISOBXONA\\on_doc\\src\\redux\\root-reducer.js":"55","C:\\HISOBXONA\\on_doc\\src\\components\\rich-text-parser\\rich-text-parser.component.jsx":"56","C:\\HISOBXONA\\on_doc\\src\\utils\\main.js":"57","C:\\HISOBXONA\\on_doc\\src\\cabinet\\contract\\create\\create.component.jsx":"58","C:\\HISOBXONA\\on_doc\\src\\components\\classcodes-ajax-search\\classcodes-ajax-search.component.jsx":"59","C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\create\\product-grid.component.jsx":"60","C:\\HISOBXONA\\on_doc\\src\\redux\\root-saga.js":"61","C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\index.component.jsx":"62","C:\\HISOBXONA\\on_doc\\src\\components\\left-sidebar\\left-sidebar.component.jsx":"63"},{"size":2330,"mtime":1616560165967,"results":"64","hashOfConfig":"65"},{"size":996,"mtime":1615900532271,"results":"66","hashOfConfig":"65"},{"size":761,"mtime":1616659655586,"results":"67","hashOfConfig":"65"},{"size":1056,"mtime":1617000947930,"results":"68","hashOfConfig":"65"},{"size":990,"mtime":1617001154878,"results":"69","hashOfConfig":"65"},{"size":1404,"mtime":1616845768004,"results":"70","hashOfConfig":"65"},{"size":1184,"mtime":1613366375823,"results":"71","hashOfConfig":"65"},{"size":1151,"mtime":1616234567296,"results":"72","hashOfConfig":"65"},{"size":1777,"mtime":1615463207501,"results":"73","hashOfConfig":"65"},{"size":3821,"mtime":1616481216769,"results":"74","hashOfConfig":"65"},{"size":1875,"mtime":1617001703137,"results":"75","hashOfConfig":"65"},{"size":486,"mtime":1617000896688,"results":"76","hashOfConfig":"65"},{"size":1047,"mtime":1616238063076,"results":"77","hashOfConfig":"65"},{"size":1874,"mtime":1616997916480,"results":"78","hashOfConfig":"65"},{"size":5151,"mtime":1616735584676,"results":"79","hashOfConfig":"65"},{"size":5588,"mtime":1616687560712,"results":"80","hashOfConfig":"65"},{"size":773,"mtime":1613135956409,"results":"81","hashOfConfig":"65"},{"size":257,"mtime":1611228286162,"results":"82","hashOfConfig":"65"},{"size":794,"mtime":1613136178081,"results":"83","hashOfConfig":"65"},{"size":15181,"mtime":1617100674332,"results":"84","hashOfConfig":"65"},{"size":13334,"mtime":1617088236957,"results":"85","hashOfConfig":"65"},{"size":7397,"mtime":1616658802815,"results":"86","hashOfConfig":"65"},{"size":2499,"mtime":1615957280514,"results":"87","hashOfConfig":"65"},{"size":23703,"mtime":1612874366487,"results":"88","hashOfConfig":"65"},{"size":6687,"mtime":1616236147364,"results":"89","hashOfConfig":"65"},{"size":692,"mtime":1613135948606,"results":"90","hashOfConfig":"65"},{"size":11053,"mtime":1616234442485,"results":"91","hashOfConfig":"65"},{"size":28500,"mtime":1616565728906,"results":"92","hashOfConfig":"65"},{"size":3339,"mtime":1616655202120,"results":"93","hashOfConfig":"65"},{"size":284,"mtime":1616589059995,"results":"94","hashOfConfig":"65"},{"size":1131,"mtime":1615974553232,"results":"95","hashOfConfig":"65"},{"size":2749,"mtime":1616849975462,"results":"96","hashOfConfig":"65"},{"size":704,"mtime":1613135776022,"results":"97","hashOfConfig":"65"},{"size":708,"mtime":1611212188734,"results":"98","hashOfConfig":"65"},{"size":2542,"mtime":1616235861000,"results":"99","hashOfConfig":"65"},{"size":7325,"mtime":1613367087580,"results":"100","hashOfConfig":"65"},{"size":19053,"mtime":1616848489461,"results":"101","hashOfConfig":"65"},{"size":1765,"mtime":1613469507764,"results":"102","hashOfConfig":"65"},{"size":5237,"mtime":1615958648169,"results":"103","hashOfConfig":"65"},{"size":15030,"mtime":1613196626550,"results":"104","hashOfConfig":"65"},{"size":3276,"mtime":1616824639227,"results":"105","hashOfConfig":"65"},{"size":675,"mtime":1610456259499,"results":"106","hashOfConfig":"65"},{"size":17314,"mtime":1616237265824,"results":"107","hashOfConfig":"65"},{"size":4214,"mtime":1616657209985,"results":"108","hashOfConfig":"65"},{"size":3344,"mtime":1616734599990,"results":"109","hashOfConfig":"65"},{"size":454,"mtime":1616735277264,"results":"110","hashOfConfig":"65"},{"size":16901,"mtime":1616849618997,"results":"111","hashOfConfig":"65"},{"size":769,"mtime":1613136250855,"results":"112","hashOfConfig":"65"},{"size":789,"mtime":1613135597311,"results":"113","hashOfConfig":"65"},{"size":362,"mtime":1606761669970,"results":"114","hashOfConfig":"65"},{"size":701,"mtime":1613136021785,"results":"115","hashOfConfig":"65"},{"size":4986,"mtime":1617099583315,"results":"116","hashOfConfig":"65"},{"size":2134,"mtime":1617092049331,"results":"117","hashOfConfig":"65"},{"size":1907,"mtime":1617087000903,"results":"118","hashOfConfig":"65"},{"size":406,"mtime":1610456428391,"results":"119","hashOfConfig":"65"},{"size":360,"mtime":1594933859435,"results":"120","hashOfConfig":"65"},{"size":11919,"mtime":1615964032572,"results":"121","hashOfConfig":"65"},{"size":18597,"mtime":1613049829368,"results":"122","hashOfConfig":"65"},{"size":2607,"mtime":1616998083442,"results":"123","hashOfConfig":"65"},{"size":9534,"mtime":1617109039024,"results":"124","hashOfConfig":"65"},{"size":118,"mtime":1610456948140,"results":"125","hashOfConfig":"65"},{"size":714,"mtime":1611818145343,"results":"126","hashOfConfig":"65"},{"size":1580,"mtime":1615441013822,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"gy4thq",{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"132"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"156"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"132"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"132"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"132"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"156"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"172"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"132"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"190"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"132"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"156"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"231"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"227"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"132"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"227"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"156"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"132"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\HISOBXONA\\on_doc\\src\\App.jsx",["289","290","291"],"C:\\HISOBXONA\\on_doc\\src\\index.js",[],["292","293"],"C:\\HISOBXONA\\on_doc\\src\\env.js",[],"C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.action.js",[],"C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.selector.js",[],"C:\\HISOBXONA\\on_doc\\src\\components\\font-awesome-icons\\font-awesome-icons.js",[],"C:\\HISOBXONA\\on_doc\\src\\admin\\admin.router.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\frontend\\index.router.jsx",["294"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport Home from './home/home.component'\r\nimport Login from './login/login.component'\r\nimport { selectCurrentUser } from '../redux/user/user.selector'\r\nimport ChooseCompany from './choose_company/choose-company.component'\r\n\r\nconst FrontIndexRouter = ({ match, user }) => {\r\n    console.log(user)\r\n    return (\r\n        <div>\r\n            <Route exact path={`${match.path}`} component={ Home } />\r\n            {/* <Route exact path={`${match.path}/login`} component={ Login } /> */}\r\n            <Route\r\n                exact=\"choosecompany\"\r\n                path={`${match.path}/choosecompany`}\r\n                component={ChooseCompany}\r\n            />\r\n            <Route \r\n                exact \r\n                path={`${match.path}/login`} \r\n                component={ Login } \r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    user: selectCurrentUser,\r\n})\r\n\r\nexport default connect(mapStateToProps)(FrontIndexRouter)\r\n","C:\\HISOBXONA\\on_doc\\src\\cabinet\\index.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\components\\header\\header.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.reducer.js",[],"C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.action-types.js",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\profile\\profile.component.jsx",[],["295","296"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\user-products\\user-products.component.jsx",["297"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Select, Spin } from 'antd'\r\nimport axios from 'axios'\r\nimport React, { useState } from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { connect } from 'react-redux'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport ClasscodeAjaxSearch from '../../components/classcodes-ajax-search/classcodes-ajax-search.component'\r\nimport { selectCurrentUser } from '../../redux/user/user.selector'\r\nimport HomePage from '../common/home/home.component'\r\n\r\nconst { Option } = Select;\r\n\r\nconst UserProducts = ({ user }) => {\r\n\r\n    const { t } = useTranslation();\r\n    const [spinning, setSpinning] = useState(false);    \r\n    \r\n    const handleFetchTasnifSoliq = ()=>{\r\n        setSpinning(true)\r\n        axios({\r\n            url: `classifications/reload?tin=${user.tin??user.username}`,\r\n            method: \"GET\"\r\n        }).then(res=>{\r\n            setSpinning(false)\r\n            //window.location.reload()\r\n        }).catch(ex=>{\r\n            setSpinning(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Spin spinning={spinning}>\r\n                <ClasscodeAjaxSearch />\r\n            <HomePage \r\n            \r\n            hideTabs\r\n                customButton={<div \r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={handleFetchTasnifSoliq}><span><FontAwesomeIcon icon=\"sync-alt\" /> {t(\"Synxronizatsiya\")}</span></div>}\r\n            doc=\"user-products\"\r\n            addParams={[\r\n                {\r\n                    name: \"tin\",\r\n                    value: user.tin ?? user.username\r\n                }\r\n            ]}\r\n            />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    user: selectCurrentUser\r\n})\r\n\r\nexport default connect(mapStateToProps)(UserProducts)\r\n","C:\\HISOBXONA\\on_doc\\src\\cabinet\\password-change\\password-change.component.jsx",["298"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Form, Row, Col, Input, Button, message } from 'antd'\r\nimport axios from 'axios'\r\nimport React, {useState} from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { connect } from 'react-redux'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport { selectLoadedKey } from '../../redux/user/user.selector'\r\nimport { EIMZOClient } from '../../utils/e-imzo'\r\nimport PaymeForm from '../payme-form/payme-form.component'\r\n\r\nconst PasswordChange = ({ loadedKey }) => {\r\n\r\n    const { t} = useTranslation();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    \r\n    const handleFinish = values=>{\r\n        setLoading(true);\r\n        EIMZOClient.createPkcs7(\r\n            loadedKey.id,\r\n            values.password,\r\n            null,\r\n            pkcs7=>{\r\n                axios({\r\n                    url: \"user/set-password\",\r\n                    method:\"post\",\r\n                    data: {\r\n                        pkcs7: pkcs7,\r\n                        password: values.password,\r\n                        phone: values.phone\r\n                    }\r\n                })\r\n            },\r\n            (e, r)=>{\r\n                message.error(r)\r\n                console.log(\"r\",r,\"e\",e)\r\n            }\r\n            )\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                onFinish={handleFinish}\r\n            >\r\n                <Row justify=\"space-between\">\r\n                    \r\n                    <Col md={11}>\r\n                        <Form.Item>\r\n                            <Form.Item\r\n                                key={`dyna-form-facutura-no-old-tin`}\r\n                                name=\"password\"\r\n                            >\r\n                                <Input.Password\r\n                                    rules={[{ required: true }]}\r\n                                    size=\"large\"\r\n                                />\r\n                            </Form.Item>\r\n                            <span className=\"custom-input-label-1\">{t(\"Yangi parol\")}</span>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col md={11}>\r\n                        <Form.Item>\r\n                            <Form.Item\r\n                                key={`dyna-form-facutura-no-old-tphone`}\r\n                                name=\"phone\"\r\n                            >\r\n                                <Input\r\n                                    placeholder=\"+998 xx xxx xx xx\"\r\n                                    rules={[{ required: true }]}\r\n                                    size=\"large\"\r\n                                />\r\n                            </Form.Item>\r\n                            <span className=\"custom-input-label-1\">{(\"Telefon raqam\")}</span>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col md={11}>\r\n                        <Form.Item>\r\n                            <Form.Item\r\n                                name=\"confirm\"\r\n                                dependencies={['password']}\r\n                                hasFeedback\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please confirm your password!',\r\n                                    },\r\n                                    ({ getFieldValue }) => ({\r\n                                        validator(_, value) {\r\n                                            if (!value || getFieldValue('password') === value) {\r\n                                                return Promise.resolve();\r\n                                            }\r\n                                            return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                                        },\r\n                                    }),\r\n                                ]}\r\n                            >\r\n                                <Input.Password\r\n                                    rules={[{ required: true }]}\r\n                                    size=\"large\"\r\n                                />\r\n                            </Form.Item>\r\n                            <span className=\"custom-input-label-1\">Prolni tasdiqlang</span>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col md={11}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            loading={loading}\r\n                            className=\"factra-action-btns sing-btn\"\r\n                            size=\"large\"\r\n                            icon={<FontAwesomeIcon icon=\"save\" className=\"factura-action-btn-icons\" />}>\r\n                            Saqlash\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    loadedKey: selectLoadedKey,\r\n})\r\n\r\nexport default connect(mapStateToProps)(PasswordChange)\r\n",["299","300"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\account-form\\account-form.component.jsx",["301"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Col, Input, Row, Form, Button, message, Select} from 'antd';\r\nimport axios from 'axios';\r\nimport React from 'react'\r\nimport { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { setUser } from '../../redux/user/user.action';\r\nimport { selectCurrentUser } from '../../redux/user/user.selector';\r\nimport { TextInBracket } from '../../utils/utils';\r\n\r\nconst { Option } = Select;\r\n\r\nconst AccountForm = ({user, setUserOnly}) => {\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const onSubmit=(values)=>{\r\n        console.log(JSON.stringify(values));\r\n        setLoading(true)\r\n        axios({\r\n            method: \"post\",\r\n            data: values,\r\n            \r\n            url: `company/update?id=${user.id}`\r\n        }).then(res=>{\r\n            setLoading(false)\r\n            //setUserOnly(res.data)\r\n            message.success(\"Succesfully updated!\")\r\n        }).catch(err=>{\r\n            setLoading(false)\r\n            console.log(err)\r\n        })\r\n    }\r\n    const fields = [\r\n        {\r\n            name: \"name\",\r\n            label: \"Nomi\"\r\n        },\r\n        {\r\n            name: \"address\",\r\n            label: \"Manzil\"\r\n        },\r\n        {\r\n            name: \"oked\",\r\n            label: \"OKED\"\r\n        },\r\n        {\r\n            name: \"director_fio\",\r\n            label: \"Direktor\"\r\n        },\r\n        {\r\n            name: \"accountant\",\r\n            label: \"Hisobchi\"\r\n        },\r\n        // {\r\n        //     name: \"phone\",\r\n        //     label: \"Telephone\"\r\n        // },\r\n        {\r\n            name: \"bank_account\",\r\n            label: \"Hisob raqam\"\r\n        },\r\n        {\r\n            name: \"mfo\",\r\n            label: \"MFO\"\r\n        },\r\n        \r\n    ]\r\n   \r\n\r\n    return (\r\n        \r\n            <Form\r\n                initialValues={user}\r\n                onFinish={onSubmit}\r\n                form={form}\r\n            >\r\n                <Row justify=\"space-between\">\r\n                    <Col md={11}>\r\n                    \r\n                        <Form.Item>\r\n                            <Form.Item\r\n                                initialValue={user.tin??user.username}\r\n                                key={`dyna-form-facutura-no-old-tin`}\r\n                                name=\"tin\"\r\n                                >\r\n                                <Input\r\n                                    rules={[{ required: true }]}\r\n                                    size=\"large\"\r\n                                    disabled\r\n                                    />\r\n                            </Form.Item>\r\n                            <span className=\"custom-input-label-1\">{t(\"STIR\")}</span>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    {\r\n                        fields.map(field => <Col md={11}>\r\n                            <Form.Item>\r\n                                <Form.Item\r\n                                    key={`dyna-form-facutura-no-old-${field.name}`}\r\n                                    name={field.name}\r\n                                >\r\n                                    <Input\r\n                                        rules={[{ required: true }]}\r\n                                        size=\"large\"\r\n                                    />\r\n                                </Form.Item>\r\n                                <span className=\"custom-input-label-1\">{field.label}</span>\r\n                            </Form.Item>\r\n                        </Col>)\r\n                    }\r\n                    <Col md={11}>\r\n                        <Form.Item>\r\n                            <Form.Item\r\n                                key={`dyna-form-facutura-no-old-tin-vil`}\r\n                                name=\"ns10_code\"\r\n                            >\r\n                                <Select\r\n                                    rules={[{ required: true }]}\r\n                                    size=\"large\"\r\n                                    bordered={false}\r\n                                >\r\n\r\n                                <Option value={1}>Tashkent</Option>\r\n                                <Option value={2}>Andijon</Option>\r\n                                <Option value={3}>Tashkent</Option>\r\n                                <Option value={14}>Namangan</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <span className=\"custom-input-label-1\">{t(\"Viloyat\")}</span>\r\n                        </Form.Item>\r\n                    </Col>\r\n                   <Col md={11}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            loading={loading}\r\n                            className=\"factra-action-btns sing-btn\"\r\n                            size=\"large\"\r\n                            icon={<FontAwesomeIcon icon=\"save\" className=\"factura-action-btn-icons\" />}>\r\n                                Saqlash\r\n                        </Button>\r\n                   </Col>\r\n                </Row>\r\n            </Form>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch=>({\r\n    setUserOnly: (user)=>dispatch(setUser(user))\r\n})\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    user: selectCurrentUser\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountForm)\r\n","C:\\HISOBXONA\\on_doc\\src\\cabinet\\contract\\index.router.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\frontend\\home\\home.component.jsx",["302","303","304"],"import React, { useState } from 'react';\r\nimport Header from '../../components/header/header.component';\r\n\r\nconst Home = ({})=>{\r\n\r\n    \r\n\r\n    return<div>\r\n        <div>\r\n            {/* <Header /> */}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Home;",["305","306"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\contract\\view\\view.component.jsx",[],["307","308"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\create\\create.component.jsx",["309","310","311","312","313"],"import React, { useState, useEffect } from 'react';\r\nimport 'react-datasheet/lib/react-datasheet.css';\r\nimport { Button, Input, Form, Row, Col, DatePicker, Select, message } from 'antd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './create.style.scss';\r\nimport axios from 'axios';\r\nimport BuyerForm from '../../common/buyer-form.component';\r\nimport SellerForm from '../../common/seller-form.component';\r\nimport { connect } from 'react-redux';\r\nimport { selectCurrentUser, selectLoadedKey, selectToken } from '../../../redux/user/user.selector';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport moment from 'moment';\r\nimport PersonFetch from '../../common/person-fetch/person-fetch.component';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport FacturaProductGrid from './product-grid.component';\r\nimport { ConvertGridToProduct } from '../../models/FacturaProduct';\r\nimport { GetFacturaDataToSign } from '../../models/Factura';\r\nimport { EIMZOClient } from '../../../utils/e-imzo';\r\n\r\nconst { Option } = Select;\r\n\r\nconst FacturaCreateForm = ({ match, user, loadedKey }) => {\r\n\r\n  const { t, i18n } = useTranslation();\r\n  const [form] = Form.useForm();\r\n  const { facturaId } = match.params;\r\n  const [newFacturaId, setNewFacturaId]=useState();\r\n  const [initialData, setInitialData] = useState({ facturaType: 0 })\r\n  const [facturaType, setFacturaType] = useState();\r\n  const [saveLoading, setSaveLoading] = useState(false);\r\n  const [products, setProducts] = useState();\r\n\r\n\r\n  useEffect(() => {\r\n    if (facturaId) {\r\n      //fetch fatura data\r\n      setNewFacturaId(facturaId)\r\n      axios({\r\n        url: `/api/v1/facturas/${facturaId}`,\r\n        method: \"GET\",\r\n      }).then(res => {\r\n        let data = res.data;\r\n        data.contractDate = moment(data.contractDate);\r\n        data.created_at = moment(data.created_at);\r\n        data.facturaDate = moment(data.facturaDate);\r\n        data.empowermentDateOfIssue = moment(data.empowermentDateOfIssue);\r\n        data.oldFacturaDate = moment(data.oldFacturaDate);\r\n        data.updated_at = moment(data.updated_at);\r\n        console.log(data);\r\n\r\n        setInitialData(res.data);\r\n\r\n        form.resetFields();\r\n      }).catch(err => {\r\n        console.log(err);\r\n      })\r\n      //end fetch factura data;\r\n    }else{\r\n      axios({\r\n        url: \"info/get-guid\",\r\n        method: \"get\"\r\n      }).then(res=>{\r\n        if(res.data.success){\r\n          setNewFacturaId(res.data.data)\r\n        }\r\n      }).catch(ex=>{\r\n        console.log(ex)\r\n      })\r\n    }\r\n  }, [])\r\n\r\n\r\n  const validateMessages = {\r\n    required: t('Bu maydon majburiy!'),\r\n    types: {\r\n      email: '${label} is not a valid email!',\r\n      number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n      range: '${label} must be between ${min} and ${max}',\r\n    },\r\n\r\n  };\r\n\r\n  const FACTURA_TYPES = {\r\n    \"STANDARD\": 0,\r\n    \"QOSHIMCHA\": 1,\r\n    \"HARAJATLARNI QOPLASH\": 2,\r\n    \"TOLOVSIZ\": 3,\r\n    \"TUZATUVCHI\": 4\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  //#region data-sheet methods\r\n\r\n  const getProducts = data=>{\r\n\r\n    //console.log(data)\r\n\r\n    //console.log(ConvertGridToProduct(data, user.tin??user.username, newFacturaId))\r\n\r\n    setProducts(ConvertGridToProduct(data, user.tin ?? user.username, newFacturaId))\r\n\r\n    //console.log(products)\r\n     //return \r\n    \r\n  }\r\n\r\n\r\n  //#region form methods\r\n\r\n  const handleSign = ()=>{\r\n    setSaveLoading(true)\r\n    let values = form.getFieldsValue()\r\n    console.log(JSON.stringify(GetFacturaDataToSign(values, products, newFacturaId)));\r\n    EIMZOClient.createPkcs7(\r\n      loadedKey.id, \r\n      JSON.stringify(GetFacturaDataToSign(values, products, newFacturaId)),\r\n      null,\r\n      pkcs7=>{\r\n        console.log(JSON.stringify({\r\n          Sign: pkcs7\r\n        }))\r\n        axios({\r\n          url: `facturas/send?id=${newFacturaId}`,\r\n          method: 'post',\r\n          data: {\r\n            Sign: pkcs7\r\n          }\r\n        })\r\n        .then(res=>{\r\n          console.log(res)\r\n          setSaveLoading(false)\r\n        })\r\n        .catch(ex=>{\r\n          console.log(ex)\r\n        })\r\n      },\r\n      (e,r)=>{\r\n        console.log(\"e\", e, \"r\", r)\r\n        setSaveLoading(false)\r\n      }\r\n      )\r\n    \r\n  }\r\n\r\n  const handleSubmit = (values) => {\r\n    setSaveLoading(true);\r\n    //console.log(values)\r\n\r\n    //console.log(GetFacturaDataToSign(values, products, newFacturaId))\r\n    console.log(JSON.stringify(GetFacturaDataToSign(values, products, newFacturaId)))\r\n\r\n    if (facturaId) {\r\n      axios({\r\n        url: `/api/v1/facturas/${facturaId}`,\r\n        method: 'PATCH',\r\n        data: { factura: values }\r\n      }).then(res => {\r\n        if (res.data.ok) {\r\n          message.success(t(\"Faktura o'zgartirildi!\"))\r\n        } else {\r\n          message.error(t(\"Faktura o'zgartirishda xatolik!\"));\r\n        }\r\n        console.log(res)\r\n        setSaveLoading(false);\r\n      }).catch(err => {\r\n        message.error(t(\"Faktura o'zgartirishda xatolik!\"));\r\n        console.log(err)\r\n        setSaveLoading(false);\r\n      })\r\n    } else {\r\n      axios({\r\n        url: 'facturas/create',\r\n        method: 'post',\r\n        data: GetFacturaDataToSign(values, products, newFacturaId)\r\n      }).then(res => {\r\n        if (res.data.ok) {\r\n          message.success(t(\"Faktura yaratili!\"))\r\n        }\r\n        else {\r\n          message.error(t(\"Faktura yaratishda xatolik!\"));\r\n        }\r\n        console.log(res)\r\n        setSaveLoading(false);\r\n      }).catch(err => {\r\n        console.log(err)\r\n        message.error(t(\"Faktura yaratishda xatolik!\"));\r\n        setSaveLoading(false);\r\n      })\r\n    }\r\n\r\n\r\n  }\r\n\r\n  //#endregion\r\n\r\n  return (\r\n    <div style={{ padding: 15 }}>\r\n      <Form\r\n        initialValues={initialData}\r\n        form={form}\r\n        name=\"factura\"\r\n        onFinish={handleSubmit}\r\n        scrollToFirstError\r\n        validateMessages={validateMessages}\r\n      >\r\n\r\n        <div className=\"factura-data-sheet-container\">\r\n          <h3>{t(\"Hujjat turi\")}</h3>\r\n          <Row justify=\"space-between\">\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  key=\"dyna-form-facutura-no\"\r\n                  name=\"facturaType\"\r\n                >\r\n                  <Select\r\n                    onChange={setFacturaType}\r\n                    bordered={false}\r\n                    size=\"large\"\r\n                    placeholder=\"Faktura turi\">\r\n                    <Option value={FACTURA_TYPES[\"STANDARD\"]}>{t(\"Standard\")}</Option>\r\n                    <Option value={FACTURA_TYPES[\"QOSHIMCHA\"]}>{t(\"Qo'shimcha\")}</Option>\r\n                    <Option value={FACTURA_TYPES[\"HARAJATLARNI QOPLASH\"]}>{t(\"Harajatni qoplash\")}</Option>\r\n                    <Option value={FACTURA_TYPES[\"TOLOVSIZ\"]}>{t(\"To'lovsiz\")}</Option>\r\n                    <Option value={FACTURA_TYPES[\"TUZATUVCHI\"]}>{t(\"Tuzatuvchi\")}</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">{t(\"Faktura turi\")}</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={facturaType === FACTURA_TYPES[\"QOSHIMCHA\"] || facturaType === FACTURA_TYPES[\"TUZATUVCHI\"] ? 11 : 0}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  key=\"dyna-form-facutura-no-old\"\r\n                  name=\"oldFacturaId\">\r\n                  <Input\r\n                    rules={[{ required: true }]}\r\n                    size=\"large\"\r\n                    placeholder=\"Eski faktura ID\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">{t(\"Eski faktura ID\")}</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={facturaType === FACTURA_TYPES[\"QOSHIMCHA\"] || facturaType === FACTURA_TYPES[\"TUZATUVCHI\"] ? 11 : 0}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  key=\"dyna-form-facutura-no-old\"\r\n                  name=\"oldFacturaNo\">\r\n                  <Input\r\n                    rules={[{ required: true }]}\r\n                    size=\"large\"\r\n                    placeholder=\"Eski faktura No\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">{t(\"Eski faktura No\")}</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={facturaType === FACTURA_TYPES[\"QOSHIMCHA\"] || facturaType === FACTURA_TYPES[\"TUZATUVCHI\"] ? 11 : 0}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  key=\"dyna-form-facutura-no-old\"\r\n                  name=\"oldFacturaDate\">\r\n                  <DatePicker\r\n                    rules={[{ required: true }]}\r\n                    size=\"large\"\r\n                    placeholder=\"Eski faktura Sanasi\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">{t(\"Eski faktura Sanasi\")}</span>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row justify=\"space-between\">\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  rules={[{ required: true }]}\r\n                  key=\"dyna-form-facutura-no\"\r\n                  name=\"facturaNo\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder={t(\"Faktura raqami\")} />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">{t(\"Faktura raqami\")}</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  key=\"dyna-form-item-inn-date\"\r\n                  name=\"facturaDate\"\r\n                  rules={[{ required: true }]}>\r\n                  <DatePicker\r\n                    size=\"large\"\r\n                    placeholder={t(\"Faktura sanasi\")} />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">{t(\"Faktura sanasi\")}</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  rules={[{ required: true }]}\r\n                  key=\"dyna-form-item-contract-n0\"\r\n                  name=\"contractNo\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder={t(\"Shartnoma raqami\")} />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">{t(\"Shartnoma raqami\")}</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  rules={[{ required: true }]}\r\n                  key=\"dyna-form-item-contract-date\"\r\n                  name=\"contractDate\">\r\n                  <DatePicker\r\n                    size=\"large\"\r\n                    placeholder={t(\"Shartnoma sanasi\")} />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">{t(\"Shartnoma sanasi\")}</span>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n        <div className=\"factura-data-sheet-container\">\r\n\r\n          <Row justify=\"space-between\">\r\n            <Col md={11}>\r\n              <SellerForm form={form} />\r\n            </Col>\r\n\r\n            <Col md={11}>\r\n              <BuyerForm form={form} docType=\"factura\" />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <FacturaProductGrid getProducts={getProducts} form={form} />\r\n\r\n        <div className=\"factura-data-sheet-container\">\r\n\r\n          <Row justify=\"space-between\">\r\n            <Col md={5} >\r\n              <Form.Item>\r\n                <Form.Item\r\n                  key=\"empowerment-no\"\r\n                  name=\"empowermentNo\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder={t(\"Ishonchnoma raqami\")} />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">{t(\"Ishonchnoma raqami\")}</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={5}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  key=\"seler-account-empowerment-dateof-issue\"\r\n                  name=\"empowermentDateOfIssue\">\r\n                  <DatePicker\r\n                    size=\"large\"\r\n                    placeholder={t(\"Ishonchnoma sanasi\")} />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">{t(\"Ishonchnoma sanasi\")}</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12}>\r\n              <PersonFetch\r\n                pName=\"agentFio\"\r\n                pTin=\"agentTin\"\r\n                nameLabel={t(\"Ma'sul shaxs FIO\")}\r\n                tinLabel={t(\"STIR\")}\r\n                tinCol={11}\r\n                nameCol={11}\r\n                form={form}\r\n              />\r\n            </Col>\r\n\r\n          </Row>\r\n\r\n\r\n\r\n          <Row justify=\"space-between\">\r\n            <Col md={24} >\r\n              <Form.Item>\r\n                <Form.Item\r\n                  key=\"selenote-field\"\r\n                  name=\"notes\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder={t(\"Qo'shimcha ma'lumotlar\")} />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">{t(\"Qo'shimcha ma'lumotlar\")}</span>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n          </Row>\r\n        </div>\r\n        <div className=\"factura-data-sheet-container\">\r\n          <Row justify=\"space-around\">\r\n            <Col >\r\n              <Button\r\n                loading={saveLoading}\r\n                primary\r\n                htmlType=\"submit\"\r\n                className=\"factra-action-btns save-btn\"\r\n                size=\"large\"\r\n                icon={<FontAwesomeIcon icon=\"save\" className=\"factura-action-btn-icons\" />}>\r\n                {t(\"Saqlash\")}\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                //loading={saveLoading}\r\n                className=\"factra-action-btns sing-btn\"\r\n                size=\"large\"\r\n                onClick={handleSign}\r\n                icon={<FontAwesomeIcon icon=\"signature\" className=\"factura-action-btn-icons\" />}>\r\n                {t(\"Imzolash\")}\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                icon={<FontAwesomeIcon icon=\"ban\" className=\"factura-action-btn-icons\" />}\r\n                danger\r\n                className=\"factra-action-btns\"\r\n                size=\"large\">\r\n                {t(\"Bekor qilish\")}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <Form.Item\r\n          key=\"hidden-factura-id\"\r\n          name=\"facturaId\"\r\n        >\r\n          <Input\r\n            type=\"hidden\"\r\n          />\r\n\r\n        </Form.Item>\r\n        <Form.Item\r\n          key=\"hidden-factura-product-id\"\r\n          name=\"facturaProductId\"\r\n        >\r\n          <Input\r\n            type=\"hidden\"\r\n          />\r\n\r\n        </Form.Item>\r\n\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  token: selectToken,\r\n  user: selectCurrentUser,\r\n  loadedKey: selectLoadedKey\r\n})\r\n\r\nexport default connect(mapStateToProps)(FacturaCreateForm);","C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\buyer-form.component.jsx",["314"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\right-sidebar\\right-sidebar.component.jsx",["315","316","317"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Badge, Modal, Tag, Statistic, Spin, Checkbox } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport './right-sidebar.style.scss';\r\nimport { IMPORTANCE } from '../../env';\r\nimport { logOut, setCabinetData } from '../../redux/user/user.action';\r\nimport { connect } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectLoadedKey } from '../../redux/user/user.selector';\r\nimport AfertaPopup from '../aferta-popup/aferta-popup.component';\r\nimport BindroumingPopup from '../bindrouming-popup/bindrouming-popup.component';\r\n\r\nconst { Countdown } = Statistic;\r\n\r\nconst RightSidebar = ({ location, admin, setData, loadedKey, uOut }) => {\r\n\r\n    const { t } = useTranslation();\r\n\r\n   \r\n\r\n\r\n    const [active, setActive] = useState({})\r\n    const [notifications, setNotifications] = useState([])\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [badgeCount, setBedgeCount]=useState({\r\n        factura_awaiting: 0,\r\n        contract_awaiting: 0,\r\n        act_awaiting:0,\r\n        emp_awating: 0,\r\n        tty_awaiting:0,\r\n    })\r\n    useEffect(()=>{\r\n        setActive({\r\n            cabinet: location.pathname===\"/cabinet\",\r\n            factura: location.pathname.includes(\"/factura\"),\r\n            contract: location.pathname.includes(\"/contract\"),\r\n            empowerment: location.pathname.includes(\"/empowerment\"),\r\n            act: location.pathname.includes(\"/act\"),\r\n            tty: location.pathname.includes(\"/tty\"),\r\n            freeDoc: location.pathname.includes(\"/free-template\"),\r\n            notification: location.pathname.includes(\"/notification\")\r\n        })\r\n    }, [location.pathname])\r\n\r\n    const closeModel = ()=>{\r\n        setShowModal(false);\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        axios({\r\n            method: \"GET\",\r\n            url: \"/api/v1/cabinet\"\r\n        }).then(res=>{\r\n            const { notifications } = res.data\r\n            setData(res.data)\r\n            setNotifications(notifications);\r\n            if(Array.isArray(notifications) && notifications.length){\r\n                setShowModal(true)\r\n            }\r\n            setBedgeCount(res.data)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"cabiner-right-sidebar-cmain-container\">\r\n            <AfertaPopup />\r\n            <BindroumingPopup />\r\n            <Modal \r\n            bodyStyle={{width: '70wv'}}\r\n            title=\"Notifications\"\r\n            visible={showModal}\r\n            onOk={closeModel}\r\n            onCancel={closeModel}\r\n            cancelButtonProps={{style: {display: \"none\"}}}\r\n            >\r\n                {\r\n                    notifications.map((n, index)=><div style={{marginBottom: 30}}>\r\n                        <h3>{index+1}. {n.title_uz}</h3>\r\n                        <div><Tag \r\n                        style={{marginRight: 10}}\r\n                            color={IMPORTANCE[n.importance].color}>\r\n                                {IMPORTANCE[n.importance].text} \r\n                        </Tag>\r\n                        {moment(n.updated_at).format(\"MMMM Do YYYY, H:mm:ss\")}\r\n                        </div>\r\n                        <div>{ n.body_uz }</div>\r\n                        <hr/>\r\n                    </div>)\r\n                }\r\n            </Modal>\r\n            \r\n\r\n            <div className=\"cabiner-right-sidebar-sub-container\">\r\n                <div className=\"cabinet-documents-action-containers-bloks\">\r\n                    <Link to=\"/cabinet\">\r\n                        <div className={`action-bloks ${active.cabinet ? 'active' : ''}`}>\r\n                            <FontAwesomeIcon icon=\"home\" /> {t(\"Bosh sahifa\")}\r\n                        </div>\r\n                    </Link>\r\n                    <Link to=\"/cabinet/factura\">\r\n                            <div className={`action-bloks ${active.factura ? 'active' : ''}`}>\r\n                                <FontAwesomeIcon icon=\"file-invoice\" className=\"action-icon\" /> {t(\"Faktura\")}\r\n                                <Badge style={{marginLeft: 10}} count={badgeCount.factura_awaiting} />\r\n                            </div>\r\n                    </Link>\r\n                    <Link to=\"/cabinet/contract\">\r\n                        <div className={`action-bloks ${active.contract ? 'active' : ''}`}>\r\n                            <FontAwesomeIcon icon=\"file-contract\" className=\"action-icon\"/> {t(\"Shartnoma\")}\r\n                            <Badge style={{marginLeft: 10}} count={badgeCount.contract_awaiting} />\r\n                        </div>\r\n                    </Link>\r\n                    <Link to=\"/cabinet/act\">\r\n                        <div className={`action-bloks ${active.act ? 'active' : ''}`}>\r\n                            <FontAwesomeIcon icon={[\"far\", \"file-alt\"]} className=\"action-icon\"/> {t(\"Akt\")}\r\n                            <Badge style={{marginLeft: 10}} count={badgeCount.act_awaiting} />\r\n                        </div>\r\n                    </Link>\r\n                    <Link to=\"/cabinet/empowerment\">\r\n                        <div className={`action-bloks ${active.empowerment ? 'active' : ''}`}>\r\n                            <FontAwesomeIcon icon=\"file-signature\" className=\"action-icon\"/>{t(\"Ishonchnoma\")}\r\n                            <Badge style={{marginLeft: 10}} count={badgeCount.emp_awating} />\r\n                        </div>\r\n                    </Link>\r\n                    <Link to=\"/cabinet/tty\">\r\n                        <div className={`action-bloks ${active.tty ? 'active' : ''}`}>\r\n                            <FontAwesomeIcon icon={[\"far\", \"file-archive\"]} className=\"action-icon\"/> {t(\"TTY\")}\r\n                            <Badge style={{marginLeft: 10}} count={badgeCount.tty_awaiting} />\r\n                        </div>\r\n                    </Link>\r\n                    {\r\n                        admin \r\n                        ? <Link to=\"/admin/notification\">\r\n                            <div className={`action-bloks ${active.notification ? 'active' : ''}`}>\r\n                                <FontAwesomeIcon icon={[\"far\", \"bell\"]}  className=\"action-icon\"/> Notification\r\n                                <Badge style={{marginLeft: 10}} count={3} />\r\n                            </div>\r\n                        </Link>\r\n                        : null\r\n                    }\r\n\r\n                    {\r\n                        loadedKey ?\r\n                            <Countdown\r\n                                valueStyle={{fontSize: 15}}\r\n                                value={loadedKey.time + 1000 * 60 * 30}\r\n                                title={t(\"Sessiya tugaydi\")}\r\n                                onFinish={uOut} />\r\n                            : null\r\n                    }\r\n\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    loadedKey: selectLoadedKey\r\n})\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    setData: data => dispatch(setCabinetData(data)),\r\n    uOut: () => dispatch(logOut())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(RightSidebar));\r\n","C:\\HISOBXONA\\on_doc\\src\\components\\language-dropdown\\locale-dropdown.jsx",["318"],"import React, { useState, useEffect } from 'react';\r\n//import { connect } from 'react-redux';\r\n//import { setUserLocale } from '../../redux/user/user.actions';\r\n//import { createStructuredSelector } from 'reselect';\r\n//import { selectUserLocale } from '../../redux/user/user.selector';\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { useTranslation } from 'react-i18next';\r\nimport i18next from \"i18next\";\r\n\r\nconst LanguagesDropdown = ({ locale, changeLocale }) => {\r\n    const { i18n } = useTranslation();\r\n\r\n    const [activeLang, setActiveLang] = useState(i18next.language);\r\n\r\n    useEffect(()=>{\r\n        setActiveLang(i18next.language)\r\n    }, [i18next.language])\r\n\r\n    const languagesMenu = (\r\n        <Menu>\r\n            <Menu.Item onClick={() => { \r\n                //changeLocale('uz'); \r\n                i18n.changeLanguage('uz') \r\n                }}>\r\n                <img style={{ width: 25, borderRadius: '50%' }} alt=\"languange\" src=\"/images/uz.png\" /> O'zb\r\n            </Menu.Item>\r\n            <Menu.Item onClick={() => {\r\n                //changeLocale('uz');\r\n                i18n.changeLanguage('uz-Cyrl')\r\n            }}>\r\n                <img style={{ width: 25, borderRadius: '50%' }} alt=\"languange\" src=\"/images/uz.png\" /> Ўзб\r\n            </Menu.Item>\r\n            <Menu.Item onClick={() => { \r\n                //changeLocale('ru'); \r\n                i18n.changeLanguage('ru') \r\n            }}>\r\n                <img style={{ width: 25, borderRadius: '50%' }} alt=\"languange\" src=\"/images/ru.png\" /> Pyc\r\n            </Menu.Item>\r\n            <Menu.Item onClick={() => { \r\n                //changeLocale('en'); \r\n                i18n.changeLanguage('en') \r\n            }}>\r\n                <img style={{ width: 25, borderRadius: '50%' }} alt=\"languange\" src=\"/images/en.png\" /> Eng\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    return (<span className=\"trigger text-float-right\">\r\n        <Dropdown overlay={languagesMenu}>\r\n            <img style={{ width: 25, borderRadius: '50%', marginRight:30 }} alt=\"languange\" src={`/images/${activeLang===\"uz-Cyrl\"?\"uz\": activeLang}.png`} />\r\n        </Dropdown>\r\n    </span>)\r\n}\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//     changeLocale: locale => dispatch(setUserLocale(locale))\r\n// })\r\n\r\n// const mapStateToProps = createStructuredSelector({\r\n//     locale: selectUserLocale\r\n// })\r\n\r\n//export default connect(mapStateToProps, mapDispatchToProps)(LanguagesDropdown);\r\nexport default LanguagesDropdown;","C:\\HISOBXONA\\on_doc\\src\\cabinet\\tty\\create\\create.component.jsx",["319","320","321","322","323"],"import React, { useState, useEffect } from 'react';\r\nimport 'react-datasheet/lib/react-datasheet.css';\r\nimport { Button, Input, Form, Row, Col, DatePicker, message, Radio, Upload } from 'antd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport axios from 'axios';\r\nimport Datasheet from 'react-datasheet';\r\nimport BuyerForm from '../../common/buyer-form.component';\r\nimport SellerForm from '../../common/seller-form.component';\r\nimport { connect } from 'react-redux';\r\nimport { selectCurrentUser, selectToken } from '../../../redux/user/user.selector';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport moment from 'moment';\r\nimport PersonFetch from '../../common/person-fetch/person-fetch.component';\r\nimport { convertProductsToGrid, FIRST_TTY_GRID_ROW } from '../../../utils/main';\r\nimport { \r\n  FullscreenOutlined, \r\n  FullscreenExitOutlined, \r\n  } from '@ant-design/icons';\r\nimport SelectEditor from '../../../components/data-sheet-custom-selector/custom-selector.component';\r\nimport SelectMeasureEditor from '../../../components/data-sheet-custom-measure-selector/custom-selector.component';\r\n\r\n\r\nconst TTYForm = ({ match, token, user }) => {\r\n\r\n  const [form] = Form.useForm();\r\n  const { ttyId } = match.params;\r\n  const [initialData, setInitialData] = useState()\r\n  const [isLoading, setIsloading] = useState(false);\r\n\r\n\r\n  //#region DATA SHEET\r\n\r\n  const [fullView, toglleFullView] = useState(false)\r\n\r\n\r\n  const [grid, setGrid] = useState([\r\n    FIRST_TTY_GRID_ROW,\r\n    [\r\n      { readOnly: true, value: 1 }, //0 ordNo\r\n      { value: \"\" }, //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor }, //2 measure\r\n      { value: '' }, //3 count\r\n      { value: \"\", }, //4 price\r\n      { value: \"\", readOnly: true}, //5 total\r\n      { value: '' }, //6 delivery cost\r\n      { value: \"\", }, //7 Docs\r\n      { value: \"\", }, //8 weight measure method\r\n      { value: \"\", }, //9 item class\r\n      { value: \"\", }, //10 brutto weight\r\n      { value: \"\", }, //11 netto weight                       //12 total\r\n    ], \r\n    [\r\n      { readOnly: true, value:2 }, //0 ordNo\r\n      { value: \"\" }, //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor }, //2 measure\r\n      { value: '' }, //3 count\r\n      { value: \"\", }, //4 price\r\n      { value: \"\", readOnly: true}, //5 total\r\n      { value: '' }, //6 delivery cost\r\n      { value: \"\", }, //7 Docs\r\n      { value: \"\", }, //8 weight measure method\r\n      { value: \"\", }, //9 item class\r\n      { value: \"\", }, //10 brutto weight\r\n      { value: \"\", }, //11 netto weight\r\n    ], \r\n    [\r\n      { readOnly: true, value:3 }, //0 ordNo\r\n      { value: \"\" }, //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor }, //2 measure\r\n      { value: '' }, //3 count\r\n      { value: \"\", }, //4 price\r\n      { value: \"\", readOnly: true}, //5 total\r\n      { value: '' }, //6 delivery cost\r\n      { value: \"\", }, //7 Docs\r\n      { value: \"\", }, //8 weight measure method\r\n      { value: \"\", }, //9 item class\r\n      { value: \"\", }, //10 brutto weight\r\n      { value: \"\", }, //11 netto weight\r\n    ], \r\n    [\r\n      { readOnly: true, value:4 }, //0 ordNo\r\n      { value: \"\" }, //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor }, //2 measure\r\n      { value: '' }, //3 count\r\n      { value: \"\", }, //4 price\r\n      { value: \"\", readOnly: true}, //5 total\r\n      { value: '' }, //6 delivery cost\r\n      { value: \"\", }, //7 Docs\r\n      { value: \"\", }, //8 weight measure method\r\n      { value: \"\", }, //9 item class\r\n      { value: \"\", }, //10 brutto weight\r\n      { value: \"\", }, //11 netto weight\r\n    ], \r\n  ])\r\n\r\n  const handleImportExecl =(value)=>{\r\n    console.log(\"me fired\")\r\n\r\n    if(value.file.status==\"done\"){\r\n      \r\n      const { response } = value.file\r\n\r\n      response.excel.forEach((element, index)=>{\r\n        element[0].value = index + 1;\r\n        element[0].readOnly = true;\r\n        element[2].dataEditor = SelectEditor;\r\n        element[4].dataEditor = SelectMeasureEditor;\r\n      })\r\n\r\n      setGrid([grid[0], ...response.excel])\r\n      console.log(response)\r\n    }\r\n  }\r\n\r\n  //#region data-sheet methods\r\n  const handleRemoveRow = (rowId)=>{\r\n\r\n    grid.splice(rowId, 1)\r\n    setGrid([...grid])\r\n  }\r\n\r\n  const valueRenderer = cell => cell.value;\r\n  const onCellsChanged = changes => {\r\n    changes.forEach(({ cell, row, col, value }, index) => {\r\n        //this sets changed values\r\n        grid[row][col] = { ...grid[row][col], value };\r\n        \r\n\r\n        //Lets calculate\r\n        let priceamount = parseFloat(grid[row][3].value??0) * parseFloat(grid[row][4].value??0);\r\n\r\n        grid[row][5] = {...grid[row][5], value: priceamount ?? 0}\r\n\r\n       \r\n     \r\n    });\r\n     setGrid([...grid]);\r\n  };\r\n\r\n  const handleAddRow = ()=>{\r\n    \r\n    const sampleRow = [\r\n      { readOnly: true, value:    grid.length }, //0 ordNo\r\n      { value: \"\" }, //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor }, //2 measure\r\n      { value: '' }, //3 count\r\n      { value: \"\", }, //4 price\r\n      { value: \"\", readOnly: true}, //5 total\r\n      { value: '' }, //6 delivery cost\r\n      { value: \"\", }, //7 Docs\r\n      { value: \"\", }, //8 weight measure method\r\n      { value: \"\", }, //9 item class\r\n      { value: \"\", }, //10 brutto weight\r\n      { value: \"\", }, //11 netto weight\r\n    ]\r\n\r\n    let newgrid = [...grid, sampleRow];\r\n\r\n     setGrid(newgrid)\r\n  }\r\n\r\n  const onContextMenu = (e, cell, i, j) =>\r\n    cell.readOnly ? e.preventDefault() : null;\r\n//#endregion\r\n\r\n  //#endregion\r\n\r\n\r\n  useEffect(() => {\r\n    if (ttyId) {\r\n\r\n      //fetch fatura data\r\n      axios({\r\n        url: `/api/v1/ttys/${ttyId}`,\r\n        method: \"GET\",\r\n      }).then(res => {\r\n        let data = res.data;\r\n        data.contractDate = moment(data.contractDate);\r\n        data.created_at = moment(data.created_at);\r\n        data.wayBillDate = moment(data.wayBillDate);\r\n        data.tripTicketDate = moment(data.tripTicketDate);\r\n        data.updated_at = moment(data.updated_at);\r\n        console.log(data);\r\n\r\n        setInitialData(res.data);\r\n        form.resetFields();\r\n        setGrid(convertProductsToGrid(res.data.products, \"tty\"))\r\n      }).catch(err => {\r\n        console.log(err);\r\n      })\r\n      //end fetch factura data;\r\n    }\r\n  }, [])\r\n\r\n\r\n  const validateMessages = {\r\n    required: 'Bu maydon majburiy!',\r\n    types: {\r\n      email: '${label} is not a valid email!',\r\n      number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n      range: '${label} must be between ${min} and ${max}',\r\n    },\r\n\r\n  };\r\n\r\n  //#region form methods\r\n\r\n  const handleSubmit = (values) => {\r\n    setIsloading(true);\r\n    console.log(values)\r\n    if (ttyId) {\r\n      axios({\r\n        url: `/api/v1/ttys/${ttyId}`,\r\n        method: 'PATCH',\r\n        data: { tty: values, products: grid }\r\n      }).then(res => {\r\n        setIsloading(false);\r\n        message.success(\"TTY yangilandi!\");\r\n        console.log(res)\r\n      }).catch(err => {\r\n        setIsloading(false)\r\n        message.error(\"TTY yangilashda xatolik!\");\r\n        console.log(err)\r\n      })\r\n    } else {\r\n      axios({\r\n        url: '/api/v1/ttys',\r\n        method: 'post',\r\n        data: { tty: values, products: grid }\r\n      }).then(res => {\r\n        setIsloading(false)\r\n        message.success(\"TTY yaratildi!\");\r\n        console.log(res)\r\n      }).catch(err => {\r\n        setIsloading(false)\r\n        message.error(\"TTY yaratishda xatolik!\");\r\n        console.log(err)\r\n      })\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  //#endregion\r\n\r\n  return (\r\n    <div style={{ padding: 15 }}>\r\n      <Form\r\n        initialValues={initialData}\r\n        form={form}\r\n        name=\"factura\"\r\n        onFinish={handleSubmit}\r\n        scrollToFirstError\r\n        validateMessages={validateMessages}\r\n      >\r\n\r\n        <div className=\"factura-data-sheet-container\">\r\n          <h3>TTY yaratish</h3>\r\n\r\n          <Row justify=\"space-between\">\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  rules={[{ required: true }]}\r\n                  key=\"dyna-form-facutura-no\"\r\n                  name=\"wayBillNo\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder=\"TTY raqami\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">TTY raqami</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  key=\"dyna-form-item-inn-date\"\r\n                  name=\"wayBillDate\"\r\n                  rules={[{ required: true }]}>\r\n                  <DatePicker\r\n                    size=\"large\"\r\n                    placeholder=\"TTY sanasi\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">TTY sanasi</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={24}>\r\n              <Form.Item\r\n                name=\"deliveryType\"\r\n                key=\"deliveryType\"\r\n                initialValue={1}\r\n              >\r\n                <Radio.Group style={{ width: '100%' }} options={[\r\n                  { label: \"Omborxonadan omborxonaga\", value: 1 },\r\n                  { label: \"Sotuvchidan xaridorgacha\", value: 2 }\r\n                ]}\r\n                  optionType=\"button\"\r\n                />\r\n\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div className=\"factura-data-sheet-container\">\r\n          <Row justify=\"space-between\">\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  rules={[{ required: true }]}\r\n                  key=\"dyna-form-item-contract-n0\"\r\n                  name=\"contractNo\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder=\"Shartnoma raqami\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Shartnoma raqami</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  rules={[{ required: true }]}\r\n                  key=\"dyna-form-item-contract-date\"\r\n                  name=\"contractDate\">\r\n                  <DatePicker\r\n                    size=\"large\"\r\n                    placeholder=\"Shartnoma sanasi\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Shartnoma sanasi</span>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  rules={[{ required: true }]}\r\n                  key=\"dyna-form-item-contract-n0-TripTicketNo\"\r\n                  name=\"tripTicketNo\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder=\"Shartnoma raqami\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Yo'l varaqasi raqami</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  rules={[{ required: true }]}\r\n                  key=\"dyna-form-item-contract-date-TripTicketDate\"\r\n                  name=\"tripTicketDate\">\r\n                  <DatePicker\r\n                    size=\"large\"\r\n                    placeholder=\"Shartnoma sanasi\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Yo'l varaqasi sanasi</span>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n        <div className=\"factura-data-sheet-container\">\r\n\r\n          <Row justify=\"space-between\">\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"truckRegNo\"\r\n                  key=\"truckRegNo\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input size=\"large\" placeholder=\"Avtomobil davlat raqami\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Avtomobil davlat raqami</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"truckModel\"\r\n                  key=\"truckModel\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input size=\"large\" placeholder=\"Avtomobil turi\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Avtomobil turi</span>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={24}>\r\n              <Form.Item\r\n                name=\"trailerType\"\r\n                key=\"trailerType\"\r\n                initialValue={1}\r\n              >\r\n                <Radio.Group style={{ width: '100%' }} options={[\r\n                  { label: \"Tirkama\", value: 1 },\r\n                  { label: \"Yarim tirkama\", value: 2 }\r\n                ]}\r\n                  optionType=\"button\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"trailerRegNo\"\r\n                  key=\"TrailerRegNo\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input size=\"large\" placeholder=\"Tirkama davlat raqami\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Tirkama davlat raqami</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"trailerModel\"\r\n                  key=\"TrailerRegNoType\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input size=\"large\" placeholder=\"Tirkama turi\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Tirkama turi</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"driverFio\"\r\n                  key=\"DriverFio\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input size=\"large\" placeholder=\"Haydovchi FIO\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Haydovchi FIO</span>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n        <div className=\"factura-data-sheet-container\">\r\n\r\n          <Row justify=\"space-between\">\r\n            <Col md={11}>\r\n              <SellerForm form={form} docType=\"act\" />\r\n            </Col>\r\n\r\n            <Col md={11}>\r\n              <BuyerForm form={form} docType=\"act\" />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n        <div className=\"factura-data-sheet-container\">\r\n\r\n          <Row justify=\"space-between\">\r\n            <Col md={11}>\r\n              <PersonFetch\r\n                form={form}\r\n                pName=\"carrierName\"\r\n                pTin=\"carrierTin\"\r\n                nameLabel=\"Tashuvchi FIO\"\r\n                tinLabel=\"Tashunchi STIR\" />\r\n            </Col>\r\n\r\n            <Col md={11}>\r\n              <PersonFetch\r\n                form={form}\r\n                pName=\"customerName\"\r\n                pTin=\"customerTin\"\r\n                nameLabel=\"Buyurtmachi FIO\"\r\n                tinLabel=\"Buyurtmachi STIR\" />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n        <div className=\"factura-data-sheet-container\">\r\n          <Row justify=\"space-between\">\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"pointOfLoading\"\r\n                  key=\"PointOfLoading\"\r\n                >\r\n                  <Input size=\"large\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Yuklash manzili</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"pointOfUnloading\"\r\n                  key=\"pointOfUnloading\"\r\n                >\r\n                  <Input size=\"large\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Tushirish mazili</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"pointOfRedirectName\"\r\n                  key=\"pointOfRedirectName\"\r\n                >\r\n                  <Input size=\"large\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Boshqa manzil nomi</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"pointOfRedirectAddress\"\r\n                  key=\"pointOfRedirectAddress\"\r\n                >\r\n                  <Input size=\"large\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Boshqa manzil manzili</span>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n        <div className=\"factura-data-sheet-container\">\r\n          <Row justify=\"space-between\">\r\n\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"giverFio\"\r\n                  key=\"giverFio\"\r\n                >\r\n                  <Input size=\"large\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Topshirdi</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"takerFio\"\r\n                  key=\"takerFio\"\r\n                >\r\n                  <Input size=\"large\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Qabul qildi</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"giverDriverFio\"\r\n                  key=\"giverDriverFio\"\r\n                >\r\n                  <Input size=\"large\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Topshiruvchi haydovchi FIO</span>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"takerDriverFio\"\r\n                  key=\"takerDriverFio\"\r\n                >\r\n                  <Input size=\"large\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Qabulqiluvchi haydovchi FIO</span>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n\r\n            <Col md={24} >\r\n              <Form.Item>\r\n                <Form.Item\r\n                  key=\"selenote-field\"\r\n                  name=\"specialNotes\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder=\"Қўшимча майдон\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Қўшимча майдон</span>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"deliveryDistance\"\r\n                  key=\"deliveryDistance\"\r\n                >\r\n                  <Input size=\"large\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Tashish orligi</span>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col md={11}>\r\n              <Form.Item>\r\n                <Form.Item\r\n                  name=\"deliveryDistanceInCity\"\r\n                  key=\"deliveryDistanceInCity\"\r\n                >\r\n                  <Input size=\"large\" />\r\n                </Form.Item>\r\n                <span className=\"custom-input-label-1\">Tashish orqliq (Shaharda)</span>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n          </Row>\r\n        </div>\r\n\r\n        <div className={`factura-data-sheet-container ${fullView ? 'grid-full-view' : null}`}>\r\n        <div style={{marginBottom: 10, display: 'flex', justifyContent:'space-between'}}>\r\n          <div style={{display: 'flex'}}>\r\n              <Upload \r\n                headers={{\r\n                  Authorization: \"Bearer \" + token\r\n                }}\r\n                multiple={false}\r\n                action=\"http://127.0.0.1:8000/api/v1/factura-products/read-excel\"\r\n                accept=\".xlsx, .xls\" \r\n                onChange={handleImportExecl}>\r\n                \r\n                  <Button style={{marginRight: 10}}>Exceldan yuklash</Button>\r\n               \r\n              </Upload>\r\n              <a target=\"_blank\" href=\"../../../excels/on_doc_factura_products.xlsx\" download>\r\n                <Button >\r\n                  Shablon yuklash\r\n                </Button>\r\n              </a>\r\n            </div>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={fullView ? <FullscreenExitOutlined /> : <FullscreenOutlined />} \r\n              onClick={()=>toglleFullView(!fullView)}>\r\n                { fullView ? \"Kichraytirish\" : \"Kengaytirish\" }\r\n            </Button>\r\n        </div>\r\n        \r\n      <div style={{overflowX: 'auto'}} >\r\n        <div style={{width: '100%'}}>\r\n          <Datasheet\r\n            data={ grid}\r\n            valueRenderer={ valueRenderer}\r\n            onContextMenu={ onContextMenu}\r\n            onCellsChanged={ onCellsChanged}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Button \r\n        size=\"large\" \r\n        style={{marginTop: 20, marginRight: 7, width: 220}} \r\n        type=\"primary\" \r\n        icon={<FontAwesomeIcon \r\n          style={{marginRight: 7}} \r\n          icon={[\"far\", \"plus-square\"]} />} \r\n        onClick={  handleAddRow }>Qo'shish</Button>\r\n      \r\n      <Button \r\n        size=\"large\" \r\n        style={{marginTop: 20, width: 220 }} \r\n        danger\r\n        type=\"primary\" \r\n        icon={<FontAwesomeIcon \r\n          style={{marginRight: 7}} \r\n          icon={[\"far\", \"trash-alt\"]} />} \r\n        onClick={ ()=>{ if(grid.length>1){ handleRemoveRow(grid.length-1) }}  }>Oxirgi qatorni o'chirish</Button>\r\n      </div>\r\n\r\n        <div className=\"factura-data-sheet-container\">\r\n          <Row justify=\"space-around\">\r\n            <Col >\r\n              <Button\r\n                loading={isLoading}\r\n                primary\r\n                htmlType=\"submit\"\r\n                className=\"factra-action-btns save-btn\"\r\n                size=\"large\"\r\n                icon={<FontAwesomeIcon icon=\"save\" className=\"factura-action-btn-icons\" />}>\r\n                Сақлаб қолиш\r\n                  </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                className=\"factra-action-btns sing-btn\"\r\n                size=\"large\"\r\n                icon={<FontAwesomeIcon icon=\"signature\" className=\"factura-action-btn-icons\" />}>\r\n                Имзолаш\r\n                  </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                icon={<FontAwesomeIcon icon=\"ban\" className=\"factura-action-btn-icons\" />}\r\n                danger\r\n                className=\"factra-action-btns\"\r\n                size=\"large\">\r\n                Бекор қилиш\r\n                  </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  token: selectToken,\r\n  user: selectCurrentUser\r\n})\r\n\r\nexport default connect(mapStateToProps)(TTYForm);",["324","325"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\seller-form.component.jsx",["326"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\empowerment\\index.component.jsx",[],["327","328"],"C:\\HISOBXONA\\on_doc\\src\\frontend\\login\\login.component.jsx",["329","330","331"],"C:\\HISOBXONA\\on_doc\\src\\utils\\e-imzo.js",["332","333","334","335","336","337","338"],"String.prototype.splitKeep = function(splitter, ahead) {\r\n    var self = this;\r\n    var result = [];\r\n    if (splitter != '') {\r\n        // Substitution of matched string\r\n        function getSubst(value) {\r\n            var substChar = value[0] == '0' ? '1' : '0';\r\n            var subst = '';\r\n            for (var i = 0; i < value.length; i++) {\r\n                subst += substChar;\r\n            }\r\n            return subst;\r\n        };\r\n        var matches = [];\r\n        // Getting mached value and its index\r\n        var replaceName = splitter instanceof RegExp ? \"replace\" : \"replaceAll\";\r\n        var r = self[replaceName](splitter, function(m, i, e) {\r\n            matches.push({ value: m, index: i });\r\n            return getSubst(m);\r\n        });\r\n        // Finds split substrings\r\n        var lastIndex = 0;\r\n        for (var i = 0; i < matches.length; i++) {\r\n            var m = matches[i];\r\n            var nextIndex = ahead == true ? m.index : m.index + m.value.length;\r\n            if (nextIndex != lastIndex) {\r\n                var part = self.substring(lastIndex, nextIndex);\r\n                result.push(part);\r\n                lastIndex = nextIndex;\r\n            }\r\n        };\r\n        if (lastIndex < self.length) {\r\n            var part = self.substring(lastIndex, self.length);\r\n            result.push(part);\r\n        };\r\n    } else {\r\n        result.add(self);\r\n    };\r\n    return result;\r\n};\r\n\r\nexport const CAPIWS = {\r\n    URL: (window.location.protocol.toLowerCase() === \"https:\" ? \"wss://127.0.0.1:64443\" : \"ws://127.0.0.1:64646\") + \"/service/cryptapi\",\r\n    callFunction: function(funcDef, callback, error) {\r\n        if (!window.WebSocket) {\r\n            if (error)\r\n                error();\r\n            return;\r\n        }\r\n        var socket;\r\n        try {\r\n            socket = new WebSocket(this.URL);\r\n        } catch (e) {\r\n            error(e);\r\n        }\r\n        socket.onerror = function(e) {\r\n            if (error)\r\n                error(e);\r\n        };\r\n        socket.onmessage = function(event) {\r\n            var data = JSON.parse(event.data);\r\n            socket.close();\r\n            callback(event, data);\r\n        };\r\n        socket.onopen = function() {\r\n            socket.send(JSON.stringify(funcDef));\r\n        };\r\n    },\r\n    version: function(callback, error) {\r\n        if (!window.WebSocket) {\r\n            if (error)\r\n                error();\r\n            return;\r\n        }\r\n        var socket;\r\n        try {\r\n            socket = new WebSocket(this.URL);\r\n        } catch (e) {\r\n            error(e);\r\n        }\r\n        socket.onerror = function(e) {\r\n            if (error)\r\n                error(e);\r\n        };\r\n        socket.onmessage = function(event) {\r\n            var data = JSON.parse(event.data);\r\n            socket.close();\r\n            callback(event, data);\r\n        };\r\n        socket.onopen = function() {\r\n            var o = { name: 'version' };\r\n            socket.send(JSON.stringify(o));\r\n        };\r\n    },\r\n    apidoc: function(callback, error) {\r\n        if (!window.WebSocket) {\r\n            if (error)\r\n                error();\r\n            return;\r\n        }\r\n        var socket;\r\n        try {\r\n            socket = new WebSocket(this.URL);\r\n        } catch (e) {\r\n            error(e);\r\n        }\r\n        socket.onerror = function(e) {\r\n            if (error)\r\n                error(e);\r\n        };\r\n        socket.onmessage = function(event) {\r\n            var data = JSON.parse(event.data);\r\n            socket.close();\r\n            callback(event, data);\r\n        };\r\n        socket.onopen = function() {\r\n            var o = { name: 'apidoc' };\r\n            socket.send(JSON.stringify(o));\r\n        };\r\n    },\r\n    apikey: function(domainAndKey, callback, error) {\r\n        if (!window.WebSocket) {\r\n            if (error)\r\n                error();\r\n            return;\r\n        }\r\n        var socket;\r\n        try {\r\n            socket = new WebSocket(this.URL);\r\n        } catch (e) {\r\n            error(e);\r\n        }\r\n        socket.onerror = function(e) {\r\n            if (error)\r\n                error(e);\r\n        };\r\n        socket.onmessage = function(event) {\r\n            var data = JSON.parse(event.data);\r\n            socket.close();\r\n            callback(event, data);\r\n        };\r\n        socket.onopen = function() {\r\n            var o = { name: 'apikey', arguments: domainAndKey };\r\n            socket.send(JSON.stringify(o));\r\n        };\r\n    }\r\n};\r\n\r\nexport const EIMZOClient = {\r\n    NEW_API: false,\r\n    API_KEYS: [\r\n        'cabinet.onlinefactura.uz', 'F09A2CBE8EA25A5C065AF78D32F517B1DCF12E997575556CBD90B405A90420E6EB538FCCFFCBAA22C5D191CAB3803965621B023E8642F77F35DDA072FBA17914'\r\n    ],\r\n    checkVersion: function(success, fail) {\r\n        CAPIWS.version(function(event, data) {\r\n            if (data.success === true) {\r\n                if (data.major && data.minor) {\r\n                    var installedVersion = parseInt(data.major) * 100 + parseInt(data.minor);\r\n                    EIMZOClient.NEW_API = installedVersion >= 336;\r\n                    success(data.major, data.minor);\r\n                } else {\r\n                    fail(null, 'E-IMZO Version is undefined');\r\n                }\r\n            } else {\r\n                fail(null, data.reason);\r\n            }\r\n        }, function(e) {\r\n            fail(e, null);\r\n        });\r\n    },\r\n    installApiKeys: function(success, fail) {\r\n        CAPIWS.apikey(EIMZOClient.API_KEYS, function(event, data) {\r\n            if (data.success) {\r\n                success();\r\n            } else {\r\n                fail(null, data.reason);\r\n            }\r\n        }, function(e) {\r\n            fail(e, null);\r\n        });\r\n    },\r\n    listAllUserKeys: function(itemIdGen, itemUiGen, success, fail) {\r\n        var items = [];\r\n        var errors = [];\r\n        if (!EIMZOClient.NEW_API) {\r\n            EIMZOClient._findCertKeys(itemIdGen, itemUiGen, items, errors, function(firstItmId) {\r\n                EIMZOClient._findPfxs(itemIdGen, itemUiGen, items, errors, function(firstItmId2) {\r\n                    if (items.length === 0 && errors.length > 0) {\r\n                        fail(errors[0].e, errors[0].r);\r\n                    } else {\r\n                        var firstId = null;\r\n                        if (items.length === 1) {\r\n                            if (firstItmId) {\r\n                                firstId = firstItmId;\r\n                            } else if (firstItmId2) {\r\n                                firstId = firstItmId2;\r\n                            }\r\n                        }\r\n                        success(items, firstId);\r\n                    }\r\n                });\r\n            });\r\n        } else {\r\n            EIMZOClient._findCertKeys2(itemIdGen, itemUiGen, items, errors, function(firstItmId) {\r\n                EIMZOClient._findPfxs2(itemIdGen, itemUiGen, items, errors, function(firstItmId2) {\r\n                    EIMZOClient._findTokens2(itemIdGen, itemUiGen, items, errors, function(firstItmId3) {\r\n                        if (items.length === 0 && errors.length > 0) {\r\n                            fail(errors[0].e, errors[0].r);\r\n                        } else {\r\n                            var firstId = null;\r\n                            if (items.length === 1) {\r\n                                if (firstItmId) {\r\n                                    firstId = firstItmId;\r\n                                } else if (firstItmId2) {\r\n                                    firstId = firstItmId2;\r\n                                } else if (firstItmId3) {\r\n                                    firstId = firstItmId3;\r\n                                }\r\n                            }\r\n                            success(items, firstId);\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    },\r\n    loadKey: function(itemObject, success, fail, verifyPassword) {\r\n        if (itemObject) {\r\n            var vo = itemObject;\r\n            if (vo.type === \"certkey\") {\r\n                CAPIWS.callFunction({ plugin: \"certkey\", name: \"load_key\", arguments: [vo.disk, vo.path, vo.name, vo.serialNumber] }, function(event, data) {\r\n                    if (data.success) {\r\n                        var id = data.keyId;\r\n                        success(id);\r\n                    } else {\r\n                        fail(null, data.reason);\r\n                    }\r\n                }, function(e) {\r\n                    fail(e, null);\r\n                });\r\n            } else if (vo.type === \"pfx\") {\r\n                CAPIWS.callFunction({ plugin: \"pfx\", name: \"load_key\", arguments: [vo.disk, vo.path, vo.name, vo.alias] }, function(event, data) {\r\n                    if (data.success) {\r\n                        var id = data.keyId;\r\n                        if (verifyPassword) {\r\n                            CAPIWS.callFunction({ name: \"verify_password\", plugin: \"pfx\", arguments: [id] }, function(event, data) {\r\n                                if (data.success) {\r\n                                    success(id);\r\n                                } else {\r\n                                    fail(null, data.reason);\r\n                                }\r\n                            }, function(e) {\r\n                                fail(e, null);\r\n                            });\r\n                        } else {\r\n                            success(id);\r\n                        }\r\n                    } else {\r\n                        fail(null, data.reason);\r\n                    }\r\n                }, function(e) {\r\n                    fail(e, null);\r\n                });\r\n            } else if (vo.type === \"ftjc\") {\r\n                CAPIWS.callFunction({ plugin: \"ftjc\", name: \"load_key\", arguments: [vo.cardUID] }, function(event, data) {\r\n                    if (data.success) {\r\n                        var id = data.keyId;\r\n                        if (verifyPassword) {\r\n                            CAPIWS.callFunction({ plugin: \"ftjc\", name: \"verify_pin\", arguments: [id, '1'] }, function(event, data) {\r\n                                if (data.success) {\r\n                                    success(id);\r\n                                } else {\r\n                                    fail(null, data.reason);\r\n                                }\r\n                            }, function(e) {\r\n                                fail(e, null);\r\n                            });\r\n                        } else {\r\n                            success(id);\r\n                        }\r\n                    } else {\r\n                        fail(null, data.reason);\r\n                    }\r\n                }, function(e) {\r\n                    fail(e, null);\r\n                });\r\n            }\r\n        }\r\n    },\r\n    changeKeyPassword: function(itemObject, success, fail) {\r\n        if (itemObject) {\r\n            var vo = itemObject;\r\n            if (vo.type === \"pfx\") {\r\n                CAPIWS.callFunction({ plugin: \"pfx\", name: \"load_key\", arguments: [vo.disk, vo.path, vo.name, vo.alias] }, function(event, data) {\r\n                    if (data.success) {\r\n                        var id = data.keyId;\r\n                        CAPIWS.callFunction({ name: \"change_password\", plugin: \"pfx\", arguments: [id] }, function(event, data) {\r\n                            if (data.success) {\r\n                                success();\r\n                            } else {\r\n                                fail(null, data.reason);\r\n                            }\r\n                        }, function(e) {\r\n                            fail(e, null);\r\n                        });\r\n                    } else {\r\n                        fail(null, data.reason);\r\n                    }\r\n                }, function(e) {\r\n                    fail(e, null);\r\n                });\r\n            } else if (vo.type === \"ftjc\") {\r\n                CAPIWS.callFunction({ plugin: \"ftjc\", name: \"load_key\", arguments: [vo.cardUID] }, function(event, data) {\r\n                    if (data.success) {\r\n                        var id = data.keyId;\r\n                        CAPIWS.callFunction({ name: \"change_pin\", plugin: \"ftjc\", arguments: [id, '1'] }, function(event, data) {\r\n                            if (data.success) {\r\n                                success();\r\n                            } else {\r\n                                fail(null, data.reason);\r\n                            }\r\n                        }, function(e) {\r\n                            fail(e, null);\r\n                        });\r\n                    } else {\r\n                        fail(null, data.reason);\r\n                    }\r\n                }, function(e) {\r\n                    fail(e, null);\r\n                });\r\n            }\r\n        }\r\n    },\r\n    createPkcs7: function(id, data, timestamper, success, fail) {\r\n        CAPIWS.callFunction({ plugin: \"pkcs7\", name: \"create_pkcs7\", arguments: [btoa(unescape(encodeURIComponent(data))), id, 'no'] }, function(event, data) {\r\n            if (data.success) {\r\n                var pkcs7 = data.pkcs7_64;\r\n                if (timestamper) {\r\n                    var sn = data.signer_serial_number;\r\n                    timestamper(data.signature_hex, function(tst) {\r\n                        CAPIWS.callFunction({ plugin: \"pkcs7\", name: \"attach_timestamp_token_pkcs7\", arguments: [pkcs7, sn, tst] }, function(event, data) {\r\n                            if (data.success) {\r\n                                var pkcs7tst = data.pkcs7_64;\r\n                                success(pkcs7tst);\r\n                            } else {\r\n                                fail(null, data.reason);\r\n                            }\r\n                        }, function(e) {\r\n                            fail(e, null);\r\n                        });\r\n                    }, fail);\r\n                } else {\r\n                    success(pkcs7);\r\n                }\r\n            } else {\r\n                fail(null, data.reason);\r\n            }\r\n        }, function(e) {\r\n            fail(e, null);\r\n        });\r\n    },\r\n    appendPkcs7Attached: function(id, data, timestamper, success, fail) {\r\n        CAPIWS.callFunction({ plugin: \"pkcs7\", name: \"append_pkcs7_attached\", arguments: [data, id] }, function(event, data) {\r\n            if (data.success) {\r\n                var pkcs7 = data.pkcs7_64;\r\n                if (timestamper) {\r\n                    var sn = data.signer_serial_number;\r\n                    timestamper(data.signature_hex, function(tst) {\r\n                        CAPIWS.callFunction({ plugin: \"pkcs7\", name: \"attach_timestamp_token_pkcs7\", arguments: [pkcs7, sn, tst] }, function(event, data) {\r\n                            if (data.success) {\r\n                                var pkcs7tst = data.pkcs7_64;\r\n                                success(pkcs7tst);\r\n                            } else {\r\n                                fail(null, data.reason);\r\n                            }\r\n                        }, function(e) {\r\n                            fail(e, null);\r\n                        });\r\n                    }, fail);\r\n                } else {\r\n                    success(pkcs7);\r\n                }\r\n            } else {\r\n                fail(null, data.reason);\r\n            }\r\n        }, function(e) {\r\n            fail(e, null);\r\n        });\r\n    },\r\n    _getX500Val: function(s, f) {\r\n        var res = s.splitKeep(/,[A-Z]+=/g, true);\r\n        for (var i in res) {\r\n            var n = res[i].search((i > 0 ? \",\" : \"\") + f + \"=\");\r\n            if (n !== -1) {\r\n                return res[i].slice(n + f.length + 1 + (i > 0 ? 1 : 0));\r\n            }\r\n        }\r\n        return \"\";\r\n    },\r\n    _findCertKeyCertificates: function(itemIdGen, itemUiGen, items, errors, allDisks, diskIndex, params, callback) {\r\n        if (parseInt(diskIndex) + 1 > allDisks.length) {\r\n            callback(params);\r\n            return;\r\n        }\r\n        CAPIWS.callFunction({ plugin: \"certkey\", name: \"list_certificates\", arguments: [allDisks[diskIndex]] }, function(event, data) {\r\n            if (data.success) {\r\n                for (var rec in data.certificates) {\r\n                    var el = data.certificates[rec];\r\n                    var vo = {\r\n                        disk: el.disk,\r\n                        path: el.path,\r\n                        name: el.name,\r\n                        serialNumber: el.serialNumber,\r\n                        subjectName: el.subjectName,\r\n                        validFrom: new Date(el.validFrom),\r\n                        validTo: new Date(el.validTo),\r\n                        issuerName: el.issuerName,\r\n                        publicKeyAlgName: el.publicKeyAlgName,\r\n                        CN: EIMZOClient._getX500Val(el.subjectName, \"CN\"),\r\n                        TIN: EIMZOClient._getX500Val(el.subjectName, \"INITIALS\"),\r\n                        O: EIMZOClient._getX500Val(el.subjectName, \"O\"),\r\n                        T: EIMZOClient._getX500Val(el.subjectName, \"T\"),\r\n                        type: 'certkey'\r\n                    };\r\n                    if (!vo.TIN)\r\n                        continue;\r\n                    var itmkey = itemIdGen(vo, rec);\r\n                    if (params.length === 0) {\r\n                        params.push(itmkey);\r\n                    }\r\n                    var itm = itemUiGen(itmkey, vo);\r\n                    items.push(itm);\r\n                }\r\n            } else {\r\n                errors.push({ r: data.reason });\r\n            }\r\n            EIMZOClient._findCertKeyCertificates(itemIdGen, itemUiGen, items, errors, allDisks, parseInt(diskIndex) + 1, params, callback);\r\n        }, function(e) {\r\n            errors.push({ e: e });\r\n            EIMZOClient._findCertKeyCertificates(itemIdGen, itemUiGen, items, errors, allDisks, parseInt(diskIndex) + 1, params, callback);\r\n        });\r\n    },\r\n    _findCertKeys: function(itemIdGen, itemUiGen, items, errors, callback) {\r\n        var allDisks = [];\r\n        CAPIWS.callFunction({ plugin: \"certkey\", name: \"list_disks\" }, function(event, data) {\r\n            if (data.success) {\r\n                for (var rec in data.disks) {\r\n                    allDisks.push(data.disks[rec]);\r\n                    if (parseInt(rec) + 1 >= data.disks.length) {\r\n                        var params = [];\r\n                        EIMZOClient._findCertKeyCertificates(itemIdGen, itemUiGen, items, errors, allDisks, 0, params, function(params) {\r\n                            callback(params[0]);\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                errors.push({ r: data.reason });\r\n            }\r\n        }, function(e) {\r\n            errors.push({ e: e });\r\n            callback();\r\n        });\r\n    },\r\n    _findPfxCertificates: function(itemIdGen, itemUiGen, items, errors, allDisks, diskIndex, params, callback) {\r\n        if (parseInt(diskIndex) + 1 > allDisks.length) {\r\n            callback(params);\r\n            return;\r\n        }\r\n        CAPIWS.callFunction({ plugin: \"pfx\", name: \"list_certificates\", arguments: [allDisks[diskIndex]] }, function(event, data) {\r\n            if (data.success) {\r\n                for (var rec in data.certificates) {\r\n                    var el = data.certificates[rec];\r\n                    var x500name_ex = el.alias.toUpperCase();\r\n                    x500name_ex = x500name_ex.replace(\"1.2.860.3.16.1.1=\", \"INN=\");\r\n                    x500name_ex = x500name_ex.replace(\"1.2.860.3.16.1.2=\", \"PINFL=\");\r\n                    var vo = {\r\n                        disk: el.disk,\r\n                        path: el.path,\r\n                        name: el.name,\r\n                        alias: el.alias,\r\n                        serialNumber: EIMZOClient._getX500Val(x500name_ex, \"SERIALNUMBER\"),\r\n                        validFrom: new Date(EIMZOClient._getX500Val(x500name_ex, \"VALIDFROM\").replace(/\\./g, \"-\").replace(\" \", \"T\")),\r\n                        validTo: new Date(EIMZOClient._getX500Val(x500name_ex, \"VALIDTO\").replace(/\\./g, \"-\").replace(\" \", \"T\")),\r\n                        CN: EIMZOClient._getX500Val(x500name_ex, \"CN\"),\r\n                        TIN: (EIMZOClient._getX500Val(x500name_ex, \"INN\") ? EIMZOClient._getX500Val(x500name_ex, \"INN\") : EIMZOClient._getX500Val(x500name_ex, \"UID\")),\r\n                        UID: EIMZOClient._getX500Val(x500name_ex, \"UID\"),\r\n                        O: EIMZOClient._getX500Val(x500name_ex, \"O\"),\r\n                        T: EIMZOClient._getX500Val(x500name_ex, \"T\"),\r\n                        type: 'pfx'\r\n                    };\r\n                    if (!vo.TIN)\r\n                        continue;\r\n                    var itmkey = itemIdGen(vo, rec);\r\n                    if (params.length === 0) {\r\n                        params.push(itmkey);\r\n                    }\r\n                    var itm = itemUiGen(itmkey, vo);\r\n                    items.push(itm);\r\n                }\r\n            } else {\r\n                errors.push({ r: data.reason });\r\n            }\r\n            EIMZOClient._findPfxCertificates(itemIdGen, itemUiGen, items, errors, allDisks, parseInt(diskIndex) + 1, params, callback);\r\n        }, function(e) {\r\n            errors.push({ e: e });\r\n            EIMZOClient._findPfxCertificates(itemIdGen, itemUiGen, items, errors, allDisks, parseInt(diskIndex) + 1, params, callback);\r\n        });\r\n    },\r\n    _findPfxs: function(itemIdGen, itemUiGen, items, errors, callback) {\r\n        var allDisks = [];\r\n        CAPIWS.callFunction({ plugin: \"pfx\", name: \"list_disks\" }, function(event, data) {\r\n            if (data.success) {\r\n                var disks = data.disks;\r\n                for (var rec in disks) {\r\n                    allDisks.push(data.disks[rec]);\r\n                    if (parseInt(rec) + 1 >= data.disks.length) {\r\n                        var params = [];\r\n                        EIMZOClient._findPfxCertificates(itemIdGen, itemUiGen, items, errors, allDisks, 0, params, function(params) {\r\n                            callback(params[0]);\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                errors.push({ r: data.reason });\r\n            }\r\n        }, function(e) {\r\n            errors.push({ e: e });\r\n            callback();\r\n        });\r\n    },\r\n    _findCertKeys2: function(itemIdGen, itemUiGen, items, errors, callback) {\r\n        var itmkey0;\r\n        CAPIWS.callFunction({ plugin: \"certkey\", name: \"list_all_certificates\" }, function(event, data) {\r\n            if (data.success) {\r\n                for (var rec in data.certificates) {\r\n                    var el = data.certificates[rec];\r\n                    var vo = {\r\n                        disk: el.disk,\r\n                        path: el.path,\r\n                        name: el.name,\r\n                        serialNumber: el.serialNumber,\r\n                        subjectName: el.subjectName,\r\n                        validFrom: new Date(el.validFrom),\r\n                        validTo: new Date(el.validTo),\r\n                        issuerName: el.issuerName,\r\n                        publicKeyAlgName: el.publicKeyAlgName,\r\n                        CN: EIMZOClient._getX500Val(el.subjectName, \"CN\"),\r\n                        TIN: EIMZOClient._getX500Val(el.subjectName, \"INITIALS\"),\r\n                        O: EIMZOClient._getX500Val(el.subjectName, \"O\"),\r\n                        T: EIMZOClient._getX500Val(el.subjectName, \"T\"),\r\n                        type: 'certkey'\r\n                    };\r\n                    if (!vo.TIN)\r\n                        continue;\r\n                    var itmkey = itemIdGen(vo, rec);\r\n                    if (!itmkey0) {\r\n                        itmkey0 = itmkey;\r\n                    }\r\n                    var itm = itemUiGen(itmkey, vo);\r\n                    items.push(itm);\r\n                }\r\n            } else {\r\n                errors.push({ r: data.reason });\r\n            }\r\n            callback(itmkey0);\r\n        }, function(e) {\r\n            errors.push({ e: e });\r\n            callback(itmkey0);\r\n        });\r\n    },\r\n    _findPfxs2: function(itemIdGen, itemUiGen, items, errors, callback) {\r\n        var itmkey0;\r\n        CAPIWS.callFunction({ plugin: \"pfx\", name: \"list_all_certificates\" }, function(event, data) {\r\n            if (data.success) {\r\n                for (var rec in data.certificates) {\r\n                    var el = data.certificates[rec];\r\n                    var x500name_ex = el.alias.toUpperCase();\r\n                    x500name_ex = x500name_ex.replace(\"1.2.860.3.16.1.1=\", \"INN=\");\r\n                    x500name_ex = x500name_ex.replace(\"1.2.860.3.16.1.2=\", \"PINFL=\");\r\n                    var vo = {\r\n                        disk: el.disk,\r\n                        path: el.path,\r\n                        name: el.name,\r\n                        alias: el.alias,\r\n                        serialNumber: EIMZOClient._getX500Val(x500name_ex, \"SERIALNUMBER\"),\r\n                        validFrom: new Date(EIMZOClient._getX500Val(x500name_ex, \"VALIDFROM\").replace(/\\./g, \"-\").replace(\" \", \"T\")),\r\n                        validTo: new Date(EIMZOClient._getX500Val(x500name_ex, \"VALIDTO\").replace(/\\./g, \"-\").replace(\" \", \"T\")),\r\n                        CN: EIMZOClient._getX500Val(x500name_ex, \"CN\"),\r\n                        TIN: (EIMZOClient._getX500Val(x500name_ex, \"INN\") ? EIMZOClient._getX500Val(x500name_ex, \"INN\") : EIMZOClient._getX500Val(x500name_ex, \"UID\")),\r\n                        UID: EIMZOClient._getX500Val(x500name_ex, \"UID\"),\r\n                        O: EIMZOClient._getX500Val(x500name_ex, \"O\"),\r\n                        T: EIMZOClient._getX500Val(x500name_ex, \"T\"),\r\n                        type: 'pfx'\r\n                    };\r\n                    if (!vo.TIN)\r\n                        continue;\r\n                    var itmkey = itemIdGen(vo, rec);\r\n                    if (!itmkey0) {\r\n                        itmkey0 = itmkey;\r\n                    }\r\n                    var itm = itemUiGen(itmkey, vo);\r\n                    items.push(itm);\r\n                }\r\n            } else {\r\n                errors.push({ r: data.reason });\r\n            }\r\n            callback(itmkey0);\r\n        }, function(e) {\r\n            errors.push({ e: e });\r\n            callback(itmkey0);\r\n        });\r\n    },\r\n    _findTokens2: function(itemIdGen, itemUiGen, items, errors, callback) {\r\n        var itmkey0;\r\n        CAPIWS.callFunction({ plugin: \"ftjc\", name: \"list_all_keys\", arguments: [''] }, function(event, data) {\r\n            if (data.success) {\r\n                for (var rec in data.tokens) {\r\n                    var el = data.tokens[rec];\r\n                    var x500name_ex = el.info.toUpperCase();\r\n                    x500name_ex = x500name_ex.replace(\"1.2.860.3.16.1.1=\", \"INN=\");\r\n                    x500name_ex = x500name_ex.replace(\"1.2.860.3.16.1.2=\", \"PINFL=\");\r\n                    var vo = {\r\n                        cardUID: el.cardUID,\r\n                        statusInfo: el.statusInfo,\r\n                        ownerName: el.ownerName,\r\n                        info: el.info,\r\n                        serialNumber: EIMZOClient._getX500Val(x500name_ex, \"SERIALNUMBER\"),\r\n                        validFrom: new Date(EIMZOClient._getX500Val(x500name_ex, \"VALIDFROM\")),\r\n                        validTo: new Date(EIMZOClient._getX500Val(x500name_ex, \"VALIDTO\")),\r\n                        CN: EIMZOClient._getX500Val(x500name_ex, \"CN\"),\r\n                        TIN: (EIMZOClient._getX500Val(x500name_ex, \"INN\") ? EIMZOClient._getX500Val(x500name_ex, \"INN\") : EIMZOClient._getX500Val(x500name_ex, \"UID\")),\r\n                        UID: EIMZOClient._getX500Val(x500name_ex, \"UID\"),\r\n                        O: EIMZOClient._getX500Val(x500name_ex, \"O\"),\r\n                        T: EIMZOClient._getX500Val(x500name_ex, \"T\"),\r\n                        type: 'ftjc'\r\n                    };\r\n                    if (!vo.TIN)\r\n                        continue;\r\n                    var itmkey = itemIdGen(vo, rec);\r\n                    if (!itmkey0) {\r\n                        itmkey0 = itmkey;\r\n                    }\r\n                    var itm = itemUiGen(itmkey, vo);\r\n                    items.push(itm);\r\n                }\r\n            } else {\r\n                errors.push({ r: data.reason });\r\n            }\r\n            callback(itmkey0);\r\n        }, function(e) {\r\n            errors.push({ e: e });\r\n            callback(itmkey0);\r\n        });\r\n    }\r\n};","C:\\HISOBXONA\\on_doc\\src\\cabinet\\aferta-popup\\aferta-popup.component.jsx",[],["339","340"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\payme-form\\payme-form.component.jsx",[],["341","342"],"C:\\HISOBXONA\\on_doc\\src\\translate.js",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\home\\home.component.jsx",["343","344","345","346","347"],"import React, { useState, useEffect } from 'react';\r\nimport { Tabs } from 'antd';\r\nimport './home.style.scss';\r\nimport DynaGrid from '../../../components/dyna-grid/dyna-grid.component';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { get_home_config } from '../../../utils/home.config.provider';\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst HomePage = ({ doc, hideTabs, addParams, customButton })=> {\r\n\r\n    const {t} = useTranslation();\r\n\r\n    const tabs = {\r\n        1: \"in\",\r\n        2: \"out\",\r\n        3: \"saved\",\r\n        4: \"all\"\r\n    }\r\n\r\n    const { title, createTitle, createUrl, gridSourceUrl, gridConfig } = get_home_config(doc);\r\n\r\n    const [activeTab, setActiveTab] = useState(1);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    return (\r\n        <div className=\"factura-home-page-container\">\r\n            <div className=\"factura-home-sub-con\">\r\n                <div className=\"factura-home-title\">\r\n                    <h2>{ title }</h2>\r\n                    {\r\n                        customButton \r\n                        ?customButton\r\n                        : <Link to={createUrl}><span>{createTitle}</span></Link>\r\n                    }\r\n                </div>\r\n                {\r\n                    hideTabs\r\n                    ? null\r\n                    : <div className=\"factura-home-list-tabs\">\r\n                    <div className=\"factura-home-list-tab-con\">\r\n                        <div onClick={()=>setActiveTab(1)} className={`status-tab-bar ${activeTab===1 ? 'active-tab' : ''}`}>\r\n                            {t(\"Kiruvchi\")}\r\n                        </div> \r\n                        <div onClick={()=>setActiveTab(2)} className={`status-tab-bar ${activeTab===2 ? 'active-tab' : ''}`}>\r\n                            {t(\"Chiquvchi\")}\r\n                        </div>\r\n                        <div onClick={()=>setActiveTab(3)} className={`status-tab-bar ${activeTab===3 ? 'active-tab' : ''}`}>\r\n                            {t(\"Saqlangan\")}\r\n                        </div>\r\n                        <div onClick={()=>setActiveTab(4)} className={`status-tab-bar ${activeTab===4 ? 'active-tab' : ''}`}>\r\n                            {t(\"Barchasi\")}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                }\r\n                \r\n                \r\n                <div>\r\n                    <DynaGrid   \r\n                        config={{ ...gridConfig, dataSourcePath: `${gridSourceUrl}?tab=${tabs[activeTab]}&${addParams ? addParams.map(p=>`${p.name}=${p.value}`): \"\"}`}}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","C:\\HISOBXONA\\on_doc\\src\\cabinet\\act\\index.router.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\components\\admin-card\\admin-card.component.jsx",["348","349","350"],"import React from 'react';\r\nimport './admin-card.style.scss';\r\nimport { Badge, Card } from 'antd';\r\nimport {PlusCircleTwoTone} from '@ant-design/icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AdminCard = ({ data })=>{\r\n    const {title, icon, color, count} = data\r\n    return(\r\n    <Card className=\"admin-card-container\" >\r\n        <div className={`admin-card-icon-field admin-card-${color}`} ><FontAwesomeIcon icon={icon} className=\"admin-card-icon\"/></div>\r\n        <div className=\"admin-card-title\">{title}</div>\r\n        <div className=\"admin-card-content\">{count}</div>\r\n        \r\n    </Card>\r\n)}\r\n\r\nexport default AdminCard;","C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\person-fetch\\person-fetch.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\admin\\notification\\form.component.jsx",["351"],"import { Col, Form, Input, Row, Select, Button, Switch, message } from 'antd'\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nconst { Option } = Select;\r\n\r\nconst NotificationForm = ({ match }) => {\r\n\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(false);\r\n    const { notificationId } = match.params;\r\n    \r\n    useEffect(()=>{\r\n        if(notificationId){\r\n            axios({\r\n                url:\"api/v1/notifications/\"+notificationId,\r\n                method: \"get\"\r\n            })\r\n            .then(res=>{\r\n                form.setFieldsValue(res.data)\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n    },[])\r\n    \r\n    const handleSubmit = values => {\r\n\r\n        setLoading(true)\r\n        axios({\r\n            method:  notificationId ? \"patch\" : \"post\",\r\n            data: values,\r\n            url: notificationId ? \"/api/v1/notifications/\"+notificationId  : \"/api/v1/notifications\" \r\n        }).then(res=>{\r\n            if(res.data.ok){\r\n                message.success(\"Notification saqlandi!\");\r\n            }else{\r\n                message.error(\"Notification saqlashda xatolik!\");\r\n            }\r\n            setLoading(false);\r\n        }).catch(err=>{\r\n            console.log(err)\r\n            message.error(\"Notification saqalashda xatolik!\");\r\n            setLoading(false);\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{marginTop: 20}}>\r\n            <Form\r\n                form={form}\r\n                onFinish={handleSubmit}\r\n                scrollToFirstError\r\n            >\r\n                <div className=\"factura-data-sheet-container\">\r\n                <h3>Notification yaratish</h3>\r\n                <Row justify=\"space-between\">\r\n                    <Col md={11}>\r\n                        <Form.Item>\r\n                            <Form.Item\r\n                                rules={[{ required: true }]}\r\n                                key=\"dyna-form-facutura-no\"\r\n                                name=\"title_uz\">\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    />\r\n                            </Form.Item>\r\n                            <span className=\"custom-input-label-1\">Notification sarlavhasi (uz)</span>\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Form.Item\r\n                                rules={[{ required: true }]}\r\n                                key=\"dyna-form-facutura-no\"\r\n                                name=\"title_ru\">\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    />\r\n                            </Form.Item>\r\n                            <span className=\"custom-input-label-1\">Notification sarlavhasi (ru)</span>\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Form.Item\r\n                                rules={[{ required: true }]}\r\n                                key=\"dyna-form-facutura-no\"\r\n                                name=\"title_en\">\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    />\r\n                            </Form.Item>\r\n                            <span className=\"custom-input-label-1\">Notification sarlavhasi (en)</span>\r\n                        </Form.Item>\r\n                        \r\n                        <Form.Item>\r\n                            <Form.Item\r\n                                rules={[{ required: true }]}\r\n                                key=\"dyna-form-facutura-no\"\r\n                                name=\"importance\">\r\n                                <Select\r\n                                    bordered={false}\r\n                                    size=\"large\"\r\n                                    name=\"importance\"\r\n                                    defaultActiveFirstOption\r\n                                >\r\n                                    <Option value={1}>1 - Uncha muxim emas</Option>\r\n                                    <Option value={2}>2 - Muxim emas</Option>\r\n                                    <Option value={3}>3 - Muxim</Option>\r\n                                    <Option value={4}>4 - Muximroq</Option>\r\n                                    <Option value={5}>5 - O'ta muxim</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <span className=\"custom-input-label-1\">Notification muximligi</span>\r\n                        </Form.Item>\r\n                        <Row justify=\"space-between\">\r\n                            <Col md={11}>\r\n                                <Form.Item\r\n                                    label=\"Holati\"\r\n                                    name=\"isActive\"\r\n                                    valuePropName=\"checked\"\r\n                                    rules={[{ required: true }]}\r\n                                >\r\n                                    <Switch />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col md={11}>\r\n                                <Form.Item>\r\n                                    <Button \r\n                                        loading={loading}\r\n                                        style={{width: '100%'}}\r\n                                        size=\"large\" \r\n                                        htmlType=\"submit\"\r\n                                        className=\"factra-action-btns save-btn\"\r\n                                        >Saqlash</Button>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <Form.Item\r\n                            name=\"body_uz\"\r\n                            \r\n                            rules={[{ required: true }]}\r\n                        >\r\n                            <TextArea \r\n                                placeholder=\"Body uz\"\r\n                                rows={4} size=\"large\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                        \r\n                            name=\"body_ru\"\r\n                            rules={[{ required: true }]}\r\n                        >\r\n                            <TextArea rows={4} \r\n                                placeholder=\"Body ru\"\r\n                                size=\"large\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"body_en\"\r\n                            \r\n                            rules={[{ required: true }]}\r\n                        >\r\n                            <TextArea \r\n                                placeholder=\"Body en\"\r\n                                rows={4} size=\"large\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotificationForm\r\n","C:\\HISOBXONA\\on_doc\\src\\utils\\home.config.provider.js",["352"],"import React from \"react\";\r\nimport i18n from \"../translate\";\r\n\r\nexport const get_home_config = doc => {\r\n\r\n    const t = i18n.t.bind(i18n)\r\n\r\n    switch (doc) {\r\n\r\n        case \"user-products\":\r\n            return {\r\n                title: t(\"Maxsulotlarim\"),\r\n                createTitle: t(\"Maxsulotlarni yuklash\"),\r\n                gridSourceUrl: \"/classifications/index\",\r\n                createUrl: \"/cabinet/products\",\r\n                gridConfig: {\r\n                    deleteRequestPath: 'classifications/delete',\r\n                    deleteConfirmText: t(\"Shu productni ochirilsinmi?\"),\r\n                    actions: {\r\n                        delete: true,\r\n                    },\r\n                    allColumns: [{\r\n                        title: t(\"Katalog kodi\"),\r\n                        dataIndex: 'groupCode',\r\n                        isSearchable: true,\r\n                        width: 200\r\n                    },\r\n                    {\r\n                        title: t(\"Klass kodi\"),\r\n                        dataIndex: 'classCode',\r\n                        isSearchable: true,\r\n                        width: 200\r\n                    },\r\n                    {\r\n                        title: t(\"Nomi\"),\r\n                        dataIndex: 'className',\r\n                        isSearchable: true,\r\n                        width: 300,\r\n                        \r\n\r\n                    },\r\n                    ]\r\n                }\r\n            }\r\n\r\n        case 'notification':\r\n            return {\r\n                title: \"Notifications\",\r\n                createTitle: \"Notification yaratish\",\r\n                createUrl: \"/admin/notification/create\",\r\n                gridSourceUrl: \"/api/v1/notifications\",\r\n                gridConfig: {\r\n                    deleteRequestPath: 'api/v1/notifications',\r\n                    viewActionPath: '/admin/notification/view',\r\n                    editActionPath: '/admin/notification/edit',\r\n                    deleteConfirmText: \"Shu notification ochirilsinmi?\",\r\n                    actions: {\r\n                        edit: true,\r\n                        delete: true,\r\n                        view: true\r\n                    },\r\n                    allColumns: [{\r\n                            title: \"Sarlavha\",\r\n                            dataIndex: 'title_uz',\r\n                            isSearchable: true,\r\n                            width: 300\r\n                        },\r\n                        {\r\n                            title: \"Mazmuni\",\r\n                            dataIndex: 'body_uz',\r\n                            isSearchable: true,\r\n                            width: 400\r\n                        },\r\n                        {\r\n                            title: \"Muhimligi\",\r\n                            dataIndex: 'importance',\r\n                            isFilterable: true,\r\n                            width: 100,\r\n                            filters: [\r\n                                { value: 1, text: \"1 - Uncha muxim emas\" },\r\n                                { value: 2, text: \"2 - Muxim emas\" },\r\n                                { value: 3, text: \"3 - Muxim\" },\r\n                                { value: 4, text: \"4 - Muximroq\" },\r\n                                { value: 5, text: \"5 - O'ta muxim\" },\r\n                            ]\r\n\r\n                        },\r\n                        {\r\n                            title: \"Holati\",\r\n                            dataIndex: \"isActive\",\r\n                            isFilterable: true,\r\n                            width: 100,\r\n                            filters: [\r\n                                { value: 0, text: \"Aktiv emas\" },\r\n                                { value: 1, text: \"Aktiv\" },\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n\r\n        case 'act':\r\n            return {\r\n                title: \"Aktlar\",\r\n                createTitle: \"Akt yaratish\",\r\n                createUrl: \"/cabinet/act/create\",\r\n                gridSourceUrl: \"/api/v1/acts\",\r\n                gridConfig: {\r\n                    deleteRequestPath: 'api/v1/atcs',\r\n                    viewActionPath: '/cabinet/act/view',\r\n                    editActionPath: '/cabinet/act/edit',\r\n                    deleteConfirmText: \"Shu akt ochirilsinmi?\",\r\n                    actions: {\r\n                        edit: true,\r\n                        delete: true,\r\n                        view: true\r\n                    },\r\n                    allColumns: [{\r\n                            title: \"Akt №\",\r\n                            dataIndex: 'actNo',\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: \"Kontrkt №\",\r\n                            dataIndex: 'contractNo',\r\n                            isSearchable: true,\r\n                            width: 100\r\n                        },\r\n                        {\r\n                            title: \"Oluvchi\",\r\n                            dataIndex: 'buyerName',\r\n                            isSearchable: true,\r\n                            width: 150\r\n                        },\r\n                        {\r\n                            title: \"Oluvchi STIR\",\r\n                            dataIndex: \"buyerTin\",\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: \"Sotuvchi\",\r\n                            dataIndex: 'sellerName',\r\n                            isSearchable: true,\r\n                            width: 150\r\n                        },\r\n                        {\r\n                            title: \"Sotuvchi STIR\",\r\n                            dataIndex: \"sellerTin\",\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: \"Holati\",\r\n                            dataIndex: 'status',\r\n                            isFilterable: true,\r\n                            filters: [\r\n                                { value: 1, text: \"1-Saqlangan\" },\r\n                                { value: 2, text: \"2-Imzo kutilmoqda\" },\r\n                                { value: 3, text: \"3-Jo'natilgan\" },\r\n                                { value: 4, text: \"4-Xatolik yuzbergan\" },\r\n                                { value: 5, text: \"5-Qaytarib yuborilgan\" },\r\n                                { value: 6, text: \"6-Qabul qilingan\" },\r\n                                { value: 7, text: \"7-Muaffaqiyatli\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            title: 'Yaratilgan sanasi',\r\n                            dataIndex: \"created_at\",\r\n                            dataType: 'date',\r\n                        },\r\n                    ]\r\n                }\r\n            }\r\n\r\n        case 'contract':\r\n            return {\r\n                title: \"Shartnomalar\",\r\n                createTitle: \"Shartnoma yaratish\",\r\n                createUrl: \"/cabinet/contract/create\",\r\n                gridSourceUrl: \"/api/v1/contracts\",\r\n                gridConfig: {\r\n                    deleteRequestPath: 'api/v1/contracts',\r\n                    viewActionPath: '/cabinet/contracts/view',\r\n                    editActionPath: '/cabinet/contract/edit',\r\n                    deleteConfirmText: \"Shu kontrakt ochirilsinmi?\",\r\n                    actions: {\r\n                        edit: true,\r\n                        delete: true,\r\n                        view: true\r\n                    },\r\n                    allColumns: [{\r\n                            title: \"Kontrkt №\",\r\n                            dataIndex: 'contractNo',\r\n                            isSearchable: true,\r\n                            width: 100\r\n                        },\r\n                        {\r\n                            title: \"Oluvchi\",\r\n                            dataIndex: 'buyerName',\r\n                            isSearchable: true,\r\n                            width: 150\r\n                        },\r\n                        {\r\n                            title: \"Oluvchi STIR\",\r\n                            dataIndex: \"buyerTin\",\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: \"Sotuvchi\",\r\n                            dataIndex: 'sellerName',\r\n                            isSearchable: true,\r\n                            width: 150\r\n                        },\r\n                        {\r\n                            title: \"Sotuvchi STIR\",\r\n                            dataIndex: \"sellerTin\",\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: \"Holati\",\r\n                            dataIndex: 'status',\r\n                            isFilterable: true,\r\n                            filters: [\r\n                                { value: 1, text: \"1-Saqlangan\" },\r\n                                { value: 2, text: \"2-Imzo kutilmoqda\" },\r\n                                { value: 3, text: \"3-Jo'natilgan\" },\r\n                                { value: 4, text: \"4-Xatolik yuzbergan\" },\r\n                                { value: 5, text: \"5-Qaytarib yuborilgan\" },\r\n                                { value: 6, text: \"6-Qabul qilingan\" },\r\n                                { value: 7, text: \"7-Muaffaqiyatli\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            title: 'Yaratilgan sanasi',\r\n                            dataIndex: \"created_at\",\r\n                            dataType: 'date',\r\n                        },\r\n                    ]\r\n                }\r\n            }\r\n\r\n        case \"empowerment\":\r\n            return {\r\n                title: \"Ishonchnomalar\",\r\n                createTitle: \"Ishonchnoma yaratish\",\r\n                createUrl: \"/cabinet/empowerment/create\",\r\n                gridSourceUrl: \"/api/v1/empowerments\",\r\n                gridConfig: {\r\n                    deleteRequestPath: 'api/v1/empowerments',\r\n                    viewActionPath: '/cabinet/empowerment/view',\r\n                    editActionPath: '/cabinet/empowerment/edit',\r\n                    deleteConfirmText: \"Shu ishonchnoma ochirilsinmi?\",\r\n                    actions: {\r\n                        edit: true,\r\n                        delete: true,\r\n                        view: true\r\n                    },\r\n                    allColumns: [{\r\n                            title: \"Ishonchnoma №\",\r\n                            dataIndex: 'empowermentNo',\r\n                            isSearchable: true,\r\n                            width: 100\r\n                        },\r\n                        {\r\n                            title: \"Kontrakt №\",\r\n                            dataIndex: 'contractNo',\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: \"Oluvchi\",\r\n                            dataIndex: 'buyerName',\r\n                            isSearchable: true,\r\n                            width: 150\r\n                        },\r\n                        {\r\n                            title: \"Oluvchi STIR\",\r\n                            dataIndex: \"buyerTin\",\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: \"Sotuvchi\",\r\n                            dataIndex: 'sellerName',\r\n                            isSearchable: true,\r\n                            width: 150\r\n                        },\r\n                        {\r\n                            title: \"Sotuvchi STIR\",\r\n                            dataIndex: \"sellerTin\",\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: \"Holati\",\r\n                            dataIndex: 'status',\r\n                            isFilterable: true,\r\n                            filters: [\r\n                                { value: 1, text: \"1-Saqlangan\" },\r\n                                { value: 2, text: \"2-Imzo kutilmoqda\" },\r\n                                { value: 3, text: \"3-Jo'natilgan\" },\r\n                                { value: 4, text: \"4-Xatolik yuzbergan\" },\r\n                                { value: 5, text: \"5-Qaytarib yuborilgan\" },\r\n                                { value: 6, text: \"6-Qabul qilingan\" },\r\n                                { value: 7, text: \"7-Muaffaqiyatli\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            title: 'Yaratilgan sanasi',\r\n                            dataIndex: \"created_at\",\r\n                            dataType: 'date',\r\n                        },\r\n                    ]\r\n                }\r\n            }\r\n\r\n        case 'tty':\r\n            return {\r\n                title: \"Tovar transport yo'lxati\",\r\n                createTitle: \"TTY yaratish\",\r\n                createUrl: \"/cabinet/tty/create\",\r\n                gridSourceUrl: \"/api/v1/ttys\",\r\n                gridConfig: {\r\n                    deleteRequestPath: 'api/v1/ttys',\r\n                    viewActionPath: '/cabinet/tty/view',\r\n                    editActionPath: '/cabinet/tty/edit',\r\n                    deleteConfirmText: \"Shu TTY ochirilsinmi?\",\r\n                    actions: {\r\n                        edit: true,\r\n                        delete: true,\r\n                        view: true\r\n                    },\r\n                    allColumns: [{\r\n                            title: \"TTY №\",\r\n                            dataIndex: 'wayBillNo',\r\n                            isSearchable: true,\r\n                            width: 100\r\n                        },\r\n                        {\r\n                            title: \"Oluvchi\",\r\n                            dataIndex: 'buyerName',\r\n                            isSearchable: true,\r\n                            width: 150\r\n                        },\r\n                        {\r\n                            title: \"Oluvchi STIR\",\r\n                            dataIndex: \"buyerTin\",\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: \"Sotuvchi\",\r\n                            dataIndex: 'sellerName',\r\n                            isSearchable: true,\r\n                            width: 150\r\n                        },\r\n                        {\r\n                            title: \"Sotuvchi STIR\",\r\n                            dataIndex: \"sellerTin\",\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: \"Holati\",\r\n                            dataIndex: 'state',\r\n                            isFilterable: true,\r\n                            filters: [\r\n                                { value: 1, text: \"1-Saqlangan\" },\r\n                                { value: 2, text: \"2-Imzo kutilmoqda\" },\r\n                                { value: 3, text: \"3-Jo'natilgan\" },\r\n                                { value: 4, text: \"4-Xatolik yuzbergan\" },\r\n                                { value: 5, text: \"5-Qaytarib yuborilgan\" },\r\n                                { value: 6, text: \"6-Qabul qilingan\" },\r\n                                { value: 7, text: \"7-Muaffaqiyatli\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            title: 'Yaratilgan sanasi',\r\n                            dataIndex: \"created_at\",\r\n                            dataType: 'date',\r\n                        },\r\n                    ]\r\n                }\r\n            }\r\n\r\n\r\n        default:\r\n            return {\r\n                title: t(\"Hisob fakturalar\"),\r\n                createTitle: t(\"Faktura yaratish\"),\r\n                createUrl: \"/cabinet/factura/create\",\r\n                gridSourceUrl: \"/api/v1/facturas\",\r\n                gridConfig: {\r\n                    deleteRequestPath: 'api/v1/facturas',\r\n                    viewActionPath: '/cabinet/factura/view',\r\n                    editActionPath: '/cabinet/factura/edit',\r\n                    deleteConfirmText: t(\"Shu faktura ochirilsinmi?\"),\r\n                    actions: {\r\n                        edit: true,\r\n                        delete: true,\r\n                        view: true\r\n                    },\r\n                    allColumns: [{\r\n                            title: t(\"Faktura №\"),\r\n                            dataIndex: 'facturaNo',\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: t(\"Kontrakt №\"),\r\n                            dataIndex: 'contractNo',\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: t(\"Kontragent\"),\r\n                            dataIndex: 'buyerName',\r\n                            isSearchable: true,\r\n                            width: 150\r\n                        },\r\n                        {\r\n                            title: t(\"Kontragent\") + \" \" + t(\"STIR\"),\r\n                            dataIndex: \"buyerTin\",\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: \"Sotuvchi\",\r\n                            dataIndex: 'sellerName',\r\n                            isSearchable: true,\r\n                            width: 150\r\n                        },\r\n                        {\r\n                            title: \"Sotuvchi STIR\",\r\n                            dataIndex: \"sellerTin\",\r\n                            isSearchable: true,\r\n                        },\r\n                        {\r\n                            title: t(\"Holati\"),\r\n                            dataIndex: 'status',\r\n                            isFilterable: true,\r\n                            filters: [\r\n                                { value: 1, text: \"1-Saqlangan\" },\r\n                                { value: 2, text: \"2-Imzo kutilmoqda\" },\r\n                                { value: 3, text: \"3-Jo'natilgan\" },\r\n                                { value: 4, text: \"4-Xatolik yuzbergan\" },\r\n                                { value: 5, text: \"5-Qaytarib yuborilgan\" },\r\n                                { value: 6, text: \"6-Qabul qilingan\" },\r\n                                { value: 7, text: \"7-Muaffaqiyatli\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            title: t('Yaratilgan sana'),\r\n                            dataIndex: \"created_at\",\r\n                            dataType: 'date',\r\n                        },\r\n                    ]\r\n                }\r\n            }\r\n    }\r\n}","C:\\HISOBXONA\\on_doc\\src\\cabinet\\notifications\\notifications.component.jsx",[],["353","354"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\home\\home.component.jsx",["355","356","357"],"import { Col, Row } from 'antd';\r\nimport axios from 'axios';\r\nimport React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport AdminCard from '../../components/admin-card/admin-card.component';\r\nimport DynaGrid from '../../components/dyna-grid/dyna-grid.component';\r\nimport { selectCabinetData } from '../../redux/user/user.selector';\r\nimport './home.component.scss';\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst CabinetHome = ({ cabinetData }) => {\r\n\r\n    const {t} = useTranslation()\r\n\r\n    const [activeTab, setActiveTab] = useState(0)\r\n    const { income, outcome, rejected, saved } = cabinetData ?? {};\r\n    const TabList= {\r\n        0: t(\"Kiruvchi hujjatlar\"),\r\n        1: t(\"Chiquvchi hujjatlar\"),\r\n        2: t(\"Rad etilgan hujjatlar\"),\r\n        3: t(\"Saqlangan hujjatlar\")\r\n    }\r\n\r\n    const list_of_docs = [\r\n        {\r\n            title: t(\"Kiruvchi\"),\r\n            count: income,\r\n            icon: \"cloud-download-alt\",\r\n            color: \"purple\",\r\n            footer: \"Faktura yaratish\",\r\n            create_url: \"/cabinet/documents/waiting\"\r\n        },\r\n        {\r\n            title: t(\"Chiquvchi\"),\r\n            count: outcome,\r\n            icon: \"cloud-upload-alt\",\r\n            color: \"green\",\r\n            footer: \"Shartnoma yaratish\",\r\n            create_url: \"/cabinet/documents/signed\"\r\n        },\r\n        {\r\n            title: t(\"Rad etilgan\"),\r\n            count: rejected,\r\n            icon: \"ban\",\r\n            color: \"pink\",\r\n            footer: \"Akt yaratish\",\r\n            create_url: \"/cabinet/documents/rejected\"\r\n        },\r\n        {\r\n            title: t(\"Saqlangan\"),\r\n            count: saved,\r\n            icon: [\"far\", \"bookmark\"],\r\n            color: \"orange\",\r\n            footer: \"Ishonchnoma yaratish\",\r\n            create_url: \"/cabinet/documents/saved\"\r\n        },\r\n    \r\n    ]\r\n\r\n    const dyna_config = {\r\n        dataSourcePath: `/api/v1/cabinet/${activeTab}?hi`,\r\n        addActionPath: 'actions/add',\r\n        viewActionPath: '/cabinet/{docType}/view',\r\n        replaceInViewPath: \"docType\",\r\n        deleteConfirmText: \"Shu faktura ochirilsinmi?\",\r\n        actions: {\r\n            edit: activeTab===3 ? true : false,\r\n            delete: activeTab===3 ? true : false,\r\n            view: true\r\n        },\r\n        allColumns: [\r\n            {\r\n                title: t(\"Hujjat №\"),\r\n                dataIndex: 'docNo',\r\n                isSearchable: true,\r\n            },\r\n            {\r\n                title: t(\"Hujjat turi\"),\r\n                dataIndex: \"docType\",\r\n                isFilterable: true,\r\n                filters: ['factura', 'act', 'contract', 'empowerment', \"tty\"]\r\n            },\r\n            {\r\n                title: t(\"Kontrakt №\"),\r\n                dataIndex: 'contractNo',\r\n                isSearchable: true,\r\n            },\r\n            {\r\n                title: t(\"Kontragent\"),\r\n                dataIndex: 'sellerName',\r\n                isSearchable: true,\r\n                width: 150\r\n            },\r\n            {\r\n                title: t(\"Kontragent\")+\" \"+t(\"STIR\"),\r\n                dataIndex: \"sellerTin\",\r\n                isSearchable: true,\r\n            },\r\n            {\r\n                title: \"Oluvchi\",\r\n                dataIndex: 'buyerName',\r\n                isSearchable: true,\r\n                width: 150\r\n            },\r\n            {\r\n                title: \"Oluvchi STIR\",\r\n                dataIndex: \"buyerTin\",\r\n                isSearchable: true,\r\n            },\r\n            {\r\n                title: t(\"Holati\"),\r\n                dataIndex: \"status\",\r\n                isFilterable: true,\r\n                width: 70,\r\n                filters: [\r\n                    {value: 1, text: \"1-Saqlangan\"}, \r\n                    {value: 2, text: \"2-Imzo kutilmoqda\"}, \r\n                    {value: 3, text: \"3-Jo'natilgan\"}, \r\n                    {value: 4, text: \"4-Xatolik yuzbergan\"},\r\n                    {value: 5, text: \"5-Qaytarib yuborilgan\"}, \r\n                    {value: 6, text: \"6-Qabul qilingan\"}, \r\n                    {value: 7, text: \"7-Muaffaqiyatli\"}]\r\n            },\r\n            {\r\n                title: t('Yaratilgan sana'),\r\n                dataIndex: \"created_at\",\r\n                dataType: 'date',\r\n            },\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <div className=\"cabinet-home-main-container\">\r\n            <div className=\"cabinet-home-sub-container\">\r\n                <Row gutter={[16, 16]}>\r\n                    {\r\n                        list_of_docs.map((data, index)=><Col onClick={()=>setActiveTab(index)} md={6}>\r\n                            <AdminCard data={data} />\r\n                        </Col>)\r\n                    }\r\n                    \r\n                </Row>\r\n                <DynaGrid\r\n                    title={TabList[activeTab]}\r\n                    config={dyna_config}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    cabinetData: selectCabinetData\r\n})\r\n\r\nexport default connect(mapStateToProps)(CabinetHome)\r\n",["358","359"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\act\\create\\create.component.jsx",["360","361","362","363","364","365"],"C:\\HISOBXONA\\on_doc\\src\\components\\data-sheet-custom-measure-selector\\custom-selector.component.jsx",["366","367","368","369"],"C:\\HISOBXONA\\on_doc\\src\\redux\\store.js",["370"],"import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport { persistStore } from 'redux-persist';\r\nimport rootReducer from './root-reducer';\r\nimport creatSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './root-saga';\r\n\r\nconst sagaMiddleWare = creatSagaMiddleware();\r\n\r\nconst middleWares = [sagaMiddleWare];\r\n\r\nmiddleWares.push(logger);\r\n\r\n// if(process.env.NODE_ENV ==='development'){\r\n//     middleWares.push(logger);\r\n// }\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middleWares));\r\n\r\nsagaMiddleWare.run(rootSaga)\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default { store, persistor };",["371","372"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\empowerment\\create\\create.component.jsx",["373","374","375","376","377","378"],"import React, { useState, useEffect } from 'react';\r\nimport 'react-datasheet/lib/react-datasheet.css';\r\nimport Datasheet from 'react-datasheet';\r\nimport SelectMeasureEditor from '../../../components/data-sheet-custom-measure-selector/custom-selector.component';\r\nimport { Button, Input, Form, Row, Col, DatePicker, Select, Upload, message } from 'antd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n//import './create.style.scss';\r\nimport axios from 'axios';\r\nimport BuyerForm from '../../common/buyer-form.component';\r\nimport SellerForm from '../../common/seller-form.component';\r\nimport { connect } from 'react-redux';\r\nimport { selectToken } from '../../../redux/user/user.selector';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport moment from 'moment';\r\nimport { \r\n  FullscreenOutlined, \r\n  FullscreenExitOutlined, \r\n  } from '@ant-design/icons';\r\nimport { convertProductsToGrid, FIRST_EMPOWERMENT_GRID_ROW } from '../../../utils/main';\r\n\r\nconst EmpowermentForm = ({ token, match })=> {\r\n\r\n  const [form] = Form.useForm();\r\n  const { empowermentId } = match.params;\r\n  const [initialData, setInitialData] = useState()\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n  useEffect(()=>{\r\n    if(empowermentId){\r\n\r\n      //fetch fatura data\r\n      axios({\r\n        url: `/api/v1/empowerments/${empowermentId}`,\r\n        method: \"GET\",\r\n      }).then(res=>{\r\n        let data = res.data;\r\n        data.contractDate=moment(data.contractDate);\r\n        data.created_at=moment(data.created_at);\r\n        data.empowermentDateOfExpire=moment(data.empowermentDateOfExpire);\r\n        data.empowermentDateOfIssue=moment(data.empowermentDateOfIssue);\r\n        data.agentPassportDateOfIssue=moment(data.agentPassportDateOfIssue);\r\n        data.updated_at=moment(data.updated_at);\r\n  \r\n        setInitialData(data);\r\n        form.resetFields();\r\n        setGrid(convertProductsToGrid(res.data.products, \"empowerment\"));\r\n      }).catch(err=>{\r\n        console.log(err);\r\n      })\r\n      //end fetch factura data;\r\n    }\r\n  }, [])\r\n  \r\n\r\n  const validateMessages = {\r\n    required: 'Bu maydon majburiy!',\r\n    types: {\r\n      email: '${label} is not a valid email!',\r\n      number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n      range: '${label} must be between ${min} and ${max}',\r\n    },\r\n    \r\n  };\r\n\r\n\r\n  const [fullView, toglleFullView] = useState(false)\r\n\r\n\r\n  const [grid, setGrid] = useState([\r\n    FIRST_EMPOWERMENT_GRID_ROW,\r\n    [\r\n      { readOnly: true, value: 1 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //2 measure\r\n      { value: '' },                                          //3 amount\r\n    ], \r\n    [\r\n      { readOnly: true, value: 2 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //2 measure\r\n      { value: '' },                                          //3 amount\r\n    ], \r\n    [\r\n      { readOnly: true, value: 3 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //2 measure\r\n      { value: '' },                                          //3 amount\r\n    ], \r\n    [\r\n      { readOnly: true, value: 4 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //4 measure\r\n      { value: '' },                                          //5 amount\r\n    ], \r\n  ])\r\n\r\n  const fetchAgent = e=>{\r\n    let val = e.target.value;\r\n    if(!isNaN(val)){\r\n\r\n      if(val > 100000000 && val<999999999){\r\n        axios({\r\n          method: \"GET\",\r\n          url: \"info/contragent-by-tin?tin=\"+val\r\n        })\r\n        .then(res=>{\r\n          const { \r\n            name, \r\n            fullName, \r\n            passIssueDate, \r\n            passOrg,\r\n            passNumber,\r\n            passSeries\r\n          } = res.data;\r\n          console.log(moment('2020-00-00 00:00:00')._isValid)\r\n          form.setFieldsValue({\r\n            agentFio: fullName ?? name,\r\n            agentPassportDateOfIssue: moment(passIssueDate)._isValid ? moment(passIssueDate) : null,\r\n            agentPassportIssuedBy: passOrg,\r\n            agentPassportNumber: passSeries + passNumber\r\n          })\r\n        })\r\n      }\r\n\r\n    }else{\r\n      message.warning(\"STIR notog'ri kiritildi!\");\r\n    }\r\n  }\r\n\r\n\r\n  //#region data-sheet methods\r\n  const handleRemoveRow = (rowId)=>{\r\n    console.log(rowId)\r\n\r\n    console.log(grid)\r\n    grid.splice(rowId, 1)\r\n    console.log(grid)\r\n    setGrid([...grid])\r\n  }\r\n\r\n  const valueRenderer = cell => cell.value;\r\n  const onCellsChanged = changes => {\r\n    changes.forEach(({ cell, row, col, value }, index) => {\r\n        //this sets changed values\r\n        grid[row][col] = { ...grid[row][col], value };        \r\n\r\n    });\r\n     setGrid([...grid]);\r\n  };\r\n\r\n  const handleAddRow = ()=>{\r\n    \r\n    const sampleRow = [\r\n      { readOnly: true, value:    grid.length }, //0 ordNo\r\n      { value: \"\" }, //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor }, //4 measure\r\n      { value: '' }, //5 amount\r\n    ]\r\n\r\n    let newgrid = [...grid, sampleRow];\r\n\r\n     setGrid(newgrid)\r\n  }\r\n\r\n  const onContextMenu = (e, cell, i, j) =>\r\n    cell.readOnly ? e.preventDefault() : null;\r\n//#endregion\r\n  \r\n  //#region form methods\r\n\r\n  const handleSubmit = (values)=>{\r\n    setIsLoading(true)\r\n    console.log(values)\r\n    if(empowermentId){\r\n      axios({\r\n        url:`/api/v1/empowerments/${empowermentId}`,\r\n        method: 'PATCH',\r\n        data: {emp: values, products: grid}\r\n      }).then(res=>{\r\n        console.log(res)\r\n        setIsLoading(false);\r\n        if(res.data.ok){\r\n          message.success(\"Ishonchnoma ozgartirildi!\")\r\n        }\r\n        else{\r\n          message.error(\"Ishonchnoma o'zgartirishda xatolik!\");\r\n        }\r\n      }).catch(err=>{\r\n        setIsLoading(false);\r\n        message.error(\"Ishonchnoma o'zgartirishda xatolik!\");\r\n        console.log(err)\r\n      })\r\n    } else{\r\n      axios({\r\n        url:'/api/v1/empowerments',\r\n        method: 'post',\r\n        data: {emp: values, products: grid}\r\n      }).then(res=>{\r\n        setIsLoading(false)\r\n        if(res.data.ok){\r\n          message.success(\"Ishonchnma yaratildi!\");\r\n        }else{\r\n          message.error(\"Ishonchnoma yaratishda xatolik\");\r\n        }\r\n\r\n        console.log(res)\r\n      }).catch(err=>{\r\n        setIsLoading(false);\r\n        message.error(\"Ishonchnoma yaratishda xatolik\");\r\n        console.log(err)\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n  const handleImportExecl =(value)=>{\r\n    console.log(\"me fired\")\r\n\r\n    if(value.file.status==\"done\"){\r\n      \r\n      const { response } = value.file\r\n\r\n      response.excel.forEach((element, index)=>{\r\n        element[0].value = index + 1;\r\n        element[0].readOnly = true;\r\n        element[4].dataEditor = SelectMeasureEditor;\r\n      })\r\n\r\n      setGrid([grid[0], ...response.excel])\r\n      console.log(response)\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n  \r\n  return (\r\n    <div style={{padding: 15}}>\r\n      <Form\r\n        initialValues={initialData}\r\n        form={form}\r\n        name=\"factura\"\r\n        onFinish = {handleSubmit}\r\n        scrollToFirstError\r\n        validateMessages={validateMessages}\r\n      >\r\n\r\n      <div className=\"factura-data-sheet-container\">\r\n      <h3>Ishonchnoma</h3>\r\n      \r\n      <Row justify=\"space-between\">\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                rules={[{required: true}]}\r\n                key=\"dyna-form-facutura-no\"\r\n                name=\"empowermentNo\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder=\"Inshonchnoma raqami\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Inshonchnoma raqami</span>\r\n              </Form.Item>\r\n            </Col>\r\n            \r\n            <Col md={11}>\r\n              <div style={{display: 'flex', justifyContent: \"space-between\"}}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                key=\"dyna-form-item-inn-date\"\r\n                name=\"empowermentDateOfIssue\"\r\n                rules={[{required: true}]}>\r\n                  <DatePicker                \r\n                    size=\"large\"\r\n                    placeholder=\"Berilgan sanasi\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Berilgan sanasi</span>\r\n              </Form.Item>\r\n          \r\n            <Form.Item>\r\n              <Form.Item \r\n                key=\"dyna-form-item-inn-date-expire\"\r\n                name=\"empowermentDateOfExpire\"\r\n                rules={[{required: true}]}>\r\n                  <DatePicker                \r\n                    size=\"large\"\r\n                    placeholder=\"Amal qilish sanasi\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Amal qilish sanasi</span>\r\n              </Form.Item>\r\n              </div>\r\n            </Col>\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                rules={[{required: true}]}\r\n                key=\"dyna-form-item-contract-n0\"\r\n                name=\"contractNo\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder=\"Shartnoma raqami\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Shartnoma raqami</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                rules={[{required: true}]}\r\n                key=\"dyna-form-item-contract-date\"\r\n                name=\"contractDate\">\r\n                  <DatePicker\r\n                    size=\"large\"\r\n                    placeholder=\"Shartnoma sanasi\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Shartnoma sanasi</span>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n      </div>\r\n\r\n      <div className=\"factura-data-sheet-container\">\r\n        \r\n        <Row justify=\"space-between\">\r\n        <Col md={11}>  \r\n          <SellerForm docType=\"empowerment\"/>\r\n        </Col>\r\n\r\n        <Col md={11}>\r\n          <BuyerForm form={ form } docType=\"empowerment\"/>\r\n        </Col>\r\n      </Row>\r\n      </div>\r\n      <div className={`factura-data-sheet-container ${fullView ? 'grid-full-view' : null}`}>\r\n        <div style={{marginBottom: 10, display: 'flex', justifyContent:'space-between'}}>\r\n          <div style={{display: 'flex'}}>\r\n              <Upload \r\n                headers={{\r\n                  Authorization: \"Bearer \" + token\r\n                }}\r\n                multiple={false}\r\n                action=\"http://127.0.0.1:8000/api/v1/factura-products/read-excel\"\r\n                accept=\".xlsx, .xls\" \r\n                onChange={handleImportExecl}>\r\n                \r\n                  <Button style={{marginRight: 10}}>Exceldan yuklash</Button>\r\n               \r\n              </Upload>\r\n              <a target=\"_blank\" href=\"../../../excels/on_doc_factura_products.xlsx\" download>\r\n                <Button >\r\n                  Shablon yuklash\r\n                </Button>\r\n              </a>\r\n            </div>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={fullView ? <FullscreenExitOutlined /> : <FullscreenOutlined />} \r\n              onClick={()=>toglleFullView(!fullView)}>\r\n                { fullView ? \"Kichraytirish\" : \"Kengaytirish\" }\r\n            </Button>\r\n        </div>\r\n        \r\n      <div style={{overflowX: 'auto'}} >\r\n        <div style={{width: '100%'}}>\r\n          <Datasheet\r\n            data={ grid}\r\n            valueRenderer={ valueRenderer}\r\n            onContextMenu={ onContextMenu}\r\n            onCellsChanged={ onCellsChanged}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Button \r\n        size=\"large\" \r\n        style={{marginTop: 20, marginRight: 7, width: 220}} \r\n        type=\"primary\" \r\n        icon={<FontAwesomeIcon \r\n          style={{marginRight: 7}} \r\n          icon={[\"far\", \"plus-square\"]} />} \r\n        onClick={  handleAddRow }>Qo'shish</Button>\r\n      \r\n      <Button \r\n        size=\"large\" \r\n        style={{marginTop: 20, width: 220 }} \r\n        danger\r\n        type=\"primary\" \r\n        icon={<FontAwesomeIcon \r\n          style={{marginRight: 7}} \r\n          icon={[\"far\", \"trash-alt\"]} />} \r\n        onClick={ ()=>{ if(grid.length>1){ handleRemoveRow(grid.length-1) }}  }>Oxirgi qatorni o'chirish</Button>\r\n      </div>\r\n          \r\n        <div className=\"factura-data-sheet-container\">\r\n\r\n          <Row justify=\"space-between\">\r\n          <Col md={7}>\r\n              <Form.Item>\r\n                <Form.Item \r\n              key=\"seler-account-tyin-inn\"\r\n              name=\"agentTin\">\r\n                <Input\r\n                  size=\"large\"\r\n                  placeholder=\"СТИР\"\r\n                  onChange={fetchAgent}\r\n\r\n                  />\r\n              </Form.Item>\r\n                <span className=\"custom-input-label-1\">СТИР</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={7} >\r\n              <Form.Item>\r\n                <Form.Item \r\n              key=\"agentFio-no\"\r\n              name=\"agentFio\">\r\n                <Input\r\n                  size=\"large\"\r\n                  placeholder=\"ФИШ\" />\r\n              </Form.Item>\r\n                <span className=\"custom-input-label-1\">ФИШ</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={7}>\r\n              <Form.Item>\r\n                <Form.Item \r\n              key=\"seler-account-empowerment-dateof-issue-agentJobTittle\"\r\n              name=\"agentJobTittle\">\r\n                <Input\r\n                  size=\"large\"\r\n                  placeholder=\"Мансаб\" />\r\n              </Form.Item>\r\n                <span className=\"custom-input-label-1\">Мансаб</span>\r\n              </Form.Item>\r\n            </Col>\r\n            \r\n            <Col md={7}>\r\n          \r\n                <Form.Item>\r\n                  <Form.Item \r\n                key=\"seler-account-agent-fioe\"\r\n                name=\"agentPassportNumber\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder=\"Паспорт серия ва рақами\" />\r\n                </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Паспорт серия ва рақами</span>\r\n                </Form.Item>\r\n            \r\n            </Col>\r\n\r\n  <Col md={7} >\r\n    <Form.Item>\r\n      <Form.Item \r\n    key=\"selenote-field\"\r\n    name=\"agentPassportIssuedBy\">\r\n      <Input\r\n        size=\"large\"\r\n        placeholder=\"Ким томонидан берилган\" />\r\n    </Form.Item>\r\n      <span className=\"custom-input-label-1\">Ким томонидан берилган</span>\r\n    </Form.Item>\r\n  </Col>\r\n  <Col md={7} >\r\n    <Form.Item>\r\n      <Form.Item \r\n    key=\"selenote-field\"\r\n    name=\"agentPassportDateOfIssue\">\r\n      <DatePicker\r\n        size=\"large\"\r\n        placeholder=\"Паспорт берилган сана\" />\r\n    </Form.Item>\r\n      <span className=\"custom-input-label-1\">Паспорт берилган сана</span>\r\n    </Form.Item>\r\n  </Col>\r\n  \r\n</Row>\r\n</div>\r\n          <div className=\"factura-data-sheet-container\">\r\n            <Row justify=\"space-around\">\r\n              <Col >\r\n                <Button \r\n                  loading={isLoading}\r\n                  primary\r\n                  htmlType=\"submit\"\r\n                  className=\"factra-action-btns save-btn\" \r\n                  size=\"large\"\r\n                  icon={<FontAwesomeIcon icon=\"save\" className=\"factura-action-btn-icons\"  />}>\r\n                    Сақлаб қолиш\r\n                  </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button \r\n                  className=\"factra-action-btns sing-btn\" \r\n                  size=\"large\"\r\n                  icon={<FontAwesomeIcon icon=\"signature\" className=\"factura-action-btn-icons\" />}>\r\n                    Имзолаш\r\n                  </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button \r\n                  icon={<FontAwesomeIcon icon=\"ban\" className=\"factura-action-btn-icons\" />} \r\n                  danger \r\n                  className=\"factra-action-btns\" \r\n                  size=\"large\">\r\n                    Бекор қилиш\r\n                  </Button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <Form.Item\r\n            name=\"empowermentId\"\r\n            key=\"empowermemt-id\"\r\n          >\r\n            <Input type=\"hidden\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"empowermentProductId\"\r\n            key=\"empowermemt-product-id\"\r\n          >\r\n            <Input type=\"hidden\" />\r\n          </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  token: selectToken\r\n})\r\n\r\nexport default connect(mapStateToProps)(EmpowermentForm);","C:\\HISOBXONA\\on_doc\\src\\frontend\\choose_company\\choose-company.component.jsx",["379","380","381"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, List, message } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { setUser, setUserCompanies } from '../../redux/user/user.action';\r\nimport { selectKeyUser, selectUserCompanies } from '../../redux/user/user.selector';\r\nimport './choose-company.style.scss';\r\n\r\nconst ChooseCompany = ({ setCurrentUser, history, user, setUserComps, companies }) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const setChoosenCompany = async (tin, push_to_cabinet=true)=>{\r\n        await axios({\r\n            url: `user/get-company-data?tin=${tin}`,\r\n            method: 'get'\r\n        }).then(res => {\r\n            setLoading(false)\r\n            setCurrentUser(res.data.company)\r\n            if(push_to_cabinet){\r\n                history.push(\"/cabinet\")\r\n            }\r\n\r\n        }).catch(e => {\r\n\r\n            console.log(e)\r\n\r\n        })\r\n    }\r\n\r\n    const { t } = useTranslation();\r\n    \r\n\r\n    const [chosen, setChosen] = useState(null);\r\n\r\n    useEffect(()=>{\r\n\r\n        if(chosen){\r\n            setChoosenCompany(chosen)\r\n        }\r\n\r\n    }, [chosen]);\r\n\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        axios({\r\n            url: `info/director-company/?tin=${user.username}`,\r\n            method: 'get',\r\n        }).then(res=>{\r\n            console.log(res);\r\n            if(res.data.success){\r\n                setUserComps(res.data.data)\r\n                setLoading(false)\r\n                if(res.data?.data?.length==1){\r\n                    setChoosenCompany(res.data.data[0].company_tin)\r\n                }\r\n            }else{\r\n                message.error(\"Serverda xatolik!\");\r\n                setLoading(false)\r\n            }\r\n            \r\n        }).catch(err=>{\r\n            console.log(err);\r\n            message.error(\"Serverda xatolik!\");\r\n            setLoading(false)\r\n        })\r\n    }, [])\r\n\r\n\r\n    return (<div className=\"choose-company-main-container\">\r\n        <div className=\"choose-company-sub-container\">\r\n            <Button\r\n                onClick={() => { history.goBack() }}\r\n                type=\"primary\"\r\n\r\n                icon={<FontAwesomeIcon\r\n                    style={{ marginRight: 10 }}\r\n                    icon=\"arrow-circle-left\" />}>\r\n                {t(\"Back\")}\r\n            </Button>\r\n            <h2 style={{ textAlign: \"center\" }}>{t(\"Korxona tanlang\")}</h2>\r\n            <div className=\"company-card-con\">\r\n                \r\n                    \r\n                <List\r\n                    grid={{\r\n                        gutter: 8,\r\n                        xs: 1,\r\n                        md: 2,\r\n                        lg: 3\r\n                    }}\r\n                    loading={loading}\r\n                    dataSource={companies}\r\n                    renderItem={comp => <div onClick={() => setChosen(comp.company_tin)} \r\n                    className=\"company-card\">\r\n                        <div className=\"company-name\">\r\n                            {comp.company_name}\r\n                        </div>\r\n\r\n                        <div className=\"company-text\">\r\n                            <span\r\n                                className=\"company-tin\"\r\n                                style={{ margin: 0, padding: 0 }}\r\n                            >{comp.company_tin}</span>\r\n                            <div>{t(\"STIR\")}</div>\r\n                        </div>\r\n\r\n                    </div>}\r\n                />\r\n                        \r\n                \r\n               \r\n                \r\n            </div>\r\n\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nconst mapDispatchToProps = dispatch=>({\r\n    setUserComps: data => dispatch(setUserCompanies(data)),\r\n    setCurrentUser: data => dispatch(setUser(data)),\r\n})\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    user: selectKeyUser,\r\n    companies: selectUserCompanies\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ChooseCompany));","C:\\HISOBXONA\\on_doc\\src\\cabinet\\bindrouming-popup\\bindrouming-popup.component.jsx",["382","383"],"import { Modal, Spin, Checkbox, message } from 'antd'\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useTranslation } from 'react-i18next';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { PROVIDER } from '../../env';\r\nimport { logOut } from '../../redux/user/user.action';\r\nimport { selectCurrentUser, selectLoadedKey } from '../../redux/user/user.selector';\r\nimport { EIMZOClient } from '../../utils/e-imzo';\r\n\r\nconst BindRoumingPopup = ({ user, signOut, loadedKey }) => {\r\n\r\n    const { t } = useTranslation()\r\n\r\n    const [isOpen, setIsOpen] = useState(!user?.is_online);\r\n    const [okDisable, setOkDisable] = useState(true)\r\n    const [afertaText, setAfertaText] = useState();\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            url: `info/get-bind-provider?tin=${user.tin ?? user.username}`,\r\n            method: \"get\"\r\n        }).then(res => {\r\n            \r\n            setAfertaText(JSON.stringify({\r\n                providers: [...res.data.providers, PROVIDER] \r\n            }))\r\n            \r\n        }).catch(ex => {\r\n            console.log(ex);\r\n        })\r\n    }, [])\r\n\r\n    const handleOk = () => {\r\n        setIsOpen(false)\r\n        EIMZOClient.createPkcs7(\r\n            loadedKey.id,\r\n            afertaText,\r\n            null,\r\n            pkcs7 => {\r\n\r\n                axios({\r\n                    url: 'user/bind-provider',\r\n                    method: \"post\",\r\n                    data: {\r\n                        tin: user.tin ?? user.username,\r\n                        sign: pkcs7\r\n                    }\r\n                }).then(res => {\r\n                    console.log(res)\r\n                }).catch(ex => {\r\n                    console.log(ex);\r\n                })\r\n            },\r\n            (e, r) => {\r\n                message(r);\r\n            },\r\n            (e, r) => {\r\n                message(r);\r\n            },\r\n        )\r\n    }\r\n    const handleCancel = () => {\r\n        setIsOpen(false);\r\n        //signOut()\r\n    }\r\n\r\n    const handleAgree = e => {\r\n        //console.log(data)\r\n        if (e.target.checked) {\r\n            setOkDisable(false)\r\n        } else {\r\n            setOkDisable(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                keyboard={false}\r\n                closable={false}\r\n                onCancel={handleCancel}\r\n                onOk={handleOk}\r\n                visible={isOpen}\r\n                okButtonProps={{ disabled: okDisable }}\r\n                zIndex={999}\r\n                title={t(\"Roumingga operatori sifatida qo'shing?\")}\r\n                maskClosable={false}\r\n            >\r\n                <div style={{ top: 0, width: '100%', bottom: 20, height: '40vh'}}>\r\n                    {t(\"Bini rouming operatoringiz sifatida ornating.\")}\r\n                </div>\r\n\r\n                <br />\r\n\r\n                <Checkbox onChange={handleAgree} /><span style={{ marginLeft: 20 }}>{t(\"Roziman.\")}</span>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    user: selectCurrentUser,\r\n    loadedKey: selectLoadedKey\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    signOut: () => dispatch(logOut())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BindRoumingPopup)\r\n","C:\\HISOBXONA\\on_doc\\src\\utils\\utils.js",[],"C:\\HISOBXONA\\on_doc\\src\\components\\dyna-grid\\dyna-grid.component.jsx",["384","385"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\tty\\view\\view.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\view\\view.component.jsx",[],["386","387"],"C:\\HISOBXONA\\on_doc\\src\\reportWebVitals.js",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\tty\\index.router.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\models\\Factura.js",["388","389"],"import FacturaProduct from \"./FacturaProduct\";\r\n\r\nexport default class Factura {\r\n    \"Version\"= 1;\r\n    \"FacturaType\"= null;\r\n    \"SingleSidedType\"= null;\r\n    \"HasMarking\"= true;\r\n    \"AgreeToFine\"= false;\r\n    \"FacturaId\"= \"\";\r\n    \"FacturaDoc\"= {\r\n        \"FacturaNo\": null,\r\n        \"FacturaDate\": null\r\n    }\r\n    \"OldFacturaDoc\"= {\r\n        \"OldFacturaId\": null,\r\n        \"OldFacturaNo\": null,\r\n        \"OldFacturaDate\": null\r\n    }\r\n    \"ContractDoc\"= {\r\n        \"ContractNo\": null,\r\n        \"ContractDate\": null\r\n    }\r\n    \"FacturaEmpowermentDoc\"= {\r\n        \"AgentFacturaId\": null,\r\n        \"EmpowermentNo\": null,\r\n        \"EmpowermentDateOfIssue\": null,\r\n        \"AgentFio\": null,\r\n        \"AgentTin\": null,\r\n        \"AgentPinfl\": null\r\n    }\r\n    \"ItemReleasedDoc\"= {\r\n        \"ItemReleasedTin\": null,\r\n        \"ItemReleasedFio\": null,\r\n        \"ItemReleasedPinfl\": null\r\n    }\r\n    \"SellerTin\"= null;\r\n    \"BuyerTin\"= null;\r\n    \"Seller\"= {\r\n        \"Name\": null,\r\n        \"Account\": null,\r\n        \"BankId\": null,\r\n        \"Address\": null,\r\n        \"Mobile\": null,\r\n        \"WorkPhone\": null,\r\n        \"Oked\": null,\r\n        \"DistrictId\": null,\r\n        \"Director\": null,\r\n        \"Accountant\": null,\r\n        \"VatRegCode\": null,\r\n        \"BranchCode\": null,\r\n        \"BranchName\": null\r\n    }\r\n    \"Buyer\"= {\r\n        \"Name\": null,\r\n        \"Account\": \"\",\r\n        \"BankId\": \"\",\r\n        \"Address\": null,\r\n        \"Mobile\": null,\r\n        \"WorkPhone\": null,\r\n        \"Oked\": \"\",\r\n        \"DistrictId\": null,\r\n        \"Director\": null,\r\n        \"Accountant\": \"\",\r\n        \"VatRegCode\": \"\",\r\n        \"BranchCode\": \"\",\r\n        \"BranchName\": \"\"\r\n    }\r\n    \"ForeignCompany\"= {\r\n        \"CountryId\": null,\r\n        \"Name\": null,\r\n        \"Address\": null,\r\n        \"Bank\": null,\r\n        \"Account\": null\r\n    }\r\n    \"ProductList\"=null\r\n}\r\n\r\nexport const GetFacturaDataToSign = (data, products, FacturaId) => {\r\n\r\n    let { agentFio,\r\n        agentTin,\r\n        buyerAccount,\r\n        buyerAccountant,\r\n        buyerAddress,\r\n        buyerDirector,\r\n        buyerMfo,\r\n        buyerName,\r\n        buyerTin,\r\n        buyerVatRegCode,\r\n        contractDate,\r\n        contractNo,\r\n        empowermentDateOfIssue,\r\n        empowermentNo,\r\n        facturaDate,\r\n        facturaNo,\r\n        facturaType,\r\n        oldFacturaId,\r\n        oldFacturaNo,\r\n        oldFacturaDate,\r\n        sellerAccount,\r\n        sellerAccountant,\r\n        sellerAddress,\r\n        sellerDirector,\r\n        sellerMfo,\r\n        sellerName,\r\n        sellerTin,\r\n        sellerVatRegCode,\r\n        singleSidedType } = data\r\n\r\n    let Buyer = {\r\n        \"Name\": buyerName,\r\n        \"Account\": buyerAccount,\r\n        \"BankId\": buyerMfo,\r\n        \"Address\": buyerAddress,\r\n        \"Mobile\": \"\",\r\n        \"WorkPhone\": \"\",\r\n        \"Oked\": \"\",\r\n        \"DistrictId\": \"\",\r\n        \"Director\": buyerDirector,\r\n        \"Accountant\": buyerAccountant,\r\n        \"VatRegCode\": buyerVatRegCode,\r\n        \"BranchCode\": \"\",\r\n        \"BranchName\": \"\"\r\n\r\n    }\r\n    let Seller = {\r\n        \"Name\": sellerName,\r\n        \"Account\": sellerAccount,\r\n        \"BankId\": sellerMfo,\r\n        \"Address\": sellerAddress,\r\n        \"Mobile\": \"\",\r\n        \"WorkPhone\": \"\",\r\n        \"Oked\": \"\",\r\n        \"DistrictId\": \"\",\r\n        \"Director\": sellerDirector,\r\n        \"Accountant\": sellerAccountant,\r\n        \"VatRegCode\": sellerVatRegCode,\r\n        \"BranchCode\": \"\",\r\n        \"BranchName\": \"\"\r\n    }\r\n    let f = new Factura();\r\n\r\n    f.OldFacturaDoc = {\r\n        OldFacturaDate: oldFacturaDate,\r\n        OldFacturaId: oldFacturaId,\r\n        OldFacturaNo: oldFacturaNo\r\n    }\r\n\r\n    f.SingleSidedType=singleSidedType;\r\n    f.FacturaProductId=FacturaId;\r\n    f.FacturaId=FacturaId;\r\n    f.FacturaType=facturaType\r\n    f.FacturaDoc={\r\n        FacturaDate: facturaDate,\r\n        FacturaNo: facturaNo,\r\n    }\r\n    f.Seller=Seller;\r\n    f.Buyer = Buyer;\r\n    f.BuyerTin = buyerTin;\r\n    f.SellerTin=sellerTin;\r\n\r\n    f.ContractDoc={\r\n        ContractDate: contractDate,\r\n        ContractNo: contractNo,\r\n    }\r\n    f.FacturaEmpowermentDoc={\r\n        EmpowermentDateOfIssue: empowermentDateOfIssue,\r\n        EmpowermentNo: empowermentNo,\r\n        AgentFio: agentFio,\r\n        AgentTin: agentTin,\r\n    }\r\n    f.ProductList=products;\r\n    console.log(products)\r\n    return f;\r\n}\r\n\r\nconst formProperties = [\r\n    \"agentFio\",\r\n    \"agentTin\",\r\n    \"buyerAccount\",\r\n    \"buyerAccountant\",\r\n    \"buyerAddress\",\r\n    \"buyerDirector\",\r\n    \"buyerMfo\",\r\n    \"buyerName\",\r\n    \"buyerTin\",\r\n    \"buyerVatRegCode\",\r\n    \"contractDate\",\r\n    \"contractNo\",\r\n    \"empowermentDateOfIssue\",\r\n    \"empowermentNo\",\r\n    \"facturaDate\",\r\n    \"facturaNo\",\r\n    \"facturaProductId\",\r\n    \"facturaType\",\r\n    \"oldFacturaId\",\r\n    \"oldFacturaNo\",\r\n    \"oldFacturaDate\",\r\n    \"sellerAccount\",\r\n    \"sellerAccountant\",\r\n    \"sellerAddress\",\r\n    \"sellerDirector\",\r\n    \"sellerMfo\",\r\n    \"sellerName\",\r\n    \"sellerTin\",\r\n    \"sellerVatRegCode\",\r\n    \"singleSidedType\"\r\n]\r\n\r\n","C:\\HISOBXONA\\on_doc\\src\\cabinet\\models\\FacturaProduct.js",["390"],"C:\\HISOBXONA\\on_doc\\src\\components\\data-sheet-custom-selector\\custom-selector.component.jsx",["391","392"],"import React, { PureComponent } from 'react'\r\nimport Select from \"react-select\"\r\nimport { ENTER_KEY, TAB_KEY } from 'react-datasheet/lib/keys';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectUserProducts } from '../../redux/user/user.selector';\r\nimport { connect } from 'react-redux';\r\nimport './custom-selector.style.scss'\r\n\r\nconst { Option } = Select\r\n\r\nclass SelectEditor extends PureComponent {\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleKeyDown = this.handleKeyDown.bind(this)\r\n    this.state = {}\r\n  }\r\n\r\n  handleChange(opt) {\r\n    console.log(opt)\r\n    \r\n    const { onCommit, onRevert } = this.props\r\n    if(!opt){\r\n      onRevert()\r\n    }\r\n    const { e } = this.state\r\n    onCommit(opt.value)\r\n    console.log('COMMITTED', opt.value)\r\n  }\r\n\r\n  handleKeyDown(e) {\r\n    // record last key pressed so we can handle enter\r\n    if (e.which === ENTER_KEY || e.which === TAB_KEY) {\r\n      e.persist()\r\n      this.setState({ e })\r\n    } else {\r\n      this.setState({ e: null })\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  optionstag = this.props.userProducts.map(d => ({ label: d.className, \r\n    value: //d.classCode\r\n    { CatalogCode: d.classCode, CatalogName: d.className } \r\n  }))\r\n\r\n  render() {\r\n    return (\r\n      <Select\r\n        size=\"small\"\r\n        showSearch\r\n        autoFocus\r\n        dropdownClassName=\"class-codes-drop-down-list\"\r\n        style={{width: \"100%\"}}\r\n        dropdownMatchSelectWidth={false}\r\n        open={true}\r\n        \r\n        value={this.state.selected}\r\n        onChange={this.handleChange}\r\n        //onSelect={this.handleChange}\r\n        onInputKeyDown={this.handleKeyDown}\r\n       options={this.optionstag} \r\n      />\r\n       \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  userProducts: selectUserProducts\r\n})\r\n\r\nexport default connect(mapStateToProps)(SelectEditor);","C:\\HISOBXONA\\on_doc\\src\\redux\\root-reducer.js",[],"C:\\HISOBXONA\\on_doc\\src\\components\\rich-text-parser\\rich-text-parser.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\utils\\main.js",["393","394","395","396","397","398","399"],"import moment from 'moment';\r\nimport SelectMeasureEditor from '../components/data-sheet-custom-measure-selector/custom-selector.component';\r\nimport SelectEditor from '../components/data-sheet-custom-selector/custom-selector.component';\r\nimport i18n from \"../translate\";\r\n\r\nconst t = i18n.t.bind(i18n)\r\n\r\nexport const getFileExtension = filename => {\r\n    return filename.slice((filename.lastIndexOf('.') - 1 >>> 0) + 2);\r\n}\r\n\r\nexport const FIRST_TTY_GRID_ROW = [\r\n    { readOnly: true, value: \"\", width: 50 }, //0 ordNo\r\n    { readOnly: true, value: 'Товар/хизмат лар номи*' }, //1 product name\r\n    { readOnly: true, value: \"ўлчов бирлиги.*\", dataEditor: SelectMeasureEditor }, //2 measure\r\n    { readOnly: true, value: 'миқдори' }, //3 count\r\n    { readOnly: true, value: \"Нарҳ*\", }, //4 price\r\n    { readOnly: true, value: \"Юкнинг умумий қиймати\", }, //5 total\r\n    { readOnly: true, value: 'етказиб бериш нарҳи*' }, //6 delivery cost\r\n    { readOnly: true, value: \"Юкка доир хужжатлар\", }, //7 Docs\r\n    { readOnly: true, value: \"Массани аниқлаш усули\", }, //8 weight measure method\r\n    { readOnly: true, value: \"Юк синфи\", }, //9 item class\r\n    { readOnly: true, value: \"Масса (брутто)\", }, //10 brutto weight\r\n    { readOnly: true, value: \"Масса (нетто)\", }, //11 netto weight\r\n]\r\n\r\nexport const FIRST_FACTURA_GRID_ROW = [\r\n    { readOnly: true, value: '', width: 50 },\r\n    { value: t('Tovar/xizmat nomi'), readOnly: true, width: 200 },\r\n    { value: t('Tovar/xizmatlar yagona elektron milliy katalog identifikatsiya kodi'), readOnly: true, width: 150 },\r\n    { value: t('Tovar/xizmat shtrix kodi'), readOnly: true, width: 100 },\r\n    { value: t(\"O'lchov birligi\"), readOnly: true, width: 100 },\r\n    { value: t(\"Miqdori\"), readOnly: true, width: 100 },\r\n    { value: t(\"Narxi\"), readOnly: true, width: 100 },\r\n    { value: t(\"Aksiz soliq (%)\"), readOnly: true, width: 100 },\r\n    { value: t(\"Aksiz soliq, miqdori\"), readOnly: true, width: 100 },\r\n    { value: t(\"Yetkazib berish narxi\"), readOnly: true, width: 100 },\r\n    { value: t(\"QQS (%)\"), readOnly: true, width: 100 },\r\n    { value: t(\"QQS, miqdori\"), readOnly: true, width: 100 },\r\n    { value: t(\"Umumiy summa\"), readOnly: true, width: 150 },\r\n];\r\n\r\nexport const FIRST_ACT_GRID_ROW = [\r\n    { readOnly: true, value: '', width: 50 },\r\n    { value: 'Товар/хизмат лар номи*', readOnly: true, width: 200 },\r\n    { value: 'ўлчов бирлиги.*', readOnly: true, width: 100 },\r\n    { value: \"миқдори\", readOnly: true, width: 100 },\r\n    { value: \"Нарҳ*\", readOnly: true, width: 100 },\r\n    { value: \"Total*\", readOnly: true, width: 150 },\r\n];\r\n\r\nexport const FIRST_CONTRACT_GRID_ROW = [\r\n    { readOnly: true, value: '', width: 50 },\r\n    { value: 'Товар/хизмат лар номи*', readOnly: true, width: 200 },\r\n    { value: 'Товар/хизмат лар Ягона электрон миллий каталоги бўйича идентификация коди*', readOnly: true, width: 150 },\r\n    { value: 'Товар/хизмат штрих коди', readOnly: true, width: 100 },\r\n    { value: 'ўлчов бирлиги.*', readOnly: true, width: 100 },\r\n    { value: \"миқдори\", readOnly: true, width: 100 },\r\n    { value: \"Нарҳ*\", readOnly: true, width: 100 },\r\n    { value: \"етказиб бериш нарҳи*\", readOnly: true, width: 100 },\r\n    { value: \"Total*\", readOnly: true, width: 150 },\r\n];\r\n\r\nexport const FIRST_EMPOWERMENT_GRID_ROW = [\r\n    { readOnly: true, value: '', width: 50 },\r\n    { value: 'Товар/хизмат лар номи*', readOnly: true, width: 200 },\r\n    { value: 'ўлчов бирлиги.*', readOnly: true, width: 100 },\r\n    { value: \"миқдори\", readOnly: true, width: 100 },\r\n]\r\n\r\nexport const SAMPLE_FACTURA_GRID_ROW = [\r\n    { readOnly: true, value: 1 }, //0 ordNo\r\n    { value: \"\" }, //1 product name\r\n    { value: \"\", dataEditor: SelectEditor }, //2 catalogCode\r\n    { value: \"\" }, //3 shrix code\r\n    { value: \"\", dataEditor: SelectMeasureEditor }, //4 measure\r\n    { value: '' }, //5 amount\r\n    { value: \"\", }, //6 price\r\n    { value: '' }, //7 aksiz rate\r\n    { value: '', readOnly: true }, //8 aksiz amount\r\n    { value: '' }, //9 delivery cost\r\n    { value: \"\" }, //10 VAT rate\r\n    { value: '', readOnly: true }, //11 VAT amount\r\n    { value: '', readOnly: true, }, //12 total\r\n]\r\n\r\nexport const SAMPLE_CONTRACT_GRID_ROW = [\r\n    { readOnly: true, value: 1 }, //0 ordNo\r\n    { value: \"\" }, //1 product name\r\n    { value: \"\", dataEditor: SelectEditor }, //2 catalogCode\r\n    { value: \"\" }, //3 shrix code\r\n    { value: \"\", dataEditor: SelectMeasureEditor }, //4 measure\r\n    { value: '' }, //5 amount\r\n    { value: \"\", }, //6 price\r\n    { value: '' }, //7 delivery cost\r\n    { value: '', readOnly: true, }, //8 total\r\n]\r\n\r\nexport const convertProductsToGrid = (products, doc = \"factura\") => {\r\n\r\n    let gridProducts;\r\n\r\n    switch (doc) {\r\n\r\n        case \"empowerment\":\r\n            {\r\n                gridProducts = products.map(product => {\r\n                    return [\r\n                        { readOnly: true, value: product[\"ordNo\"], width: 50 },\r\n                        { value: product[\"name\"] },\r\n                        { value: product[\"measureId\"], dataEditor: SelectMeasureEditor },\r\n                        { value: product[\"count\"] },\r\n                    ]\r\n                })\r\n                gridProducts.unshift(FIRST_EMPOWERMENT_GRID_ROW);\r\n            }\r\n            break;\r\n\r\n        case \"act\":\r\n            {\r\n                gridProducts = products.map(product => {\r\n                    return [\r\n                        { readOnly: true, value: product[\"ordNo\"], width: 50 },\r\n                        { value: product[\"name\"] },\r\n                        { value: product[\"measureId\"], dataEditor: SelectMeasureEditor },\r\n                        { value: product[\"count\"] },\r\n                        { value: product[\"price\"] },\r\n                        { value: parseFloat(product[\"count\"]) * parseFloat(product[\"price\"]), readOnly: true, width: 150 },\r\n                    ]\r\n                })\r\n                gridProducts.unshift(FIRST_ACT_GRID_ROW);\r\n            }\r\n            break;\r\n        case \"contract\":\r\n            {\r\n\r\n                gridProducts = products.map(product => {\r\n                    return [\r\n                        { readOnly: true, value: product[\"ordNo\"] }, //0 ordNo\r\n                        { value: product[\"name\"] }, //1 product name\r\n                        { value: product[\"catalogCode\"], dataEditor: SelectEditor }, //2 catalogCode\r\n                        { value: product[\"barCode\"] }, //3 shrix code\r\n                        { value: product[\"measureId\"], dataEditor: SelectMeasureEditor },\r\n                        { value: product[\"count\"] }, //5 amount\r\n                        { value: product[\"price\"], }, //6 price\r\n                        { value: product[\"deliverySum\"] }, //9 delivery cost\r\n                        {\r\n                            value: product[\"count\"] * product[\"price\"] + parseFloat(product[\"deliverySum\"]),\r\n                            readOnly: true\r\n                        }\r\n                    ]\r\n                })\r\n                gridProducts.unshift(FIRST_CONTRACT_GRID_ROW);\r\n            }\r\n            break;\r\n\r\n        case \"tty\":\r\n            {\r\n                gridProducts = products.map((product, index) => {\r\n                    return [\r\n                        { readOnly: true, value: index + 1, width: 50 }, //0 ordNo\r\n                        { value: product.name }, //1 product name\r\n                        { value: product.measureId, dataEditor: SelectMeasureEditor }, //2 measure\r\n                        { value: product.count }, //3 count\r\n                        { value: product.price }, //4 price\r\n                        { value: product.count * product.price, readOnly: true }, //5 total\r\n                        { value: product.deliveryCost }, //6 delivery cost\r\n                        { value: product.docs, }, //7 Docs\r\n                        { value: product.weightMeasureMethod, }, //8 weight measure method\r\n                        { value: product.itemClass, }, //9 item class\r\n                        { value: product.weightBrut, }, //10 brutto weight\r\n                        { value: product.weightNet, }, //11 netto weight\r\n                    ]\r\n                })\r\n                gridProducts.unshift(FIRST_TTY_GRID_ROW);\r\n            }\r\n            break;\r\n\r\n        default:\r\n            {\r\n                gridProducts = products.map(product => {\r\n                    return [\r\n                        { readOnly: true, value: product[\"ordNo\"] }, //0 ordNo\r\n                        { value: product[\"name\"] }, //1 product name\r\n                        { value: product[\"catalogCode\"], dataEditor: SelectEditor }, //2 catalogCode\r\n                        { value: product[\"barCode\"] }, //3 shrix code\r\n                        { value: product[\"measureId\"], dataEditor: SelectMeasureEditor }, //4 measure\r\n                        { value: product[\"count\"] }, //5 amount\r\n                        { value: product[\"baseSumma\"], }, //6 price\r\n                        { value: product[\"exciseRate\"] }, //7 aksiz rate\r\n                        { value: product[\"exciseSum\"], readOnly: true }, //8 aksiz amount\r\n                        { value: product[\"deliverySum\"] }, //9 delivery cost\r\n                        { value: product[\"vatRate\"] }, //10 VAT rate\r\n                        { value: product[\"vatRate\"] * product[\"baseSumma\"], readOnly: true }, //11 VAT amount\r\n                        { value: product[\"summa\"], readOnly: true, }, //12 total\r\n                    ]\r\n                })\r\n                gridProducts.unshift(FIRST_FACTURA_GRID_ROW);\r\n            }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return gridProducts;\r\n}\r\n\r\nconst FACTURA_PRODUCT_FIELDS = {\r\n    0: \"ordNo\",\r\n\r\n}\r\n\r\n//#region Rich text editr configs\r\nexport const modules = {\r\n    toolbar: [\r\n        ['bold', 'italic', 'underline', 'strike'], // toggled buttons\r\n        ['blockquote', 'code-block'],\r\n        ['image', 'link'],\r\n\r\n        //[{ 'header': 1 }, { 'header': 2 }],               // custom button values\r\n        [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n        [{ 'script': 'sub' }, { 'script': 'super' }], // superscript/subscript\r\n        [{ 'indent': '-1' }, { 'indent': '+1' }], // outdent/indent\r\n        //[{ 'direction': 'rtl' }],                         // text direction\r\n\r\n        [{ 'size': ['small', false, 'large', 'huge'] }], // custom dropdown\r\n        [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n\r\n        [{ 'color': [] }, { 'background': [] }], // dropdown with defaults from theme\r\n        [{ 'font': [] }],\r\n        [{ 'align': [] }],\r\n        ['clean'] // remove formatting button\r\n    ],\r\n    imageDrop: true,\r\n}\r\n\r\nexport const formats = [\r\n    'header',\r\n    'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n    'list', 'bullet', 'indent',\r\n    'link', 'image', 'code-block', 'color', 'background',\r\n    'size', 'align', 'direction', 'indent', 'font', 'script'\r\n];\r\n\r\nexport const modulesForQuestion = {\r\n    toolbar: [\r\n        ['bold', 'italic', 'underline', ], // toggled buttons\r\n        ['code-block'],\r\n        ['image'],\r\n\r\n        //[{ 'header': 1 }, { 'header': 2 }],               // custom button values\r\n        [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n\r\n        ['clean'] // remove formatting button\r\n    ],\r\n    imageDrop: true,\r\n}\r\n\r\nexport const formatsForQuestion = [\r\n        'bold', 'italic', 'underline',\r\n        'list', 'bullet',\r\n        'image', 'code-block',\r\n    ]\r\n    //#endregion \r\n\r\n\r\nexport const getValidFileName = (fileName) => {\r\n    return fileName.replace(/[\\/|\\\\\\s:*!?\"<>]/g, \"_\")\r\n}","C:\\HISOBXONA\\on_doc\\src\\cabinet\\contract\\create\\create.component.jsx",["400","401","402","403","404","405","406","407"],"C:\\HISOBXONA\\on_doc\\src\\components\\classcodes-ajax-search\\classcodes-ajax-search.component.jsx",["408","409"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\create\\product-grid.component.jsx",["410","411","412","413"],"C:\\HISOBXONA\\on_doc\\src\\redux\\root-saga.js",["414"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\index.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\components\\left-sidebar\\left-sidebar.component.jsx",[],{"ruleId":"415","severity":1,"message":"416","line":18,"column":19,"nodeType":"417","messageId":"418","endLine":18,"endColumn":24},{"ruleId":"415","severity":1,"message":"419","line":19,"column":21,"nodeType":"417","messageId":"418","endLine":19,"endColumn":29},{"ruleId":"420","severity":1,"message":"421","line":40,"column":8,"nodeType":"422","endLine":40,"endColumn":10,"suggestions":"423"},{"ruleId":"424","replacedBy":"425"},{"ruleId":"426","replacedBy":"427"},{"ruleId":"415","severity":1,"message":"428","line":3,"column":10,"nodeType":"417","messageId":"418","endLine":3,"endColumn":18},{"ruleId":"424","replacedBy":"429"},{"ruleId":"426","replacedBy":"430"},{"ruleId":"415","severity":1,"message":"431","line":12,"column":9,"nodeType":"417","messageId":"418","endLine":12,"endColumn":15},{"ruleId":"415","severity":1,"message":"432","line":10,"column":8,"nodeType":"417","messageId":"418","endLine":10,"endColumn":17},{"ruleId":"424","replacedBy":"433"},{"ruleId":"426","replacedBy":"434"},{"ruleId":"415","severity":1,"message":"435","line":11,"column":10,"nodeType":"417","messageId":"418","endLine":11,"endColumn":23},{"ruleId":"415","severity":1,"message":"419","line":1,"column":17,"nodeType":"417","messageId":"418","endLine":1,"endColumn":25},{"ruleId":"415","severity":1,"message":"436","line":2,"column":8,"nodeType":"417","messageId":"418","endLine":2,"endColumn":14},{"ruleId":"437","severity":1,"message":"438","line":4,"column":15,"nodeType":"439","messageId":"440","endLine":4,"endColumn":17},{"ruleId":"424","replacedBy":"441"},{"ruleId":"426","replacedBy":"442"},{"ruleId":"424","replacedBy":"443"},{"ruleId":"426","replacedBy":"444"},{"ruleId":"415","severity":1,"message":"445","line":24,"column":14,"nodeType":"417","messageId":"418","endLine":24,"endColumn":18},{"ruleId":"420","severity":1,"message":"446","line":70,"column":6,"nodeType":"422","endLine":70,"endColumn":8,"suggestions":"447"},{"ruleId":"448","severity":1,"message":"449","line":76,"column":14,"nodeType":"450","messageId":"451","endLine":76,"endColumn":46},{"ruleId":"448","severity":1,"message":"449","line":77,"column":15,"nodeType":"450","messageId":"451","endLine":77,"endColumn":48},{"ruleId":"448","severity":1,"message":"449","line":80,"column":14,"nodeType":"450","messageId":"451","endLine":80,"endColumn":58},{"ruleId":"452","severity":1,"message":"453","line":166,"column":22,"nodeType":"454","messageId":"440","endLine":166,"endColumn":24},{"ruleId":"415","severity":1,"message":"455","line":2,"column":40,"nodeType":"417","messageId":"418","endLine":2,"endColumn":44},{"ruleId":"415","severity":1,"message":"456","line":2,"column":46,"nodeType":"417","messageId":"418","endLine":2,"endColumn":54},{"ruleId":"420","severity":1,"message":"457","line":69,"column":8,"nodeType":"422","endLine":69,"endColumn":10,"suggestions":"458"},{"ruleId":"420","severity":1,"message":"459","line":17,"column":8,"nodeType":"422","endLine":17,"endColumn":26,"suggestions":"460"},{"ruleId":"452","severity":1,"message":"453","line":99,"column":25,"nodeType":"454","messageId":"440","endLine":99,"endColumn":27},{"ruleId":"420","severity":1,"message":"461","line":193,"column":6,"nodeType":"422","endLine":193,"endColumn":8,"suggestions":"462"},{"ruleId":"448","severity":1,"message":"449","line":199,"column":14,"nodeType":"450","messageId":"451","endLine":199,"endColumn":46},{"ruleId":"448","severity":1,"message":"449","line":200,"column":15,"nodeType":"450","messageId":"451","endLine":200,"endColumn":48},{"ruleId":"448","severity":1,"message":"449","line":203,"column":14,"nodeType":"450","messageId":"451","endLine":203,"endColumn":58},{"ruleId":"424","replacedBy":"463"},{"ruleId":"426","replacedBy":"464"},{"ruleId":"452","severity":1,"message":"453","line":21,"column":16,"nodeType":"454","messageId":"440","endLine":21,"endColumn":18},{"ruleId":"424","replacedBy":"465"},{"ruleId":"426","replacedBy":"466"},{"ruleId":"415","severity":1,"message":"431","line":15,"column":9,"nodeType":"417","messageId":"418","endLine":15,"endColumn":15},{"ruleId":"420","severity":1,"message":"467","line":41,"column":8,"nodeType":"422","endLine":41,"endColumn":10,"suggestions":"468"},{"ruleId":"415","severity":1,"message":"469","line":45,"column":26,"nodeType":"417","messageId":"418","endLine":45,"endColumn":41},{"ruleId":"470","severity":1,"message":"471","line":1,"column":1,"nodeType":"472","messageId":"440","endLine":40,"endColumn":2},{"ruleId":"452","severity":1,"message":"473","line":4,"column":18,"nodeType":"454","messageId":"440","endLine":4,"endColumn":20},{"ruleId":"452","severity":1,"message":"453","line":7,"column":38,"nodeType":"454","messageId":"440","endLine":7,"endColumn":40},{"ruleId":"415","severity":1,"message":"474","line":17,"column":13,"nodeType":"417","messageId":"418","endLine":17,"endColumn":14},{"ruleId":"452","severity":1,"message":"453","line":25,"column":35,"nodeType":"454","messageId":"440","endLine":25,"endColumn":37},{"ruleId":"452","severity":1,"message":"473","line":26,"column":27,"nodeType":"454","messageId":"440","endLine":26,"endColumn":29},{"ruleId":"475","severity":1,"message":"476","line":33,"column":17,"nodeType":"417","messageId":"477","endLine":33,"endColumn":21},{"ruleId":"424","replacedBy":"478"},{"ruleId":"426","replacedBy":"479"},{"ruleId":"424","replacedBy":"480"},{"ruleId":"426","replacedBy":"481"},{"ruleId":"415","severity":1,"message":"482","line":1,"column":27,"nodeType":"417","messageId":"418","endLine":1,"endColumn":36},{"ruleId":"415","severity":1,"message":"483","line":5,"column":8,"nodeType":"417","messageId":"418","endLine":5,"endColumn":13},{"ruleId":"415","severity":1,"message":"484","line":11,"column":9,"nodeType":"417","messageId":"418","endLine":11,"endColumn":16},{"ruleId":"415","severity":1,"message":"485","line":27,"column":12,"nodeType":"417","messageId":"418","endLine":27,"endColumn":19},{"ruleId":"415","severity":1,"message":"486","line":27,"column":21,"nodeType":"417","messageId":"418","endLine":27,"endColumn":31},{"ruleId":"415","severity":1,"message":"487","line":3,"column":10,"nodeType":"417","messageId":"418","endLine":3,"endColumn":15},{"ruleId":"415","severity":1,"message":"488","line":4,"column":9,"nodeType":"417","messageId":"418","endLine":4,"endColumn":26},{"ruleId":"415","severity":1,"message":"489","line":6,"column":10,"nodeType":"417","messageId":"418","endLine":6,"endColumn":14},{"ruleId":"420","severity":1,"message":"490","line":27,"column":7,"nodeType":"422","endLine":27,"endColumn":9,"suggestions":"491"},{"ruleId":"415","severity":1,"message":"492","line":1,"column":8,"nodeType":"417","messageId":"418","endLine":1,"endColumn":13},{"ruleId":"424","replacedBy":"493"},{"ruleId":"426","replacedBy":"494"},{"ruleId":"415","severity":1,"message":"483","line":2,"column":8,"nodeType":"417","messageId":"418","endLine":2,"endColumn":13},{"ruleId":"415","severity":1,"message":"482","line":4,"column":10,"nodeType":"417","messageId":"418","endLine":4,"endColumn":19},{"ruleId":"415","severity":1,"message":"489","line":7,"column":10,"nodeType":"417","messageId":"418","endLine":7,"endColumn":14},{"ruleId":"424","replacedBy":"495"},{"ruleId":"426","replacedBy":"496"},{"ruleId":"415","severity":1,"message":"497","line":6,"column":53,"nodeType":"417","messageId":"418","endLine":6,"endColumn":59},{"ruleId":"420","severity":1,"message":"498","line":60,"column":6,"nodeType":"422","endLine":60,"endColumn":8,"suggestions":"499"},{"ruleId":"448","severity":1,"message":"449","line":66,"column":14,"nodeType":"450","messageId":"451","endLine":66,"endColumn":46},{"ruleId":"448","severity":1,"message":"449","line":67,"column":15,"nodeType":"450","messageId":"451","endLine":67,"endColumn":48},{"ruleId":"448","severity":1,"message":"449","line":70,"column":14,"nodeType":"450","messageId":"451","endLine":70,"endColumn":58},{"ruleId":"452","severity":1,"message":"453","line":210,"column":25,"nodeType":"454","messageId":"440","endLine":210,"endColumn":27},{"ruleId":"415","severity":1,"message":"500","line":2,"column":9,"nodeType":"417","messageId":"418","endLine":2,"endColumn":18},{"ruleId":"415","severity":1,"message":"501","line":2,"column":20,"nodeType":"417","messageId":"418","endLine":2,"endColumn":27},{"ruleId":"415","severity":1,"message":"497","line":3,"column":8,"nodeType":"417","messageId":"418","endLine":3,"endColumn":14},{"ruleId":"415","severity":1,"message":"502","line":14,"column":25,"nodeType":"417","messageId":"418","endLine":14,"endColumn":33},{"ruleId":"503","severity":1,"message":"504","line":24,"column":1,"nodeType":"505","endLine":24,"endColumn":37},{"ruleId":"424","replacedBy":"506"},{"ruleId":"426","replacedBy":"507"},{"ruleId":"415","severity":1,"message":"497","line":5,"column":53,"nodeType":"417","messageId":"418","endLine":5,"endColumn":59},{"ruleId":"420","severity":1,"message":"508","line":53,"column":6,"nodeType":"422","endLine":53,"endColumn":8,"suggestions":"509"},{"ruleId":"448","severity":1,"message":"449","line":59,"column":14,"nodeType":"450","messageId":"451","endLine":59,"endColumn":46},{"ruleId":"448","severity":1,"message":"449","line":60,"column":15,"nodeType":"450","messageId":"451","endLine":60,"endColumn":48},{"ruleId":"448","severity":1,"message":"449","line":63,"column":14,"nodeType":"450","messageId":"451","endLine":63,"endColumn":58},{"ruleId":"452","severity":1,"message":"453","line":222,"column":25,"nodeType":"454","messageId":"440","endLine":222,"endColumn":27},{"ruleId":"420","severity":1,"message":"510","line":45,"column":8,"nodeType":"422","endLine":45,"endColumn":16,"suggestions":"511"},{"ruleId":"452","severity":1,"message":"453","line":57,"column":42,"nodeType":"454","messageId":"440","endLine":57,"endColumn":44},{"ruleId":"420","severity":1,"message":"512","line":70,"column":8,"nodeType":"422","endLine":70,"endColumn":10,"suggestions":"513"},{"ruleId":"415","severity":1,"message":"455","line":1,"column":17,"nodeType":"417","messageId":"418","endLine":1,"endColumn":21},{"ruleId":"420","severity":1,"message":"514","line":33,"column":8,"nodeType":"422","endLine":33,"endColumn":10,"suggestions":"515"},{"ruleId":"415","severity":1,"message":"516","line":77,"column":10,"nodeType":"417","messageId":"418","endLine":77,"endColumn":22},{"ruleId":"517","severity":1,"message":"518","line":473,"column":9,"nodeType":"519","endLine":473,"endColumn":73},{"ruleId":"424","replacedBy":"520"},{"ruleId":"426","replacedBy":"521"},{"ruleId":"415","severity":1,"message":"522","line":1,"column":8,"nodeType":"417","messageId":"418","endLine":1,"endColumn":22},{"ruleId":"415","severity":1,"message":"523","line":177,"column":7,"nodeType":"417","messageId":"418","endLine":177,"endColumn":21},{"ruleId":"415","severity":1,"message":"524","line":83,"column":17,"nodeType":"417","messageId":"418","endLine":83,"endColumn":27},{"ruleId":"415","severity":1,"message":"431","line":9,"column":9,"nodeType":"417","messageId":"418","endLine":9,"endColumn":15},{"ruleId":"415","severity":1,"message":"525","line":26,"column":13,"nodeType":"417","messageId":"418","endLine":26,"endColumn":14},{"ruleId":"415","severity":1,"message":"526","line":1,"column":8,"nodeType":"417","messageId":"418","endLine":1,"endColumn":14},{"ruleId":"527","severity":1,"message":"528","line":106,"column":13,"nodeType":"529","messageId":"530","endLine":116,"endColumn":14},{"ruleId":"527","severity":1,"message":"528","line":120,"column":13,"nodeType":"529","messageId":"530","endLine":132,"endColumn":14},{"ruleId":"527","severity":1,"message":"528","line":135,"column":13,"nodeType":"529","messageId":"530","endLine":154,"endColumn":14},{"ruleId":"527","severity":1,"message":"528","line":158,"column":13,"nodeType":"529","messageId":"530","endLine":176,"endColumn":14},{"ruleId":"415","severity":1,"message":"531","line":209,"column":7,"nodeType":"417","messageId":"418","endLine":209,"endColumn":29},{"ruleId":"532","severity":1,"message":"533","line":269,"column":31,"nodeType":"450","messageId":"534","endLine":269,"endColumn":32,"suggestions":"535"},{"ruleId":"415","severity":1,"message":"536","line":59,"column":13,"nodeType":"417","messageId":"418","endLine":59,"endColumn":22},{"ruleId":"415","severity":1,"message":"537","line":60,"column":13,"nodeType":"417","messageId":"418","endLine":60,"endColumn":24},{"ruleId":"415","severity":1,"message":"538","line":61,"column":13,"nodeType":"417","messageId":"418","endLine":61,"endColumn":25},{"ruleId":"420","severity":1,"message":"539","line":88,"column":6,"nodeType":"422","endLine":88,"endColumn":8,"suggestions":"540"},{"ruleId":"448","severity":1,"message":"449","line":94,"column":14,"nodeType":"450","messageId":"451","endLine":94,"endColumn":46},{"ruleId":"448","severity":1,"message":"449","line":95,"column":15,"nodeType":"450","messageId":"451","endLine":95,"endColumn":48},{"ruleId":"448","severity":1,"message":"449","line":98,"column":14,"nodeType":"450","messageId":"451","endLine":98,"endColumn":58},{"ruleId":"452","severity":1,"message":"453","line":254,"column":27,"nodeType":"454","messageId":"440","endLine":254,"endColumn":29},{"ruleId":"415","severity":1,"message":"455","line":3,"column":26,"nodeType":"417","messageId":"418","endLine":3,"endColumn":30},{"ruleId":"415","severity":1,"message":"541","line":16,"column":12,"nodeType":"417","messageId":"418","endLine":16,"endColumn":13},{"ruleId":"415","severity":1,"message":"542","line":6,"column":10,"nodeType":"417","messageId":"418","endLine":6,"endColumn":31},{"ruleId":"420","severity":1,"message":"543","line":36,"column":8,"nodeType":"422","endLine":36,"endColumn":10,"suggestions":"544"},{"ruleId":"452","severity":1,"message":"453","line":89,"column":31,"nodeType":"454","messageId":"440","endLine":89,"endColumn":33},{"ruleId":"545","severity":1,"message":"546","line":123,"column":42,"nodeType":"417","messageId":"547","endLine":123,"endColumn":47},{"ruleId":"415","severity":1,"message":"548","line":1,"column":15,"nodeType":"417","messageId":"418","endLine":1,"endColumn":19},"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadedKey?.time', 'signOut', and 't'. Either include them or remove the dependency array. If 'signOut' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["549"],"no-native-reassign",["550"],"no-negated-in-lhs",["551"],"'Redirect' is defined but never used.",["550"],["551"],"'Option' is assigned a value but never used.","'PaymeForm' is defined but never used.",["550"],["551"],"'TextInBracket' is defined but never used.","'Header' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["550"],["551"],["550"],["551"],"'i18n' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'facturaId' and 'form'. Either include them or remove the dependency array.",["552"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'Spin' is defined but never used.","'Checkbox' is defined but never used.","React Hook useEffect has a missing dependency: 'setData'. Either include it or remove the dependency array. If 'setData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["553"],"React Hook useEffect has an unnecessary dependency: 'i18next.language'. Either exclude it or remove the dependency array. Outer scope values like 'i18next.language' aren't valid dependencies because mutating them doesn't re-render the component.",["554"],"React Hook useEffect has missing dependencies: 'form' and 'ttyId'. Either include them or remove the dependency array.",["555"],["550"],["551"],["550"],["551"],"React Hook useEffect has missing dependencies: 'eKeys' and 't'. Either include them or remove the dependency array. You can also do a functional update 'setEKeys(e => ...)' if you only need 'eKeys' in the 'setEKeys' call.",["556"],"'setKeyIsLoading' is assigned a value but never used.","no-extend-native","String prototype is read only, properties should not be added.","AssignmentExpression","Expected '!==' and instead saw '!='.","'r' is assigned a value but never used.","no-redeclare","'part' is already defined.","redeclared",["550"],["551"],["550"],["551"],"'useEffect' is defined but never used.","'axios' is defined but never used.","'TabPane' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'Badge' is defined but never used.","'PlusCircleTwoTone' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'form' and 'notificationId'. Either include them or remove the dependency array.",["557"],"'React' is defined but never used.",["550"],["551"],["550"],["551"],"'Select' is defined but never used.","React Hook useEffect has missing dependencies: 'actId' and 'form'. Either include them or remove the dependency array.",["558"],"'ENTER_KEY' is defined but never used.","'TAB_KEY' is defined but never used.","'onRevert' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["550"],["551"],"React Hook useEffect has missing dependencies: 'empowermentId' and 'form'. Either include them or remove the dependency array.",["559"],"React Hook useEffect has a missing dependency: 'setChoosenCompany'. Either include it or remove the dependency array.",["560"],"React Hook useEffect has missing dependencies: 'setChoosenCompany', 'setUserComps', and 'user.username'. Either include them or remove the dependency array. If 'setUserComps' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["561"],"React Hook useEffect has missing dependencies: 'user.tin' and 'user.username'. Either include them or remove the dependency array.",["562"],"'filteredInfo' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["550"],["551"],"'FacturaProduct' is defined but never used.","'formProperties' is assigned a value but never used.","'WithoutVat' is assigned a value but never used.","'e' is assigned a value but never used.","'moment' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'FACTURA_PRODUCT_FIELDS' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\/.","unnecessaryEscape",["563","564"],"'workPhone' is assigned a value but never used.","'physicalTin' is assigned a value but never used.","'physicalName' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'contractId' and 'form'. Either include them or remove the dependency array.",["565"],"'t' is assigned a value but never used.","'convertProductsToGrid' is defined but never used.","React Hook useEffect has missing dependencies: 'loadProducts', 'user.tin', and 'user.username'. Either include them or remove the dependency array. If 'loadProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["566"],"no-self-assign","'total' is assigned to itself.","selfAssignment","'call' is defined but never used.",{"desc":"567","fix":"568"},"no-global-assign","no-unsafe-negation",{"desc":"569","fix":"570"},{"desc":"571","fix":"572"},{"desc":"573","fix":"574"},{"desc":"575","fix":"576"},{"desc":"577","fix":"578"},{"desc":"579","fix":"580"},{"desc":"581","fix":"582"},{"desc":"583","fix":"584"},{"desc":"585","fix":"586"},{"desc":"587","fix":"588"},{"desc":"589","fix":"590"},{"messageId":"591","fix":"592","desc":"593"},{"messageId":"594","fix":"595","desc":"596"},{"desc":"597","fix":"598"},{"desc":"599","fix":"600"},"Update the dependencies array to be: [loadedKey?.time, signOut, t]",{"range":"601","text":"602"},"Update the dependencies array to be: [facturaId, form]",{"range":"603","text":"604"},"Update the dependencies array to be: [setData]",{"range":"605","text":"606"},"Update the dependencies array to be: []",{"range":"607","text":"608"},"Update the dependencies array to be: [form, ttyId]",{"range":"609","text":"610"},"Update the dependencies array to be: [eKeys, t]",{"range":"611","text":"612"},"Update the dependencies array to be: [form, notificationId]",{"range":"613","text":"614"},"Update the dependencies array to be: [actId, form]",{"range":"615","text":"616"},"Update the dependencies array to be: [empowermentId, form]",{"range":"617","text":"618"},"Update the dependencies array to be: [chosen, setChoosenCompany]",{"range":"619","text":"620"},"Update the dependencies array to be: [setChoosenCompany, setUserComps, user.username]",{"range":"621","text":"622"},"Update the dependencies array to be: [user.tin, user.username]",{"range":"623","text":"624"},"removeEscape",{"range":"625","text":"626"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"627","text":"628"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [contractId, form]",{"range":"629","text":"630"},"Update the dependencies array to be: [loadProducts, user.tin, user.username]",{"range":"631","text":"632"},[1355,1357],"[loadedKey?.time, signOut, t]",[2568,2570],"[facturaId, form]",[2467,2469],"[setData]",[651,669],"[]",[6296,6298],"[form, ttyId]",[1574,1576],"[eKeys, t]",[787,789],"[form, notificationId]",[2411,2413],"[actId, form]",[2062,2064],"[empowermentId, form]",[1376,1384],"[chosen, setChoosenCompany]",[2145,2147],"[setChoosenCompany, setUserComps, user.username]",[1181,1183],"[user.tin, user.username]",[11532,11533],"",[11532,11532],"\\",[3097,3099],"[contractId, form]",[1366,1368],"[loadProducts, user.tin, user.username]"]