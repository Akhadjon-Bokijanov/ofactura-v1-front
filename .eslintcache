[{"C:\\HISOBXONA\\on_doc\\src\\index.js":"1","C:\\HISOBXONA\\on_doc\\src\\env.js":"2","C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.action.js":"3","C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.selector.js":"4","C:\\HISOBXONA\\on_doc\\src\\components\\font-awesome-icons\\font-awesome-icons.js":"5","C:\\HISOBXONA\\on_doc\\src\\admin\\admin.router.jsx":"6","C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.reducer.js":"7","C:\\HISOBXONA\\on_doc\\src\\cabinet\\index.component.jsx":"8","C:\\HISOBXONA\\on_doc\\src\\frontend\\index.router.jsx":"9","C:\\HISOBXONA\\on_doc\\src\\components\\header\\header.component.jsx":"10","C:\\HISOBXONA\\on_doc\\src\\redux\\factura-draft\\factura-draft.reducer.js":"11","C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.action-types.js":"12","C:\\HISOBXONA\\on_doc\\src\\pages\\auth\\index.js":"13","C:\\HISOBXONA\\on_doc\\src\\redux\\factura-draft\\factura-draft.action-types.js":"14","C:\\HISOBXONA\\on_doc\\src\\admin\\notification\\form.component.jsx":"15","C:\\HISOBXONA\\on_doc\\src\\pages\\auth\\login\\login.component.jsx":"16","C:\\HISOBXONA\\on_doc\\src\\cabinet\\user-products\\user-products.component.jsx":"17","C:\\HISOBXONA\\on_doc\\src\\utils\\home.config.provider.js":"18","C:\\HISOBXONA\\on_doc\\src\\cabinet\\empowerment\\index.component.jsx":"19","C:\\HISOBXONA\\on_doc\\src\\cabinet\\act\\view\\view.component.jsx":"20","C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\create\\create.component.jsx":"21","C:\\HISOBXONA\\on_doc\\src\\utils\\main.js":"22","C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\buyer-form.component.jsx":"23","C:\\HISOBXONA\\on_doc\\src\\cabinet\\cabinet-header\\CabinetHeader.jsx":"24","C:\\HISOBXONA\\on_doc\\src\\redux\\root-reducer.js":"25","C:\\HISOBXONA\\on_doc\\src\\components\\dyna-grid\\dyna-grid.component.jsx":"26","C:\\HISOBXONA\\on_doc\\src\\cabinet\\tty\\view\\view.component.jsx":"27","C:\\HISOBXONA\\on_doc\\src\\cabinet\\act\\create\\create.component.jsx":"28","C:\\HISOBXONA\\on_doc\\src\\redux\\factura-draft\\factura-draft.action.js":"29","C:\\HISOBXONA\\on_doc\\src\\components\\grid-singlesidedtype-select.component\\grid-singlesidedtype-select.component.jsx":"30","C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\create\\product-grid.component.jsx":"31","C:\\HISOBXONA\\on_doc\\src\\cabinet\\models\\Empowerment.js":"32","C:\\HISOBXONA\\on_doc\\src\\cabinet\\empowerment\\create\\create.component.jsx":"33","C:\\HISOBXONA\\on_doc\\src\\redux\\root-saga.js":"34","C:\\HISOBXONA\\on_doc\\src\\frontend\\choose_company\\choose-company.component.jsx":"35","C:\\HISOBXONA\\on_doc\\src\\redux\\factura-draft\\factura-draft.selector.js":"36","C:\\HISOBXONA\\on_doc\\src\\cabinet\\models\\Factura.js":"37","C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\person-fetch\\person-fetch.component.jsx":"38","C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\home\\home.component.jsx":"39","C:\\HISOBXONA\\on_doc\\src\\cabinet\\password-change\\password-change.component.jsx":"40","C:\\HISOBXONA\\on_doc\\src\\components\\rich-text-parser\\rich-text-parser.component.jsx":"41","C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\index.component.jsx":"42","C:\\HISOBXONA\\on_doc\\src\\cabinet\\contract\\view\\view.component.jsx":"43","C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\view\\view.component.jsx":"44","C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\seller-form.component.jsx":"45","C:\\HISOBXONA\\on_doc\\src\\cabinet\\payme-form\\payme-form.component.jsx":"46","C:\\HISOBXONA\\on_doc\\src\\cabinet\\home\\home.component.jsx":"47","C:\\HISOBXONA\\on_doc\\src\\cabinet\\bindrouming-popup\\bindrouming-popup.component.jsx":"48","C:\\HISOBXONA\\on_doc\\src\\components\\grid-user-fetcher-input\\grid-user-fetcher-input.component.jsx":"49"},{"size":996,"mtime":1615900532271,"results":"50","hashOfConfig":"51"},{"size":761,"mtime":1616659655586,"results":"52","hashOfConfig":"51"},{"size":1056,"mtime":1617000947930,"results":"53","hashOfConfig":"51"},{"size":990,"mtime":1617001154878,"results":"54","hashOfConfig":"51"},{"size":1404,"mtime":1616845768004,"results":"55","hashOfConfig":"51"},{"size":1184,"mtime":1613366375823,"results":"56","hashOfConfig":"51"},{"size":1875,"mtime":1617001703137,"results":"57","hashOfConfig":"51"},{"size":1876,"mtime":1618912666671,"results":"58","hashOfConfig":"51"},{"size":1184,"mtime":1618913616141,"results":"59","hashOfConfig":"51"},{"size":3821,"mtime":1616481216769,"results":"60","hashOfConfig":"51"},{"size":656,"mtime":1618042914959,"results":"61","hashOfConfig":"51"},{"size":486,"mtime":1617000896688,"results":"62","hashOfConfig":"51"},{"size":621,"mtime":1618913616147,"results":"63","hashOfConfig":"51"},{"size":92,"mtime":1617773947776,"results":"64","hashOfConfig":"51"},{"size":7325,"mtime":1613367087580,"results":"65","hashOfConfig":"51"},{"size":11479,"mtime":1618913616150,"results":"66","hashOfConfig":"51"},{"size":1874,"mtime":1616997916480,"results":"67","hashOfConfig":"51"},{"size":18235,"mtime":1618896419366,"results":"68","hashOfConfig":"51"},{"size":1122,"mtime":1618896419359,"results":"69","hashOfConfig":"51"},{"size":769,"mtime":1613135804003,"results":"70","hashOfConfig":"51"},{"size":16573,"mtime":1618896419360,"results":"71","hashOfConfig":"51"},{"size":11919,"mtime":1615964032572,"results":"72","hashOfConfig":"51"},{"size":13341,"mtime":1618032618631,"results":"73","hashOfConfig":"51"},{"size":2389,"mtime":1618916044143,"results":"74","hashOfConfig":"51"},{"size":534,"mtime":1617774662964,"results":"75","hashOfConfig":"51"},{"size":15927,"mtime":1618918666700,"results":"76","hashOfConfig":"51"},{"size":769,"mtime":1613136250855,"results":"77","hashOfConfig":"51"},{"size":15030,"mtime":1613196626550,"results":"78","hashOfConfig":"51"},{"size":215,"mtime":1618042850905,"results":"79","hashOfConfig":"51"},{"size":1328,"mtime":1618300463703,"results":"80","hashOfConfig":"51"},{"size":12195,"mtime":1618658394941,"results":"81","hashOfConfig":"51"},{"size":3457,"mtime":1618916799107,"results":"82","hashOfConfig":"51"},{"size":17649,"mtime":1618916847894,"results":"83","hashOfConfig":"51"},{"size":118,"mtime":1610456948140,"results":"84","hashOfConfig":"51"},{"size":4214,"mtime":1616657209985,"results":"85","hashOfConfig":"51"},{"size":205,"mtime":1617778272124,"results":"86","hashOfConfig":"51"},{"size":6708,"mtime":1618896419363,"results":"87","hashOfConfig":"51"},{"size":2542,"mtime":1616235861000,"results":"88","hashOfConfig":"51"},{"size":2798,"mtime":1618919512534,"results":"89","hashOfConfig":"51"},{"size":5151,"mtime":1616735584676,"results":"90","hashOfConfig":"51"},{"size":360,"mtime":1594933859435,"results":"91","hashOfConfig":"51"},{"size":1428,"mtime":1618639817686,"results":"92","hashOfConfig":"51"},{"size":794,"mtime":1613136178081,"results":"93","hashOfConfig":"51"},{"size":14737,"mtime":1618644955104,"results":"94","hashOfConfig":"51"},{"size":6687,"mtime":1616236147364,"results":"95","hashOfConfig":"51"},{"size":284,"mtime":1616589059995,"results":"96","hashOfConfig":"51"},{"size":5237,"mtime":1615958648169,"results":"97","hashOfConfig":"51"},{"size":3344,"mtime":1616734599990,"results":"98","hashOfConfig":"51"},{"size":685,"mtime":1618317187710,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"gy4thq",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"141"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"141"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"150"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"144"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"150"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"144"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"144"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\HISOBXONA\\on_doc\\src\\index.js",[],["212","213"],"C:\\HISOBXONA\\on_doc\\src\\env.js",[],"C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.action.js",[],"C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.selector.js",[],"C:\\HISOBXONA\\on_doc\\src\\components\\font-awesome-icons\\font-awesome-icons.js",[],"C:\\HISOBXONA\\on_doc\\src\\admin\\admin.router.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.reducer.js",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\index.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\frontend\\index.router.jsx",["214","215"],"C:\\HISOBXONA\\on_doc\\src\\components\\header\\header.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\redux\\factura-draft\\factura-draft.reducer.js",[],"C:\\HISOBXONA\\on_doc\\src\\redux\\user\\user.action-types.js",[],"C:\\HISOBXONA\\on_doc\\src\\pages\\auth\\index.js",["216"],"C:\\HISOBXONA\\on_doc\\src\\redux\\factura-draft\\factura-draft.action-types.js",[],"C:\\HISOBXONA\\on_doc\\src\\admin\\notification\\form.component.jsx",["217"],"C:\\HISOBXONA\\on_doc\\src\\pages\\auth\\login\\login.component.jsx",["218","219","220","221","222"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\user-products\\user-products.component.jsx",["223"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Select, Spin } from 'antd'\r\nimport axios from 'axios'\r\nimport React, { useState } from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { connect } from 'react-redux'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport ClasscodeAjaxSearch from '../../components/classcodes-ajax-search/classcodes-ajax-search.component'\r\nimport { selectCurrentUser } from '../../redux/user/user.selector'\r\nimport HomePage from '../common/home/home.component'\r\n\r\nconst { Option } = Select;\r\n\r\nconst UserProducts = ({ user }) => {\r\n\r\n    const { t } = useTranslation();\r\n    const [spinning, setSpinning] = useState(false);    \r\n    \r\n    const handleFetchTasnifSoliq = ()=>{\r\n        setSpinning(true)\r\n        axios({\r\n            url: `classifications/reload?tin=${user.tin??user.username}`,\r\n            method: \"GET\"\r\n        }).then(res=>{\r\n            setSpinning(false)\r\n            //window.location.reload()\r\n        }).catch(ex=>{\r\n            setSpinning(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Spin spinning={spinning}>\r\n                <ClasscodeAjaxSearch />\r\n            <HomePage \r\n            \r\n            hideTabs\r\n                customButton={<div \r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={handleFetchTasnifSoliq}><span><FontAwesomeIcon icon=\"sync-alt\" /> {t(\"Synxronizatsiya\")}</span></div>}\r\n            doc=\"user-products\"\r\n            addParams={[\r\n                {\r\n                    name: \"tin\",\r\n                    value: user.tin ?? user.username\r\n                }\r\n            ]}\r\n            />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    user: selectCurrentUser\r\n})\r\n\r\nexport default connect(mapStateToProps)(UserProducts)\r\n",["224","225"],"C:\\HISOBXONA\\on_doc\\src\\utils\\home.config.provider.js",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\empowerment\\index.component.jsx",[],["226","227"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\act\\view\\view.component.jsx",[],["228","229"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\create\\create.component.jsx",["230","231","232","233","234","235"],"C:\\HISOBXONA\\on_doc\\src\\utils\\main.js",["236","237","238","239","240","241","242"],"import moment from 'moment';\r\nimport SelectMeasureEditor from '../components/data-sheet-custom-measure-selector/custom-selector.component';\r\nimport SelectEditor from '../components/data-sheet-custom-selector/custom-selector.component';\r\nimport i18n from \"../translate\";\r\n\r\nconst t = i18n.t.bind(i18n)\r\n\r\nexport const getFileExtension = filename => {\r\n    return filename.slice((filename.lastIndexOf('.') - 1 >>> 0) + 2);\r\n}\r\n\r\nexport const FIRST_TTY_GRID_ROW = [\r\n    { readOnly: true, value: \"\", width: 50 }, //0 ordNo\r\n    { readOnly: true, value: 'Товар/хизмат лар номи*' }, //1 product name\r\n    { readOnly: true, value: \"ўлчов бирлиги.*\", dataEditor: SelectMeasureEditor }, //2 measure\r\n    { readOnly: true, value: 'миқдори' }, //3 count\r\n    { readOnly: true, value: \"Нарҳ*\", }, //4 price\r\n    { readOnly: true, value: \"Юкнинг умумий қиймати\", }, //5 total\r\n    { readOnly: true, value: 'етказиб бериш нарҳи*' }, //6 delivery cost\r\n    { readOnly: true, value: \"Юкка доир хужжатлар\", }, //7 Docs\r\n    { readOnly: true, value: \"Массани аниқлаш усули\", }, //8 weight measure method\r\n    { readOnly: true, value: \"Юк синфи\", }, //9 item class\r\n    { readOnly: true, value: \"Масса (брутто)\", }, //10 brutto weight\r\n    { readOnly: true, value: \"Масса (нетто)\", }, //11 netto weight\r\n]\r\n\r\nexport const FIRST_FACTURA_GRID_ROW = [\r\n    { readOnly: true, value: '', width: 50 },\r\n    { value: t('Tovar/xizmat nomi'), readOnly: true, width: 200 },\r\n    { value: t('Tovar/xizmatlar yagona elektron milliy katalog identifikatsiya kodi'), readOnly: true, width: 150 },\r\n    { value: t('Tovar/xizmat shtrix kodi'), readOnly: true, width: 100 },\r\n    { value: t(\"O'lchov birligi\"), readOnly: true, width: 100 },\r\n    { value: t(\"Miqdori\"), readOnly: true, width: 100 },\r\n    { value: t(\"Narxi\"), readOnly: true, width: 100 },\r\n    { value: t(\"Aksiz soliq (%)\"), readOnly: true, width: 100 },\r\n    { value: t(\"Aksiz soliq, miqdori\"), readOnly: true, width: 100 },\r\n    { value: t(\"Yetkazib berish narxi\"), readOnly: true, width: 100 },\r\n    { value: t(\"QQS (%)\"), readOnly: true, width: 100 },\r\n    { value: t(\"QQS, miqdori\"), readOnly: true, width: 100 },\r\n    { value: t(\"Umumiy summa\"), readOnly: true, width: 150 },\r\n];\r\n\r\nexport const FIRST_ACT_GRID_ROW = [\r\n    { readOnly: true, value: '', width: 50 },\r\n    { value: 'Товар/хизмат лар номи*', readOnly: true, width: 200 },\r\n    { value: 'ўлчов бирлиги.*', readOnly: true, width: 100 },\r\n    { value: \"миқдори\", readOnly: true, width: 100 },\r\n    { value: \"Нарҳ*\", readOnly: true, width: 100 },\r\n    { value: \"Total*\", readOnly: true, width: 150 },\r\n];\r\n\r\nexport const FIRST_CONTRACT_GRID_ROW = [\r\n    { readOnly: true, value: '', width: 50 },\r\n    { value: 'Товар/хизмат лар номи*', readOnly: true, width: 200 },\r\n    { value: 'Товар/хизмат лар Ягона электрон миллий каталоги бўйича идентификация коди*', readOnly: true, width: 150 },\r\n    { value: 'Товар/хизмат штрих коди', readOnly: true, width: 100 },\r\n    { value: 'ўлчов бирлиги.*', readOnly: true, width: 100 },\r\n    { value: \"миқдори\", readOnly: true, width: 100 },\r\n    { value: \"Нарҳ*\", readOnly: true, width: 100 },\r\n    { value: \"етказиб бериш нарҳи*\", readOnly: true, width: 100 },\r\n    { value: \"Total*\", readOnly: true, width: 150 },\r\n];\r\n\r\nexport const FIRST_EMPOWERMENT_GRID_ROW = [\r\n    { readOnly: true, value: '', width: 50 },\r\n    { value: 'Товар/хизмат лар номи*', readOnly: true, width: 200 },\r\n    { value: 'ўлчов бирлиги.*', readOnly: true, width: 100 },\r\n    { value: \"миқдори\", readOnly: true, width: 100 },\r\n]\r\n\r\nexport const SAMPLE_FACTURA_GRID_ROW = [\r\n    { readOnly: true, value: 1 }, //0 ordNo\r\n    { value: \"\" }, //1 product name\r\n    { value: \"\", dataEditor: SelectEditor }, //2 catalogCode\r\n    { value: \"\" }, //3 shrix code\r\n    { value: \"\", dataEditor: SelectMeasureEditor }, //4 measure\r\n    { value: '' }, //5 amount\r\n    { value: \"\", }, //6 price\r\n    { value: '' }, //7 aksiz rate\r\n    { value: '', readOnly: true }, //8 aksiz amount\r\n    { value: '' }, //9 delivery cost\r\n    { value: \"\" }, //10 VAT rate\r\n    { value: '', readOnly: true }, //11 VAT amount\r\n    { value: '', readOnly: true, }, //12 total\r\n]\r\n\r\nexport const SAMPLE_CONTRACT_GRID_ROW = [\r\n    { readOnly: true, value: 1 }, //0 ordNo\r\n    { value: \"\" }, //1 product name\r\n    { value: \"\", dataEditor: SelectEditor }, //2 catalogCode\r\n    { value: \"\" }, //3 shrix code\r\n    { value: \"\", dataEditor: SelectMeasureEditor }, //4 measure\r\n    { value: '' }, //5 amount\r\n    { value: \"\", }, //6 price\r\n    { value: '' }, //7 delivery cost\r\n    { value: '', readOnly: true, }, //8 total\r\n]\r\n\r\nexport const convertProductsToGrid = (products, doc = \"factura\") => {\r\n\r\n    let gridProducts;\r\n\r\n    switch (doc) {\r\n\r\n        case \"empowerment\":\r\n            {\r\n                gridProducts = products.map(product => {\r\n                    return [\r\n                        { readOnly: true, value: product[\"ordNo\"], width: 50 },\r\n                        { value: product[\"name\"] },\r\n                        { value: product[\"measureId\"], dataEditor: SelectMeasureEditor },\r\n                        { value: product[\"count\"] },\r\n                    ]\r\n                })\r\n                gridProducts.unshift(FIRST_EMPOWERMENT_GRID_ROW);\r\n            }\r\n            break;\r\n\r\n        case \"act\":\r\n            {\r\n                gridProducts = products.map(product => {\r\n                    return [\r\n                        { readOnly: true, value: product[\"ordNo\"], width: 50 },\r\n                        { value: product[\"name\"] },\r\n                        { value: product[\"measureId\"], dataEditor: SelectMeasureEditor },\r\n                        { value: product[\"count\"] },\r\n                        { value: product[\"price\"] },\r\n                        { value: parseFloat(product[\"count\"]) * parseFloat(product[\"price\"]), readOnly: true, width: 150 },\r\n                    ]\r\n                })\r\n                gridProducts.unshift(FIRST_ACT_GRID_ROW);\r\n            }\r\n            break;\r\n        case \"contract\":\r\n            {\r\n\r\n                gridProducts = products.map(product => {\r\n                    return [\r\n                        { readOnly: true, value: product[\"ordNo\"] }, //0 ordNo\r\n                        { value: product[\"name\"] }, //1 product name\r\n                        { value: product[\"catalogCode\"], dataEditor: SelectEditor }, //2 catalogCode\r\n                        { value: product[\"barCode\"] }, //3 shrix code\r\n                        { value: product[\"measureId\"], dataEditor: SelectMeasureEditor },\r\n                        { value: product[\"count\"] }, //5 amount\r\n                        { value: product[\"price\"], }, //6 price\r\n                        { value: product[\"deliverySum\"] }, //9 delivery cost\r\n                        {\r\n                            value: product[\"count\"] * product[\"price\"] + parseFloat(product[\"deliverySum\"]),\r\n                            readOnly: true\r\n                        }\r\n                    ]\r\n                })\r\n                gridProducts.unshift(FIRST_CONTRACT_GRID_ROW);\r\n            }\r\n            break;\r\n\r\n        case \"tty\":\r\n            {\r\n                gridProducts = products.map((product, index) => {\r\n                    return [\r\n                        { readOnly: true, value: index + 1, width: 50 }, //0 ordNo\r\n                        { value: product.name }, //1 product name\r\n                        { value: product.measureId, dataEditor: SelectMeasureEditor }, //2 measure\r\n                        { value: product.count }, //3 count\r\n                        { value: product.price }, //4 price\r\n                        { value: product.count * product.price, readOnly: true }, //5 total\r\n                        { value: product.deliveryCost }, //6 delivery cost\r\n                        { value: product.docs, }, //7 Docs\r\n                        { value: product.weightMeasureMethod, }, //8 weight measure method\r\n                        { value: product.itemClass, }, //9 item class\r\n                        { value: product.weightBrut, }, //10 brutto weight\r\n                        { value: product.weightNet, }, //11 netto weight\r\n                    ]\r\n                })\r\n                gridProducts.unshift(FIRST_TTY_GRID_ROW);\r\n            }\r\n            break;\r\n\r\n        default:\r\n            {\r\n                gridProducts = products.map(product => {\r\n                    return [\r\n                        { readOnly: true, value: product[\"ordNo\"] }, //0 ordNo\r\n                        { value: product[\"name\"] }, //1 product name\r\n                        { value: product[\"catalogCode\"], dataEditor: SelectEditor }, //2 catalogCode\r\n                        { value: product[\"barCode\"] }, //3 shrix code\r\n                        { value: product[\"measureId\"], dataEditor: SelectMeasureEditor }, //4 measure\r\n                        { value: product[\"count\"] }, //5 amount\r\n                        { value: product[\"baseSumma\"], }, //6 price\r\n                        { value: product[\"exciseRate\"] }, //7 aksiz rate\r\n                        { value: product[\"exciseSum\"], readOnly: true }, //8 aksiz amount\r\n                        { value: product[\"deliverySum\"] }, //9 delivery cost\r\n                        { value: product[\"vatRate\"] }, //10 VAT rate\r\n                        { value: product[\"vatRate\"] * product[\"baseSumma\"], readOnly: true }, //11 VAT amount\r\n                        { value: product[\"summa\"], readOnly: true, }, //12 total\r\n                    ]\r\n                })\r\n                gridProducts.unshift(FIRST_FACTURA_GRID_ROW);\r\n            }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return gridProducts;\r\n}\r\n\r\nconst FACTURA_PRODUCT_FIELDS = {\r\n    0: \"ordNo\",\r\n\r\n}\r\n\r\n//#region Rich text editr configs\r\nexport const modules = {\r\n    toolbar: [\r\n        ['bold', 'italic', 'underline', 'strike'], // toggled buttons\r\n        ['blockquote', 'code-block'],\r\n        ['image', 'link'],\r\n\r\n        //[{ 'header': 1 }, { 'header': 2 }],               // custom button values\r\n        [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n        [{ 'script': 'sub' }, { 'script': 'super' }], // superscript/subscript\r\n        [{ 'indent': '-1' }, { 'indent': '+1' }], // outdent/indent\r\n        //[{ 'direction': 'rtl' }],                         // text direction\r\n\r\n        [{ 'size': ['small', false, 'large', 'huge'] }], // custom dropdown\r\n        [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n\r\n        [{ 'color': [] }, { 'background': [] }], // dropdown with defaults from theme\r\n        [{ 'font': [] }],\r\n        [{ 'align': [] }],\r\n        ['clean'] // remove formatting button\r\n    ],\r\n    imageDrop: true,\r\n}\r\n\r\nexport const formats = [\r\n    'header',\r\n    'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n    'list', 'bullet', 'indent',\r\n    'link', 'image', 'code-block', 'color', 'background',\r\n    'size', 'align', 'direction', 'indent', 'font', 'script'\r\n];\r\n\r\nexport const modulesForQuestion = {\r\n    toolbar: [\r\n        ['bold', 'italic', 'underline', ], // toggled buttons\r\n        ['code-block'],\r\n        ['image'],\r\n\r\n        //[{ 'header': 1 }, { 'header': 2 }],               // custom button values\r\n        [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n\r\n        ['clean'] // remove formatting button\r\n    ],\r\n    imageDrop: true,\r\n}\r\n\r\nexport const formatsForQuestion = [\r\n        'bold', 'italic', 'underline',\r\n        'list', 'bullet',\r\n        'image', 'code-block',\r\n    ]\r\n    //#endregion \r\n\r\n\r\nexport const getValidFileName = (fileName) => {\r\n    return fileName.replace(/[\\/|\\\\\\s:*!?\"<>]/g, \"_\")\r\n}",["243","244"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\buyer-form.component.jsx",["245"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\cabinet-header\\CabinetHeader.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\redux\\root-reducer.js",[],"C:\\HISOBXONA\\on_doc\\src\\components\\dyna-grid\\dyna-grid.component.jsx",["246","247","248"],"import React, { useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Tooltip, Input, Button, Space, Popconfirm, message } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './dyna-grid.style.scss';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n//import { setItemToBeEdited, triggerFetchStart, triggerActionWithPayload } from '../../redux/admin/admin.actions';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n//import { selectCurrentUser } from '../../redux/user/user.selector';\r\nimport { \r\n  EditOutlined, \r\n  DeleteOutlined, \r\n  EyeOutlined, \r\n  SearchOutlined, \r\n  FullscreenOutlined, \r\n  FullscreenExitOutlined, \r\n  } from '@ant-design/icons';\r\n//import { RESOURCES_PATH } from '../../env';\r\nimport RichTextParser from '../rich-text-parser/rich-text-parser.component';\r\nimport { useEffect } from 'react';\r\nimport { selectCurrentUser } from '../../redux/user/user.selector';\r\n\r\nconst DynaGrid = ({\r\n  \r\n  reload,\r\n  loading,                //loading state of table\r\n  currentUser,            //Provided by the comonent\r\n  match,                  //Provided by the comonent\r\n  setItemToBeEdited,      //Provided by the comonent\r\n  triggerAction,          //Provided by the comonent, redux action consumer\r\n  triggerActionWithPayload, //Provided by comonent, redux action and payload consumer\r\n  title,                  //title of DynaGrid\r\n  //dataSource,             //data source for the component\r\n  config:{                //Config object\r\n    modelName,\r\n    primaryKeyName,\r\n    primaryKeyValue,\r\n    dataSourcePath,       //data source path for the table should be pagination\r\n    addElementViewPath,     //add element to the core\r\n    deleteRequestPath,    //delete request path for API server \r\n    replaceInViewPath,\r\n    approveRequestPath,   //approve request path for API server \r\n    viewActionPath,       //UI route to view the element\r\n    editActionPath,\r\n    resultsViewPath,      //view path to see the results\r\n    triggerReload,        //action to triggere when delete, approve is done\r\n    triggerWithPayload,   //Trigger action with payload\r\n    payload,              //Payload to trigger action\r\n    deleteConfirmText,    //Delete confirm text\r\n    actions,              //Object of actions to allow\r\n                          //  {\r\n                          //    add: true,\r\n                          //    edit: true,\r\n                          //    delete: true,\r\n                          //    approve: true,\r\n                          //    view: true\r\n                          //  }\r\n    allColumns,           // array of columns to show\r\n                          //  [\r\n                          //    dataIndex: name of the data in the source object  \r\n                          //    dataType: \"image\" | to show image, \r\n                          //              \"array\" | to show array of strings\r\n                          //               \"rich-text\" | to show rich text format\r\n                          //              \"object\" | if dataIndex value is object,\r\n                          //                    then you have to provide \"items\" array to show certain properties of object\r\n                          //               \"rich-text\": if dataIndex value includes HTML tags \r\n                          //    isSearchable: true | false \r\n                          //    isFilterable: true | false\r\n                          //    filters: [\"item1\", \"item2\"]  filter options\r\n                          //  ]\r\n  }\r\n})=> {\r\n\r\n\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchedColumn, setSearchedColumn] = useState('');\r\n  const [filteredInfo, setFilteredInfo] = useState(null);\r\n  const [isFulliew, toggleFullView] = useState(false);\r\n  \r\n  const [pagination, setPagination] = useState({current: 1, pageSize: 10})\r\n  const [totalDataCount, setTotalDataCount] = useState(0);\r\n  const [ajaxDataSource, setAjaxDataSource] = useState([])\r\n  const [loadingSource, setLoadingResource] = useState(false);\r\n  const [reRenderer, setRerenderer]=useState(reload??1)\r\n\r\n  let searchInput = null;\r\n\r\n  //#region PAGINATION PART\r\n  useEffect(()=>{\r\n\r\n    let url = `${dataSourcePath}&page=${pagination.current}&limit=${pagination.pageSize}${searchText ? `&${modelName}[${searchedColumn}]=${searchText}` : ''}`\r\n\r\n    console.log(url)\r\n    console.log(\"replace\",url.replace(/[ ]+/g, \"\"))\r\n    setLoadingResource(true)\r\n\r\n    axios({\r\n      url: url,///url.replace(/[ ]+/g, \"\"),\r\n      method: \"GET\"\r\n    }).then(res=>{\r\n\r\n      if (Array.isArray(res.data.data)){\r\n        setAjaxDataSource(res.data.data);\r\n        setTotalDataCount(res.data.pages?.total)\r\n      }else{\r\n        console.log(res);\r\n      }\r\n      setLoadingResource(false)\r\n    }).catch(error=>{\r\n      console.log(error);\r\n      setLoadingResource(false)\r\n    })\r\n  }, [pagination, dataSourcePath, searchText, searchedColumn, reRenderer])\r\n  //#endregion PAGINATION PART\r\n\r\n  \r\n  //#region PopConfirm functions\r\n  const confirmDelete = (record) => {\r\n\r\n    //setVisible(false);\r\n    setLoadingResource(true)\r\n    axios({\r\n      url: `/${deleteRequestPath}?${primaryKeyName??'id'}=${record[primaryKeyValue??'id']}&tin=${currentUser.tin??currentUser.username}`, \r\n      method: 'delete',\r\n      })\r\n      .then(res=>{\r\n        setRerenderer(reRenderer+1)\r\n        setLoadingResource(false)\r\n        if(triggerReload){\r\n          triggerAction(triggerReload)\r\n        }\r\n\r\n        if(triggerWithPayload){\r\n          triggerActionWithPayload(triggerActionWithPayload, payload)\r\n        }\r\n        //setAction(Math.random())\r\n        message.success(`${record[primaryKeyValue]} is deleted!`);\r\n      }).catch(error=>{\r\n        setLoadingResource(false)\r\n        message.error('Failed to delete!');\r\n        console.error(error);\r\n        \r\n      })\r\n  };\r\n\r\n\r\n  const cancel = () => {\r\n    //setVisible(false);\r\n    message.error('Action cancelled!');\r\n  };\r\n\r\n  //#endregion\r\n\r\n  //#region getColumnSearchProps\r\n  const getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            searchInput = node;\r\n          }}\r\n          placeholder={`${dataIndex} qidirish`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Qidirish\r\n          </Button>\r\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Qaytarish\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n    record[dataIndex] \r\n      ? record[dataIndex].toString().toLowerCase().includes(value.toString().toLowerCase()) \r\n      : false,\r\n      onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => searchInput.select());\r\n      }\r\n    },\r\n    render: text =>\r\n      searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={ text ? text.toString() : null}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  //#endregion\r\n\r\n  //#region handleSearch\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n\r\n    setSearchText(selectedKeys[0]);\r\n    setSearchedColumn(dataIndex)\r\n\r\n  };\r\n\r\n  const handleReset = clearFilters => {\r\n    console.log(clearFilters)\r\n    \r\n    clearFilters();\r\n    setSearchText('')\r\n  \r\n  };\r\n\r\n  const handleChange = (pagination, filters, sorter) => {\r\n    console.log('Various parameters', pagination, filters, sorter);\r\n    setPagination(pagination)\r\n    setFilteredInfo(filters);\r\n    //setSortedInfo(sorter);\r\n\r\n  };\r\n  //#endregion\r\n\r\n  const columns =[]\r\n\r\n  //#region column config\r\n  allColumns.forEach((element, index)=> {\r\n    columns.push(\r\n      {\r\n        dataIndex: element.dataIndex,\r\n        title: element.title,\r\n        key: element.dataIndex,\r\n        width: element.width ? element.width : 90,\r\n        ellipsis: element.dataIndex==='detail' || element.dataIndex ==='description' ? true : false,     \r\n      });\r\n\r\n    if(element.isSearchable) \r\n    {\r\n        columns[index] = {...columns[index], ...getColumnSearchProps(element.dataIndex)}\r\n    }\r\n\r\n    if(element.isFilterable)\r\n    {\r\n      columns[index] = {...columns[index], \r\n        filters: element.filters.map(univer=>({text: univer.text ?? univer, value: univer.value ?? univer})), \r\n        onFilter: (value, record) => {\r\n          setSearchText(value.toString().toLowerCase())\r\n          setSearchedColumn(element.dataIndex)\r\n          return ajaxDataSource;\r\n        }}//record[element.dataIndex].toString().toLowerCase().includes(value.toString().toLowerCase()),}\r\n    }\r\n\r\n    if(element.customView){\r\n      columns[index] = { ...columns[index],\r\n      dataIndex: null,\r\n      render: record=>element.customView(record[element.dataIndex])\r\n      }\r\n    }\r\n\r\n    if(element.isBoolean){\r\n      columns[index] = {...columns[index], \r\n      dataIndex: null,\r\n      render: (record)=><div>{record[element.dataIndex] ? 1 : 0}</div>}\r\n    }\r\n\r\n    if(element.isBoolean && element.isFilterable){\r\n      columns[index] = {...columns[index], \r\n      dataIndex: null,\r\n      filters: [{text: 1, value: true}, {text: 0, value: false}], \r\n      onFilter: (value, record) =>!!record[element.dataIndex] === !!value,\r\n      render: (record)=><div>{record[element.dataIndex] ? 1 : 0}</div>}\r\n    }\r\n    \r\n    // if(element.dataType === 'image'){\r\n    //   columns[index] = { \r\n    //     ...columns[index],\r\n    //     dataIndex: null,\r\n    //     width: 170,\r\n    //     render: (record)=><div style={{textAlign: \"center\"}}>\r\n    //       <img style={{width: 80, height: 80 }} src={`${RESOURCES_PATH}/${record[element.dataIndex]}`} alt={`${record[element.dataIndex]}`} />\r\n    //     </div>\r\n    //   }\r\n    // }\r\n\r\n    if(element.dataType === 'rich-text'){\r\n      columns[index] = { \r\n        ...columns[index],\r\n        dataIndex: null,\r\n        render: (record)=><RichTextParser text={record[element.dataIndex]} />\r\n      }\r\n    }\r\n\r\n    if(element.dataType === 'object'){\r\n      columns[index]={\r\n        ...columns[index],\r\n        dataIndex: null,\r\n        render: record=><div style={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap'}}>\r\n          {\r\n            record[element.dataIndex] \r\n          ? element.items.map((field, index)=><div key={`sub-dyna-field-${index}`}>{`${field}: `}{ record[element.dataIndex][field] }</div>)\r\n            : \"Nothing found!\"\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n\r\n    if(element.dataType === 'array'){\r\n      columns[index]={\r\n        ...columns[index],\r\n        dataIndex: null,\r\n        onFilter: (value, record) => record[element.dataIndex].includes(value),\r\n        render: record=><div>\r\n          {\r\n            record[element.dataIndex].map(item => <span style={{ backgroundColor: '#4870c7', color: 'white', padding: 3, marginRight: 5, marginBottom: 5, borderRadius: 3 }}>{item} </span>)\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n\r\n    if (element.dataType === \"date\") {\r\n      columns[index]={\r\n        ...columns[index],\r\n        width: 150,\r\n        dataIndex: null,\r\n        render: record=><span>{ moment(record[element.dataIndex]).format('MMMM Do YYYY, H:mm:ss') }</span>\r\n      }\r\n    }\r\n\r\n    if(element.dataType === 'array-count'){\r\n      columns[index]={\r\n        ...columns[index],\r\n        dataIndex: null,\r\n        onFilter: (value, record) => record[element.dataIndex].includes(value),\r\n        render: record=><div>\r\n          {\r\n            record[element.dataIndex].length\r\n          }\r\n        </div>\r\n      }\r\n    }\r\n\r\n  });\r\n    //#endregion\r\n    \r\n    //Actions\r\n    columns.push({\r\n      title: \" \",\r\n      key: 'actions',\r\n      width: 90,\r\n      fixed: 'right',\r\n      render: (record) => \r\n        <div className=\"dyna-grid-actions\">\r\n          {actions.edit \r\n          ? <Tooltip placement=\"left\" title=\"O'zgartirish\">\r\n              {console.log(\"primaryKeyValue\",primaryKeyValue)}\r\n              <Link \r\n              \r\n                to={`${editActionPath}/${record[primaryKeyValue]}`}>\r\n                  <EditOutlined style={{color: 'blue'}}/>\r\n              </Link>\r\n            </Tooltip>\r\n          : null\r\n          }\r\n\r\n          {actions.delete \r\n          ? <Tooltip placement=\"bottom\" title=\"O'chirish\">\r\n              <Popconfirm\r\n                title={ deleteConfirmText ? deleteConfirmText : \"O'chirilsin?\" }\r\n                onConfirm={()=>{confirmDelete(record)}}\r\n                onCancel={cancel}\r\n                okText=\"Ha\"\r\n                cancelText=\"Yo'q\"\r\n              >\r\n              <DeleteOutlined style={{color: 'red'}} />\r\n            </Popconfirm>\r\n          </Tooltip>\r\n          : null\r\n          }\r\n          \r\n          {actions.view \r\n          ? <Tooltip placement=\"bottom\" title=\"Ko'rish\" >\r\n                <Link to={`${ replaceInViewPath \r\n                  ? viewActionPath.replace(`{${replaceInViewPath}}`, record[replaceInViewPath]) \r\n                  : viewActionPath}/${record[primaryKeyValue??'id']}`}><EyeOutlined /></Link>\r\n              </Tooltip>\r\n          : null  \r\n          }\r\n\r\n          {actions.chart\r\n          ?\r\n            <Tooltip placement=\"bottomLeft\" title=\"Natijalar\">\r\n              <Link to={`${resultsViewPath}/${record[primaryKeyValue??'id']}`}>\r\n                <FontAwesomeIcon icon=\"chart-line\" style={{color: '#fb8c00'}} />\r\n              </Link>\r\n            </Tooltip>\r\n          : null\r\n          }\r\n\r\n        </div>,\r\n    })\r\n\r\n    return (\r\n    <div className={`dyna-grid-main-container ${isFulliew ? 'akhadjon-dyna-grid-full-view' : null}`} >\r\n      <div onDoubleClick={()=>toggleFullView(!isFulliew)} \r\n\r\n        style={{marginTop: 40, marginBottom: 10, display: \"flex\", justifyContent: \"space-between\"}}>\r\n        <Button \r\n          \r\n          onClick={()=>{toggleFullView(!isFulliew)}} \r\n          type=\"primary\" \r\n          icon={isFulliew ? <FullscreenExitOutlined /> : <FullscreenOutlined />}>\r\n            { isFulliew ? \"Kichraytirish\" : \"Kengaytirish\" }\r\n          </Button>\r\n        <div>\r\n          <h3>{title}</h3>\r\n        </div>\r\n      </div>\r\n      <Table\r\n        \r\n        loading={loadingSource}\r\n        rowKey=\"id\"\r\n        onChange={handleChange} \r\n      \r\n        pagination={pagination}\r\n        columns={columns} \r\n          dataSource={ajaxDataSource} \r\n        scroll={{ x: allColumns.length * 120, }}//y: window.innerHeight - window.innerHeight / 13 }} \r\n        pagination={{position: ['bottomCenter'], total: totalDataCount}}\r\n      />\r\n    </div>);\r\n  }\r\n\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  currentUser: selectCurrentUser,\r\n})\r\n\r\nconst dispatchMapStateToPros = (dispatch)=>({\r\n  //setItemToBeEdited: (item)=>dispatch(setItemToBeEdited(item)),\r\n  //triggerAction: (action)=>dispatch(triggerFetchStart(action)),\r\n  //triggerActionWithPayload: (action, payload)=>dispatch(triggerActionWithPayload(action, payload))\r\n})\r\n\r\nexport default connect(mapStateToProps, dispatchMapStateToPros)(withRouter(DynaGrid));","C:\\HISOBXONA\\on_doc\\src\\cabinet\\tty\\view\\view.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\act\\create\\create.component.jsx",["249","250","251","252","253","254"],"import React, { useState, useEffect } from 'react';\r\nimport 'react-datasheet/lib/react-datasheet.css';\r\nimport Datasheet from 'react-datasheet';\r\nimport SelectEditor from '../../../components/data-sheet-custom-selector/custom-selector.component';\r\nimport SelectMeasureEditor from '../../../components/data-sheet-custom-measure-selector/custom-selector.component';\r\nimport { Button, Input, Form, Row, Col, DatePicker, Select, Upload, message } from 'antd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './create.style.scss';\r\nimport axios from 'axios';\r\nimport BuyerForm from '../../common/buyer-form.component';\r\nimport SellerForm from '../../common/seller-form.component';\r\nimport { connect } from 'react-redux';\r\nimport { selectCurrentUser, selectToken } from '../../../redux/user/user.selector';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport moment from 'moment';\r\nimport { \r\n  FullscreenOutlined, \r\n  FullscreenExitOutlined, \r\n  } from '@ant-design/icons';\r\nimport { convertProductsToGrid, FIRST_ACT_GRID_ROW } from '../../../utils/main';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\n\r\nexport const setActClient = (seller, client) => {\r\n  return `Биз қуйида имзо чекувчилар, \"${seller ?? \"___________\"}\" бир томондан,бундан кейин Пудратчи деб номланади ва \"${client ?? '__________'}\" бошқа томондан, бундан кейин Буюртмачи деб номланади, иш Буюртмачининг талабларига мувофиқ тўлиқ бажарилганлиги тўғрисида акт туздик.`;\r\n\r\n}\r\n\r\nconst ActForm = ({ token, match, user })=> {\r\n\r\n  const [form] = Form.useForm();\r\n  const { actId } = match.params;\r\n  const [initialData, setInitialData] = useState({actText: setActClient(user.name)})\r\n  const [isLoading, setIsloading] = useState(false);\r\n\r\n \r\n\r\n  useEffect(()=>{\r\n    if(actId){\r\n\r\n      //fetch fatura data\r\n      axios({\r\n        url: `/api/v1/acts/${actId}`,\r\n        method: \"GET\",\r\n      }).then(res=>{\r\n        let data = res.data;\r\n        data.contractDate=moment(data.contractDate);\r\n        data.created_at=moment(data.created_at);\r\n        data.actDate=moment(data.actDate);\r\n        data.updated_at=moment(data.updated_at);\r\n        console.log(data);\r\n  \r\n        setInitialData(res.data);\r\n        form.resetFields();\r\n        setGrid(convertProductsToGrid(res.data.act_products, 'act'));\r\n      }).catch(err=>{\r\n        console.log(err);\r\n      })\r\n      //end fetch factura data;\r\n    }\r\n  }, [])\r\n  \r\n\r\n  const validateMessages = {\r\n    required: 'Bu maydon majburiy!',\r\n    types: {\r\n      email: '${label} is not a valid email!',\r\n      number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n      range: '${label} must be between ${min} and ${max}',\r\n    },\r\n    \r\n  };\r\n\r\n  const [fullView, toglleFullView] = useState(false)\r\n\r\n\r\n  const [grid, setGrid] = useState([\r\n    FIRST_ACT_GRID_ROW,\r\n    [\r\n      { readOnly: true, value: 1 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //2 measure\r\n      { value: '' },                                          //3 amount\r\n      { value: \"\", },                                         //4 price\r\n      { value: '', readOnly: true,}                           //6 total\r\n    ], \r\n    [\r\n      { readOnly: true, value: 2 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //2 measure\r\n      { value: '' },                                          //3 amount\r\n      { value: \"\", },                                         //4 price\r\n      { value: '', readOnly: true,}                           //6 total\r\n    ],  \r\n    [\r\n      { readOnly: true, value: 3 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //2 measure\r\n      { value: '' },                                          //3 amount\r\n      { value: \"\", },                                         //4 price\r\n      { value: '', readOnly: true,}                           //6 total\r\n    ], \r\n    [\r\n      { readOnly: true, value: 4 },                           //0 ordNo\r\n      { value: \"\" },                                          //1 product name\r\n      { value: \"\", dataEditor:  SelectMeasureEditor },        //2 measure\r\n      { value: '' },                                          //3 amount\r\n      { value: \"\", },                                         //4 price\r\n      { value: '', readOnly: true,}                           //6 total\r\n    ], \r\n  ])\r\n\r\n\r\n\r\n  //#region data-sheet methods\r\n  const handleRemoveRow = (rowId)=>{\r\n    console.log(rowId)\r\n    grid.splice(rowId, 1)\r\n    setGrid([...grid])\r\n  }\r\n\r\n  const valueRenderer = cell => cell.value;\r\n  \r\n  const onCellsChanged = changes => {\r\n    changes.forEach(({ cell, row, col, value }, index) => {\r\n        //this sets changed values\r\n        grid[row][col] = { ...grid[row][col], value };\r\n        \r\n\r\n        //Lets calculate\r\n        grid[row][5] = { ...grid[row][5], value: grid[row][3].value && grid[row][4].value ? grid[row][3].value * grid[row][4].value : 0};\r\n     \r\n    });\r\n     setGrid([...grid]);\r\n  };\r\n\r\n  const handleAddRow = ()=>{\r\n    \r\n    const sampleRow = [\r\n        { readOnly: true, value: grid.length },                 //0 ordNo\r\n        { value: \"\" },                                          //1 product name\r\n        { value: \"\", dataEditor:  SelectMeasureEditor },        //2 measure\r\n        { value: '' },                                          //3 amount\r\n        { value: \"\", },                                         //4 price\r\n        { value: '', readOnly: true,}                           //5 total\r\n      ];\r\n    \r\n\r\n    let newgrid = [...grid, sampleRow];\r\n\r\n     setGrid(newgrid)\r\n  }\r\n\r\n  const onContextMenu = (e, cell, i, j) =>\r\n    cell.readOnly ? e.preventDefault() : null;\r\n//#endregion\r\n  \r\n  //#region form methods\r\n\r\n  const handleSubmit = (values)=>{\r\n    setIsloading(true);\r\n    console.log(values)\r\n    if(actId){\r\n      axios({\r\n        url:`/api/v1/acts/${actId}`,\r\n        method: 'PATCH',\r\n        data: {act: values, products: grid}\r\n      }).then(res=>{\r\n        setIsloading(false);\r\n        if(res.data.ok){\r\n          message.success(\"Akt yangilandi!\");\r\n        }\r\n        else{\r\n          message.error(\"Akt yangilashda xatolik!\");\r\n        }\r\n        console.log(res)\r\n      }).catch(err=>{\r\n        setIsloading(false)\r\n        message.error(\"Akt yangilashda xatolik!\");\r\n        console.log(err)\r\n      })\r\n    } else{\r\n      axios({\r\n        url:'/api/v1/acts',\r\n        method: 'post',\r\n        data: {act: values, products: grid}\r\n      }).then(res=>{\r\n        setIsloading(false)\r\n        if(res.data.ok){\r\n          message.success(\"Akt yaratildi!\");\r\n        }\r\n        else{\r\n          message.error(\"Akt yaratishda xatolik!\");\r\n        }\r\n        console.log(res)\r\n      }).catch(err=>{\r\n        setIsloading(false)\r\n        message.error(\"Akt yaratishda xatolik!\");\r\n        console.log(err)\r\n      })\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  const handleImportExecl =(value)=>{\r\n    console.log(\"me fired\")\r\n\r\n    if(value.file.status==\"done\"){\r\n      \r\n      const { response } = value.file\r\n\r\n      response.excel.forEach((element, index)=>{\r\n        element[0].value = index + 1;\r\n        element[0].readOnly = true;\r\n        element[2].dataEditor = SelectEditor;\r\n        element[4].dataEditor = SelectMeasureEditor;\r\n      })\r\n\r\n      setGrid([grid[0], ...response.excel])\r\n      console.log(response)\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n  \r\n  return (\r\n    <div style={{padding: 15}}>\r\n      <Form\r\n        initialValues={initialData}\r\n        form={form}\r\n        name=\"factura\"\r\n        onFinish = {handleSubmit}\r\n        scrollToFirstError\r\n        validateMessages={validateMessages}\r\n      >\r\n\r\n      <div className=\"factura-data-sheet-container\">\r\n      <h3>Akt yaratish</h3>\r\n       \r\n      <Row justify=\"space-between\">\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                rules={[{required: true}]}\r\n                key=\"dyna-form-facutura-no\"\r\n                name=\"actNo\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder=\"Akt raqami\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Akt raqami</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                key=\"dyna-form-item-inn-date\"\r\n                name=\"actDate\"\r\n                rules={[{required: true}]}>\r\n                  <DatePicker                \r\n                    size=\"large\"\r\n                    placeholder=\"Akt sanasi\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Akt sanasi</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                rules={[{required: true}]}\r\n                key=\"dyna-form-item-contract-n0\"\r\n                name=\"contractNo\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder=\"Shartnoma raqami\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Shartnoma raqami</span>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={11}>\r\n            <Form.Item>\r\n              <Form.Item \r\n                rules={[{required: true}]}\r\n                key=\"dyna-form-item-contract-date\"\r\n                name=\"contractDate\">\r\n                  <DatePicker\r\n                    size=\"large\"\r\n                    placeholder=\"Shartnoma sanasi\" />\r\n              </Form.Item>\r\n                  <span className=\"custom-input-label-1\">Shartnoma sanasi</span>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n      </div>\r\n\r\n      <div className=\"factura-data-sheet-container\">\r\n        \r\n        <Row justify=\"space-between\">\r\n        <Col md={11}>  \r\n          <SellerForm form={form} docType=\"act\" />\r\n        </Col>\r\n\r\n        <Col md={11}>\r\n          <BuyerForm form={ form } docType=\"act\" />\r\n        </Col>\r\n      </Row>\r\n      </div>\r\n      \r\n      <div className=\"factura-data-sheet-container\">\r\n            <h3>Akt mazmuni</h3>\r\n              <Form.Item name=\"actText\">\r\n                <TextArea size=\"large\" rows={4} />\r\n              </Form.Item>\r\n          </div>\r\n\r\n      <div className={`factura-data-sheet-container ${fullView ? 'grid-full-view' : null}`}>\r\n        <div style={{marginBottom: 10, display: 'flex', justifyContent:'space-between'}}>\r\n          <div style={{display: 'flex'}}>\r\n              <Upload \r\n                headers={{\r\n                  Authorization: \"Bearer \" + token\r\n                }}\r\n                multiple={false}\r\n                action=\"http://127.0.0.1:8000/api/v1/factura-products/read-excel\"\r\n                accept=\".xlsx, .xls\" \r\n                onChange={handleImportExecl}>\r\n                \r\n                  <Button style={{marginRight: 10}}>Exceldan yuklash</Button>\r\n               \r\n              </Upload>\r\n              <a target=\"_blank\" href=\"../../../excels/on_doc_factura_products.xlsx\" download>\r\n                <Button >\r\n                  Shablon yuklash\r\n                </Button>\r\n              </a>\r\n            </div>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={fullView ? <FullscreenExitOutlined /> : <FullscreenOutlined />} \r\n              onClick={()=>toglleFullView(!fullView)}>\r\n                { fullView ? \"Kichraytirish\" : \"Kengaytirish\" }\r\n            </Button>\r\n        </div>\r\n        \r\n      <div style={{overflowX: 'auto'}} >\r\n        <div style={{width: '100%'}}>\r\n          <Datasheet\r\n            data={ grid}\r\n            valueRenderer={ valueRenderer}\r\n            onContextMenu={ onContextMenu}\r\n            onCellsChanged={ onCellsChanged}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Button \r\n        size=\"large\" \r\n        style={{marginTop: 20, marginRight: 7, width: 220}} \r\n        type=\"primary\" \r\n        icon={<FontAwesomeIcon \r\n          style={{marginRight: 7}} \r\n          icon={[\"far\", \"plus-square\"]} />} \r\n        onClick={  handleAddRow }>Qo'shish</Button>\r\n      \r\n      <Button \r\n        size=\"large\" \r\n        style={{marginTop: 20, width: 220 }} \r\n        danger\r\n        type=\"primary\" \r\n        icon={<FontAwesomeIcon \r\n          style={{marginRight: 7}} \r\n          icon={[\"far\", \"trash-alt\"]} />} \r\n        onClick={ ()=>{ if(grid.length>1){ handleRemoveRow(grid.length-1) }}  }>Oxirgi qatorni o'chirish</Button>\r\n      </div>\r\n          \r\n          \r\n\r\n        <div className=\"factura-data-sheet-container\">\r\n\r\n<Row justify=\"space-between\">\r\n  <Col md={24} >\r\n    <Form.Item>\r\n      <Form.Item \r\n    key=\"selenote-field\"\r\n    name=\"notes\">\r\n      <Input\r\n        size=\"large\"\r\n        placeholder=\"Қўшимча майдон\" />\r\n    </Form.Item>\r\n      <span className=\"custom-input-label-1\">Қўшимча майдон</span>\r\n    </Form.Item>\r\n  </Col>\r\n  \r\n</Row>\r\n</div>\r\n          <div className=\"factura-data-sheet-container\">\r\n            <Row justify=\"space-around\">\r\n              <Col >\r\n                <Button \r\n                  loading={isLoading}\r\n                  primary\r\n                  htmlType=\"submit\"\r\n                  className=\"factra-action-btns save-btn\" \r\n                  size=\"large\"\r\n                  icon={<FontAwesomeIcon icon=\"save\" className=\"factura-action-btn-icons\"  />}>\r\n                    Сақлаб қолиш\r\n                  </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button \r\n                  className=\"factra-action-btns sing-btn\" \r\n                  size=\"large\"\r\n                  icon={<FontAwesomeIcon icon=\"signature\" className=\"factura-action-btn-icons\" />}>\r\n                    Имзолаш\r\n                  </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button \r\n                  icon={<FontAwesomeIcon icon=\"ban\" className=\"factura-action-btn-icons\" />} \r\n                  danger \r\n                  className=\"factra-action-btns\" \r\n                  size=\"large\">\r\n                    Бекор қилиш\r\n                  </Button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n\r\n          <Form.Item\r\n          name=\"actId\"\r\n          key=\"act-id\"\r\n          >\r\n            <Input type=\"hidden\" />\r\n          </Form.Item>\r\n\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  token: selectToken,\r\n  user: selectCurrentUser\r\n})\r\n\r\nexport default connect(mapStateToProps)(ActForm);","C:\\HISOBXONA\\on_doc\\src\\redux\\factura-draft\\factura-draft.action.js",[],"C:\\HISOBXONA\\on_doc\\src\\components\\grid-singlesidedtype-select.component\\grid-singlesidedtype-select.component.jsx",["255","256"],"import React from 'react'\r\nimport Select from \"react-select\"\r\nimport { ENTER_KEY, TAB_KEY } from 'react-datasheet/lib/keys';\r\n\r\nconst GridSingleSidedTyle = ({ onCommit, onRevert }) => {\r\n\r\n\r\n\r\n    const optionTags = [\r\n        { value: 1, label: \"На физ. лицо\" },\r\n        { value: 2, label: \"На экспорт\" },\r\n        { value: 3, label: \"На импорт\" },\r\n        { value: 4, label: \"Реализация, связанная с гос. секретом\" },\r\n        { value: 5, label: \"Финансовые услуги\" }\r\n\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <Select\r\n                size=\"small\"\r\n                showSearch\r\n                autoFocus\r\n                dropdownClassName=\"class-codes-drop-down-list\"\r\n                style={{ width: \"100%\" }}\r\n                dropdownMatchSelectWidth={false}\r\n                open={true}\r\n                menuPortalTarget={document.body}\r\n                styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\r\n                //value={this.state.selected}\r\n                onChange={opt => { onCommit(opt.value) }}\r\n                //onSelect={this.handleChange}\r\n                //onInputKeyDown={handleKeyDown}\r\n                options={optionTags}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GridSingleSidedTyle\r\n","C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\create\\product-grid.component.jsx",["257","258","259","260","261"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\models\\Empowerment.js",["262","263"],"export default class Empowerment {\r\n    \"EmpowermentId\"= \"\";\r\n    \"EmpowermentDoc\"= {\r\n        \"EmpowermentNo\": \"\",\r\n        \"EmpowermentDateOfIssue\": \"\",\r\n        \"EmpowermentDateOfExpire\": \"\"\r\n    };\r\n    \"ContractDoc\"= {\r\n        \"ContractNo\": \"\",\r\n        \"ContractDate\": \"\"\r\n    };\r\n    \"Agent\"= {\r\n        \"AgentEmpowermentId\": \"\",\r\n        \"AgentTin\": \"\",\r\n        \"JobTitle\": \"\",\r\n        \"Fio\": \"\",\r\n        \"Passport\":{\r\n            \"Number\": \"\",\r\n            \"DateOfIssue\": \"\",\r\n            \"IssuedBy\": \"\"\r\n        }\r\n    };\r\n    \"SellerTin\"= \"200523221\";\r\n    \"BuyerTin\"= \"505282068\";\r\n    \"Seller\"= {\r\n        \"Name\": \"\",\r\n        \"Account\": \"\",\r\n        \"BankId\": \"\",\r\n        \"Address\": \"\",\r\n        \"Mobile\": \"\",\r\n        \"WorkPhone\": \"\",\r\n        \"Oked\": \"\",\r\n        \"DistrictId\": \"\",\r\n        \"Director\": \"\",\r\n        \"Accountant\": \"\"\r\n    }\r\n    \"Buyer\"= {\r\n        \"Name\": \"\",\r\n        \"Account\": \"\",\r\n        \"BankId\": \"\",\r\n        \"Address\": \"\",\r\n        \"Mobile\": \"\",\r\n        \"WorkPhone\": \"\",\r\n        \"Oked\": \"\",\r\n        \"DistrictId\": \"\",\r\n        \"Director\": \"\",\r\n        \"Accountant\": \"\"\r\n    };\r\n    \"ProductList\"= {\r\n        \"EmpowermentProductId\": \"\",\r\n        \"Tin\": \"\",\r\n        \"Products\":[]\r\n    }\r\n}\r\n\r\nexport const GetEmpowermentDataToSign = (formData, products, empId)=>{\r\n    let {\r\n        agentFio,\r\n        agentJobTitle,\r\n        agentPassportDateOfIssue,\r\n        agentPassportIssuedBy,\r\n        agentPassportNumber,\r\n        agentTin,\r\n        buyerAccount,\r\n        buyerAccountant,\r\n        buyerAddress,\r\n        buyerDirector,\r\n        buyerOked,\r\n        buyerMfo,\r\n        buyerName,\r\n        buyerTin,\r\n        contractDate,\r\n        contractNo,\r\n        empowermentDateOfExpire,\r\n        empowermentDateOfIssue,\r\n        empowermentNo,\r\n        sellerAccount,\r\n        sellerAccountant,\r\n        sellerAddress,\r\n        sellerDirector,\r\n        sellerMfo,\r\n        sellerName,\r\n        sellerOked,\r\n        sellerTin\r\n    } = formData;\r\n\r\n    let emp = new Empowerment();\r\n    emp.EmpowermentId=empId;\r\n    emp.EmpowermentDoc={\r\n        EmpowermentDateOfExpire:empowermentDateOfExpire,\r\n        EmpowermentDateOfIssue: empowermentDateOfIssue,\r\n        EmpowermentNo:empowermentNo\r\n    }\r\n    emp.ContractDoc={\r\n        ContractNo:contractNo,\r\n        ContractDate:contractDate\r\n    }\r\n    emp.Agent = {\r\n        AgentTin: agentTin,\r\n        Fio: agentFio,\r\n        JobTitle: agentJobTitle,\r\n        AgentEmpowermentId: empId,\r\n        Passport:{\r\n            DateOfIssue: agentPassportDateOfIssue,\r\n            Number: agentPassportNumber,\r\n            IssuedBy: agentPassportIssuedBy\r\n        }\r\n    }\r\n    emp.SellerTin=sellerTin;\r\n    emp.BuyerTin=buyerTin;\r\n    emp.Seller={\r\n        Name: sellerName,\r\n        Account: sellerAccount,\r\n        BankId: sellerMfo,\r\n        Address: sellerAddress,\r\n        Oked: sellerOked,\r\n        Director: sellerDirector,\r\n        Accountant: sellerAccountant,\r\n    }\r\n    emp.Buyer={\r\n        Name: buyerName,\r\n        Account: buyerAccount,\r\n        BankId: buyerMfo,\r\n        Address: buyerAddress,\r\n        Oked: buyerOked,\r\n        Director: buyerDirector,\r\n        Accountant: buyerAccountant,\r\n    }\r\n\r\n    emp.ProductList={\r\n        EmpowermentProductId:empId,\r\n        Tin:sellerTin,\r\n        Products:products\r\n    }\r\n\r\n    return emp;\r\n}\r\n\r\nexport const EmpowermentDataToForm=formData=>{\r\n    let {\r\n\r\n    } = formData;\r\n\r\n    let emp = {\r\n\r\n    }\r\n}\r\n","C:\\HISOBXONA\\on_doc\\src\\cabinet\\empowerment\\create\\create.component.jsx",["264","265","266","267","268","269","270","271","272","273","274"],"C:\\HISOBXONA\\on_doc\\src\\redux\\root-saga.js",["275"],"import { all, call } from 'redux-saga/effects';\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n\r\n    ])\r\n}","C:\\HISOBXONA\\on_doc\\src\\frontend\\choose_company\\choose-company.component.jsx",["276","277","278"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, List, message } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { setUser, setUserCompanies } from '../../redux/user/user.action';\r\nimport { selectKeyUser, selectUserCompanies } from '../../redux/user/user.selector';\r\nimport './choose-company.style.scss';\r\n\r\nconst ChooseCompany = ({ setCurrentUser, history, user, setUserComps, companies }) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const setChoosenCompany = async (tin, push_to_cabinet=true)=>{\r\n        await axios({\r\n            url: `user/get-company-data?tin=${tin}`,\r\n            method: 'get'\r\n        }).then(res => {\r\n            setLoading(false)\r\n            setCurrentUser(res.data.company)\r\n            if(push_to_cabinet){\r\n                history.push(\"/cabinet\")\r\n            }\r\n\r\n        }).catch(e => {\r\n\r\n            console.log(e)\r\n\r\n        })\r\n    }\r\n\r\n    const { t } = useTranslation();\r\n    \r\n\r\n    const [chosen, setChosen] = useState(null);\r\n\r\n    useEffect(()=>{\r\n\r\n        if(chosen){\r\n            setChoosenCompany(chosen)\r\n        }\r\n\r\n    }, [chosen]);\r\n\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        axios({\r\n            url: `info/director-company/?tin=${user.username}`,\r\n            method: 'get',\r\n        }).then(res=>{\r\n            console.log(res);\r\n            if(res.data.success){\r\n                setUserComps(res.data.data)\r\n                setLoading(false)\r\n                if(res.data?.data?.length==1){\r\n                    setChoosenCompany(res.data.data[0].company_tin)\r\n                }\r\n            }else{\r\n                message.error(\"Serverda xatolik!\");\r\n                setLoading(false)\r\n            }\r\n            \r\n        }).catch(err=>{\r\n            console.log(err);\r\n            message.error(\"Serverda xatolik!\");\r\n            setLoading(false)\r\n        })\r\n    }, [])\r\n\r\n\r\n    return (<div className=\"choose-company-main-container\">\r\n        <div className=\"choose-company-sub-container\">\r\n            <Button\r\n                onClick={() => { history.goBack() }}\r\n                type=\"primary\"\r\n\r\n                icon={<FontAwesomeIcon\r\n                    style={{ marginRight: 10 }}\r\n                    icon=\"arrow-circle-left\" />}>\r\n                {t(\"Back\")}\r\n            </Button>\r\n            <h2 style={{ textAlign: \"center\" }}>{t(\"Korxona tanlang\")}</h2>\r\n            <div className=\"company-card-con\">\r\n                \r\n                    \r\n                <List\r\n                    grid={{\r\n                        gutter: 8,\r\n                        xs: 1,\r\n                        md: 2,\r\n                        lg: 3\r\n                    }}\r\n                    loading={loading}\r\n                    dataSource={companies}\r\n                    renderItem={comp => <div onClick={() => setChosen(comp.company_tin)} \r\n                    className=\"company-card\">\r\n                        <div className=\"company-name\">\r\n                            {comp.company_name}\r\n                        </div>\r\n\r\n                        <div className=\"company-text\">\r\n                            <span\r\n                                className=\"company-tin\"\r\n                                style={{ margin: 0, padding: 0 }}\r\n                            >{comp.company_tin}</span>\r\n                            <div>{t(\"STIR\")}</div>\r\n                        </div>\r\n\r\n                    </div>}\r\n                />\r\n                        \r\n                \r\n               \r\n                \r\n            </div>\r\n\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nconst mapDispatchToProps = dispatch=>({\r\n    setUserComps: data => dispatch(setUserCompanies(data)),\r\n    setCurrentUser: data => dispatch(setUser(data)),\r\n})\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    user: selectKeyUser,\r\n    companies: selectUserCompanies\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ChooseCompany));","C:\\HISOBXONA\\on_doc\\src\\redux\\factura-draft\\factura-draft.selector.js",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\models\\Factura.js",["279","280","281","282","283"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\person-fetch\\person-fetch.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\home\\home.component.jsx",["284"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\password-change\\password-change.component.jsx",["285"],"C:\\HISOBXONA\\on_doc\\src\\components\\rich-text-parser\\rich-text-parser.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\index.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\contract\\view\\view.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\factura\\view\\view.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\common\\seller-form.component.jsx",["286"],"import React, { Fragment } from 'react';\r\nimport { Input, Form, Row, Col } from 'antd';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectCurrentUser } from '../../redux/user/user.selector';\r\nimport { connect } from 'react-redux';\r\nimport PersonFetch from './person-fetch/person-fetch.component';\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst SellerForm = ({ user, docType, form }) => {\r\n\r\n    const {t} = useTranslation();\r\n\r\n  const { tin, name, fullName, regCode, mfo, bank_account, address, director_fio, director_tin, accountant, phone } = user;\r\n\r\n  return (\r\n    <div>\r\n\r\n      <h3>{t(\"Sizning ma'lumotlaringiz\")}</h3>\r\n\r\n      {\r\n        docType==\"contract\" ?\r\n        <PersonFetch\r\n        form={form}\r\n        nameCol={11}\r\n        tinCol={11}\r\n        tinLabel={t(\"Jis.Shaxs STIR\")}\r\n        nameLabel={t(\"Jis.Shaxs FIO\")}\r\n        pTin=\"sellerFizTin\"\r\n        pName=\"sellerFizFio\"\r\n      />\r\n      : null\r\n      }\r\n      \r\n\r\n      <Form.Item>\r\n        <Form.Item\r\n          key=\"dyna-form-item-inn-seller\"\r\n          name=\"sellerTin\"\r\n          rules={[{ required: true }]}\r\n          initialValue={tin}>\r\n          <Input\r\n            disabled\r\n            size=\"large\"\r\n            placeholder={t(\"STIR\")} />\r\n        </Form.Item>\r\n        <span className=\"custom-input-label-1\">{t(\"STIR\")}</span>\r\n      </Form.Item>\r\n      {\r\n        docType !== \"contract\" ?\r\n          <h3>{t(\"Tashkilot\")}</h3>\r\n          : null\r\n      }\r\n      <Form.Item>\r\n        <Form.Item\r\n          key=\"seller-name-1-sellerName\"\r\n          rules={[{ required: true }]}\r\n          name=\"sellerName\"\r\n          initialValue={name ?? fullName}>\r\n          <Input\r\n\r\n            size=\"large\"\r\n            placeholder={t(\"Sotuvchi nomi\")} />\r\n        </Form.Item>\r\n        <span className=\"custom-input-label-1\">{t(\"Sotuvchi nomi\")}</span>\r\n      </Form.Item>\r\n      {\r\n        docType !== \"act\" ?\r\n          <Fragment>\r\n            {\r\n              docType === \"contract\" || docType === \"empowerment\"\r\n                ? null\r\n                : <Form.Item>\r\n                  <Form.Item\r\n                    key=\"seler-account-vatreg\"\r\n                    name=\"sellerVatRegCode\"\r\n                    initialValue={regCode}>\r\n                    <Input\r\n                      size=\"large\"\r\n                      placeholder={t(\"QQS tolovchi registratsiya raqami\")} />\r\n                  </Form.Item>\r\n                  <span className=\"custom-input-label-1\">{t(\"QQS tolovchi registratsiya raqami\")}</span>\r\n                </Form.Item>\r\n            }\r\n\r\n            <Row justify=\"space-between\">\r\n              <Col md={11} >\r\n                <Form.Item>\r\n                  <Form.Item\r\n                    key=\"seler-account\"\r\n                    name=\"sellerAccount\"\r\n                    initialValue={bank_account}>\r\n                    <Input\r\n                      size=\"large\"\r\n                      placeholder={t(\"Hisob raqami\")} />\r\n                  </Form.Item>\r\n                  <span className=\"custom-input-label-1\">{t(\"Hisob raqami\")}</span>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col md={11}>\r\n                {\r\n                  docType === \"contract\"\r\n                    ? <Form.Item>\r\n                      <Form.Item\r\n                        key=\"seler-account\"\r\n                        name=\"sellerMobilePhone\"\r\n                        initialValue={phone}>\r\n                        <Input\r\n                          size=\"large\"\r\n                          placeholder={t(\"Telfon raqam\")} />\r\n                      </Form.Item>\r\n                      <span className=\"custom-input-label-1\">{t(\"Telfon raqam\")}</span>\r\n                    </Form.Item>\r\n                    : <Form.Item>\r\n                      <Form.Item\r\n                        key=\"seler-account\"\r\n                        name=\"sellerMfo\"\r\n                        initialValue={mfo}>\r\n                        <Input\r\n                          size=\"large\"\r\n                          placeholder={t(\"MFO\")} />\r\n                      </Form.Item>\r\n                      <span className=\"custom-input-label-1\">{t(\"MFO\")}</span>\r\n                    </Form.Item>\r\n                }\r\n\r\n              </Col>\r\n            </Row>\r\n            <Form.Item>\r\n              <Form.Item\r\n                key=\"seler-account\"\r\n                name=\"sellerAddress\"\r\n                initialValue={address}>\r\n                <Input\r\n                  rules={[{ required: true }]}\r\n                  size=\"large\"\r\n                  placeholder={t(\"Manzil\")} />\r\n              </Form.Item>\r\n              <span className=\"custom-input-label-1\">{t(\"Manzil\")}</span>\r\n            </Form.Item>\r\n            <Row justify=\"space-between\">\r\n              <Col md={11} >\r\n                <Form.Item>\r\n                  <Form.Item\r\n                    key=\"seler-account\"\r\n                    name=\"sellerDirector\"\r\n                    initialValue={director_fio}>\r\n                    <Input\r\n                      size=\"large\"\r\n                      placeholder={t(\"Direktor\")} />\r\n                  </Form.Item>\r\n                  <span className=\"custom-input-label-1\">{t(\"Direktor\")}</span>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col md={11}>\r\n                {\r\n                  docType === \"contract\"\r\n                    ? \r\n                    <Form.Item>\r\n                      <Form.Item\r\n                        key=\"seler-account\"\r\n                        name=\"sellerDirectorTin\"\r\n                        initialValue={director_tin}>\r\n                        <Input\r\n                          size=\"large\"\r\n                          placeholder={t(\"Direktor\") + \" \" + t(\"STIR\")} />\r\n                      </Form.Item>\r\n                      <span className=\"custom-input-label-1\">{t(\"Direktor\")+ \" \" +t(\"STIR\")}</span>\r\n                    </Form.Item>\r\n                    : <Form.Item>\r\n                      <Form.Item\r\n                        key=\"seler-account\"\r\n                        name=\"sellerAccountant\"\r\n                        initialValue={accountant}>\r\n                        <Input\r\n                          size=\"large\"\r\n                          placeholder={t(\"Bosh hisobchi\")} />\r\n                      </Form.Item>\r\n                      <span className=\"custom-input-label-1\">{t(\"Bosh hisobchi\")}</span>\r\n                    </Form.Item>\r\n                }\r\n              </Col>\r\n            </Row>\r\n          </Fragment>\r\n          : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  user: selectCurrentUser\r\n})\r\n\r\nexport default connect(mapStateToProps)(SellerForm);\r\n","C:\\HISOBXONA\\on_doc\\src\\cabinet\\payme-form\\payme-form.component.jsx",[],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\home\\home.component.jsx",["287","288","289"],"C:\\HISOBXONA\\on_doc\\src\\cabinet\\bindrouming-popup\\bindrouming-popup.component.jsx",["290","291"],"C:\\HISOBXONA\\on_doc\\src\\components\\grid-user-fetcher-input\\grid-user-fetcher-input.component.jsx",[],{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","severity":1,"message":"297","line":3,"column":10,"nodeType":"298","messageId":"299","endLine":3,"endColumn":18},{"ruleId":"296","severity":1,"message":"300","line":6,"column":8,"nodeType":"298","messageId":"299","endLine":6,"endColumn":13},{"ruleId":"296","severity":1,"message":"301","line":4,"column":14,"nodeType":"298","messageId":"299","endLine":4,"endColumn":21},{"ruleId":"302","severity":1,"message":"303","line":27,"column":7,"nodeType":"304","endLine":27,"endColumn":9,"suggestions":"305"},{"ruleId":"296","severity":1,"message":"306","line":2,"column":10,"nodeType":"298","messageId":"299","endLine":2,"endColumn":30},{"ruleId":"296","severity":1,"message":"307","line":2,"column":32,"nodeType":"298","messageId":"299","endLine":2,"endColumn":42},{"ruleId":"296","severity":1,"message":"308","line":15,"column":9,"nodeType":"298","messageId":"299","endLine":15,"endColumn":15},{"ruleId":"296","severity":1,"message":"309","line":22,"column":26,"nodeType":"298","messageId":"299","endLine":22,"endColumn":41},{"ruleId":"302","severity":1,"message":"310","line":44,"column":8,"nodeType":"304","endLine":44,"endColumn":10,"suggestions":"311"},{"ruleId":"296","severity":1,"message":"308","line":12,"column":9,"nodeType":"298","messageId":"299","endLine":12,"endColumn":15},{"ruleId":"292","replacedBy":"312"},{"ruleId":"294","replacedBy":"313"},{"ruleId":"292","replacedBy":"314"},{"ruleId":"294","replacedBy":"315"},{"ruleId":"292","replacedBy":"316"},{"ruleId":"294","replacedBy":"317"},{"ruleId":"296","severity":1,"message":"318","line":27,"column":14,"nodeType":"298","messageId":"299","endLine":27,"endColumn":18},{"ruleId":"302","severity":1,"message":"319","line":86,"column":6,"nodeType":"304","endLine":86,"endColumn":8,"suggestions":"320"},{"ruleId":"321","severity":1,"message":"322","line":92,"column":14,"nodeType":"323","messageId":"324","endLine":92,"endColumn":46},{"ruleId":"321","severity":1,"message":"322","line":93,"column":15,"nodeType":"323","messageId":"324","endLine":93,"endColumn":48},{"ruleId":"321","severity":1,"message":"322","line":96,"column":14,"nodeType":"323","messageId":"324","endLine":96,"endColumn":58},{"ruleId":"296","severity":1,"message":"325","line":119,"column":9,"nodeType":"298","messageId":"299","endLine":119,"endColumn":19},{"ruleId":"296","severity":1,"message":"326","line":1,"column":8,"nodeType":"298","messageId":"299","endLine":1,"endColumn":14},{"ruleId":"327","severity":1,"message":"328","line":106,"column":13,"nodeType":"329","messageId":"330","endLine":116,"endColumn":14},{"ruleId":"327","severity":1,"message":"328","line":120,"column":13,"nodeType":"329","messageId":"330","endLine":132,"endColumn":14},{"ruleId":"327","severity":1,"message":"328","line":135,"column":13,"nodeType":"329","messageId":"330","endLine":154,"endColumn":14},{"ruleId":"327","severity":1,"message":"328","line":158,"column":13,"nodeType":"329","messageId":"330","endLine":176,"endColumn":14},{"ruleId":"296","severity":1,"message":"331","line":209,"column":7,"nodeType":"298","messageId":"299","endLine":209,"endColumn":29},{"ruleId":"332","severity":1,"message":"333","line":269,"column":31,"nodeType":"323","messageId":"334","endLine":269,"endColumn":32,"suggestions":"335"},{"ruleId":"292","replacedBy":"336"},{"ruleId":"294","replacedBy":"337"},{"ruleId":"338","severity":1,"message":"339","line":168,"column":22,"nodeType":"340","messageId":"341","endLine":168,"endColumn":24},{"ruleId":"296","severity":1,"message":"342","line":81,"column":10,"nodeType":"298","messageId":"299","endLine":81,"endColumn":22},{"ruleId":"302","severity":1,"message":"343","line":117,"column":6,"nodeType":"304","endLine":117,"endColumn":74,"suggestions":"344"},{"ruleId":"345","severity":1,"message":"346","line":443,"column":9,"nodeType":"347","endLine":443,"endColumn":73},{"ruleId":"296","severity":1,"message":"348","line":6,"column":53,"nodeType":"298","messageId":"299","endLine":6,"endColumn":59},{"ruleId":"302","severity":1,"message":"349","line":60,"column":6,"nodeType":"304","endLine":60,"endColumn":8,"suggestions":"350"},{"ruleId":"321","severity":1,"message":"322","line":66,"column":14,"nodeType":"323","messageId":"324","endLine":66,"endColumn":46},{"ruleId":"321","severity":1,"message":"322","line":67,"column":15,"nodeType":"323","messageId":"324","endLine":67,"endColumn":48},{"ruleId":"321","severity":1,"message":"322","line":70,"column":14,"nodeType":"323","messageId":"324","endLine":70,"endColumn":58},{"ruleId":"338","severity":1,"message":"339","line":210,"column":25,"nodeType":"340","messageId":"341","endLine":210,"endColumn":27},{"ruleId":"296","severity":1,"message":"351","line":3,"column":10,"nodeType":"298","messageId":"299","endLine":3,"endColumn":19},{"ruleId":"296","severity":1,"message":"352","line":3,"column":21,"nodeType":"298","messageId":"299","endLine":3,"endColumn":28},{"ruleId":"296","severity":1,"message":"353","line":6,"column":10,"nodeType":"298","messageId":"299","endLine":6,"endColumn":31},{"ruleId":"302","severity":1,"message":"354","line":34,"column":8,"nodeType":"304","endLine":34,"endColumn":23,"suggestions":"355"},{"ruleId":"302","severity":1,"message":"356","line":45,"column":8,"nodeType":"304","endLine":45,"endColumn":10,"suggestions":"357"},{"ruleId":"338","severity":1,"message":"339","line":98,"column":31,"nodeType":"340","messageId":"341","endLine":98,"endColumn":33},{"ruleId":"358","severity":1,"message":"359","line":168,"column":42,"nodeType":"298","messageId":"360","endLine":168,"endColumn":47},{"ruleId":"361","severity":1,"message":"362","line":140,"column":9,"nodeType":"363","messageId":"341","endLine":142,"endColumn":6},{"ruleId":"296","severity":1,"message":"364","line":144,"column":9,"nodeType":"298","messageId":"299","endLine":144,"endColumn":12},{"ruleId":"296","severity":1,"message":"348","line":5,"column":53,"nodeType":"298","messageId":"299","endLine":5,"endColumn":59},{"ruleId":"296","severity":1,"message":"365","line":21,"column":30,"nodeType":"298","messageId":"299","endLine":21,"endColumn":50},{"ruleId":"296","severity":1,"message":"366","line":21,"column":52,"nodeType":"298","messageId":"299","endLine":21,"endColumn":72},{"ruleId":"296","severity":1,"message":"367","line":22,"column":9,"nodeType":"298","messageId":"299","endLine":22,"endColumn":29},{"ruleId":"296","severity":1,"message":"368","line":22,"column":31,"nodeType":"298","messageId":"299","endLine":22,"endColumn":51},{"ruleId":"302","severity":1,"message":"369","line":72,"column":6,"nodeType":"304","endLine":72,"endColumn":8,"suggestions":"370"},{"ruleId":"321","severity":1,"message":"322","line":78,"column":14,"nodeType":"323","messageId":"324","endLine":78,"endColumn":46},{"ruleId":"321","severity":1,"message":"322","line":79,"column":15,"nodeType":"323","messageId":"324","endLine":79,"endColumn":48},{"ruleId":"321","severity":1,"message":"322","line":82,"column":14,"nodeType":"323","messageId":"324","endLine":82,"endColumn":58},{"ruleId":"302","severity":1,"message":"371","line":228,"column":5,"nodeType":"304","endLine":228,"endColumn":11,"suggestions":"372"},{"ruleId":"338","severity":1,"message":"339","line":233,"column":25,"nodeType":"340","messageId":"341","endLine":233,"endColumn":27},{"ruleId":"296","severity":1,"message":"373","line":1,"column":15,"nodeType":"298","messageId":"299","endLine":1,"endColumn":19},{"ruleId":"302","severity":1,"message":"374","line":45,"column":8,"nodeType":"304","endLine":45,"endColumn":16,"suggestions":"375"},{"ruleId":"338","severity":1,"message":"339","line":57,"column":42,"nodeType":"340","messageId":"341","endLine":57,"endColumn":44},{"ruleId":"302","severity":1,"message":"376","line":70,"column":8,"nodeType":"304","endLine":70,"endColumn":10,"suggestions":"377"},{"ruleId":"296","severity":1,"message":"378","line":187,"column":9,"nodeType":"298","messageId":"299","endLine":187,"endColumn":18},{"ruleId":"296","severity":1,"message":"379","line":188,"column":9,"nodeType":"298","messageId":"299","endLine":188,"endColumn":25},{"ruleId":"296","severity":1,"message":"380","line":189,"column":9,"nodeType":"298","messageId":"299","endLine":189,"endColumn":23},{"ruleId":"296","severity":1,"message":"381","line":192,"column":9,"nodeType":"298","messageId":"299","endLine":192,"endColumn":20},{"ruleId":"296","severity":1,"message":"382","line":236,"column":7,"nodeType":"298","messageId":"299","endLine":236,"endColumn":21},{"ruleId":"296","severity":1,"message":"383","line":4,"column":8,"nodeType":"298","messageId":"299","endLine":4,"endColumn":13},{"ruleId":"296","severity":1,"message":"384","line":10,"column":8,"nodeType":"298","messageId":"299","endLine":10,"endColumn":17},{"ruleId":"338","severity":1,"message":"339","line":21,"column":16,"nodeType":"340","messageId":"341","endLine":21,"endColumn":18},{"ruleId":"296","severity":1,"message":"383","line":2,"column":8,"nodeType":"298","messageId":"299","endLine":2,"endColumn":13},{"ruleId":"296","severity":1,"message":"385","line":4,"column":10,"nodeType":"298","messageId":"299","endLine":4,"endColumn":19},{"ruleId":"296","severity":1,"message":"386","line":7,"column":10,"nodeType":"298","messageId":"299","endLine":7,"endColumn":14},{"ruleId":"296","severity":1,"message":"387","line":1,"column":17,"nodeType":"298","messageId":"299","endLine":1,"endColumn":21},{"ruleId":"302","severity":1,"message":"388","line":33,"column":8,"nodeType":"304","endLine":33,"endColumn":10,"suggestions":"389"},"no-native-reassign",["390"],"no-negated-in-lhs",["391"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'Divider' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'form' and 'notificationId'. Either include them or remove the dependency array.","ArrayExpression",["392"],"'EyeInvisibleOutlined' is defined but never used.","'EyeTwoTone' is defined but never used.","'Option' is assigned a value but never used.","'setKeyIsLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'eKeys' and 't'. Either include them or remove the dependency array. You can also do a functional update 'setEKeys(e => ...)' if you only need 'eKeys' in the 'setEKeys' call.",["393"],["390"],["391"],["390"],["391"],["390"],["391"],"'i18n' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'duplicateId', 'facturaId', 'form', 'user.tin', and 'user.username'. Either include them or remove the dependency array.",["394"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'formValues' is assigned a value but never used.","'moment' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'FACTURA_PRODUCT_FIELDS' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\/.","unnecessaryEscape",["395","396"],["390"],["391"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'filteredInfo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'modelName'. Either include it or remove the dependency array.",["397"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Select' is defined but never used.","React Hook useEffect has missing dependencies: 'actId' and 'form'. Either include them or remove the dependency array.",["398"],"'ENTER_KEY' is defined but never used.","'TAB_KEY' is defined but never used.","'convertProductsToGrid' is defined but never used.","React Hook useEffect has a missing dependency: 'grid'. Either include it or remove the dependency array. You can also do a functional update 'setGrid(g => ...)' if you only need 'grid' in the 'setGrid' call.",["399"],"React Hook useEffect has missing dependencies: 'loadProducts', 'user.tin', and 'user.username'. Either include them or remove the dependency array. If 'loadProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["400"],"no-self-assign","'total' is assigned to itself.","selfAssignment","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'emp' is assigned a value but never used.","'ConvertEmpDataToForm' is defined but never used.","'ConvertEmpDataToGrid' is defined but never used.","'ConvertGridToProduct' is defined but never used.","'ConvertProductToGrid' is defined but never used.","React Hook useEffect has missing dependencies: 'empowermentId', 'form', and 'user.tin'. Either include them or remove the dependency array.",["401"],"React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.",["402"],"'call' is defined but never used.","React Hook useEffect has a missing dependency: 'setChoosenCompany'. Either include it or remove the dependency array.",["403"],"React Hook useEffect has missing dependencies: 'setChoosenCompany', 'setUserComps', and 'user.username'. Either include them or remove the dependency array. If 'setUserComps' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["404"],"'FacturaId' is assigned a value but never used.","'FacturaProductId' is assigned a value but never used.","'ForeignCompany' is assigned a value but never used.","'ProductList' is assigned a value but never used.","'formProperties' is assigned a value but never used.","'axios' is defined but never used.","'PaymeForm' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'Spin' is defined but never used.","React Hook useEffect has missing dependencies: 'user.tin' and 'user.username'. Either include them or remove the dependency array.",["405"],"no-global-assign","no-unsafe-negation",{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},{"desc":"410","fix":"411"},{"messageId":"412","fix":"413","desc":"414"},{"messageId":"415","fix":"416","desc":"417"},{"desc":"418","fix":"419"},{"desc":"420","fix":"421"},{"desc":"422","fix":"423"},{"desc":"424","fix":"425"},{"desc":"426","fix":"427"},{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},"Update the dependencies array to be: [form, notificationId]",{"range":"436","text":"437"},"Update the dependencies array to be: [eKeys, t]",{"range":"438","text":"439"},"Update the dependencies array to be: [duplicateId, facturaId, form, user.tin, user.username]",{"range":"440","text":"441"},"removeEscape",{"range":"442","text":"443"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"444","text":"445"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [pagination, dataSourcePath, searchText, searchedColumn, reRenderer, modelName]",{"range":"446","text":"447"},"Update the dependencies array to be: [actId, form]",{"range":"448","text":"449"},"Update the dependencies array to be: [grid, initialValues]",{"range":"450","text":"451"},"Update the dependencies array to be: [loadProducts, user.tin, user.username]",{"range":"452","text":"453"},"Update the dependencies array to be: [empowermentId, form, user.tin]",{"range":"454","text":"455"},"Update the dependencies array to be: [getProducts, grid]",{"range":"456","text":"457"},"Update the dependencies array to be: [chosen, setChoosenCompany]",{"range":"458","text":"459"},"Update the dependencies array to be: [setChoosenCompany, setUserComps, user.username]",{"range":"460","text":"461"},"Update the dependencies array to be: [user.tin, user.username]",{"range":"462","text":"463"},[787,789],"[form, notificationId]",[1768,1770],"[eKeys, t]",[3444,3446],"[duplicateId, facturaId, form, user.tin, user.username]",[11532,11533],"",[11532,11532],"\\",[5011,5079],"[pagination, dataSourcePath, searchText, searchedColumn, reRenderer, modelName]",[2411,2413],"[actId, form]",[1305,1320],"[grid, initialValues]",[1602,1604],"[loadProducts, user.tin, user.username]",[2864,2866],"[empowermentId, form, user.tin]",[6893,6899],"[getProducts, grid]",[1376,1384],"[chosen, setChoosenCompany]",[2145,2147],"[setChoosenCompany, setUserComps, user.username]",[1181,1183],"[user.tin, user.username]"]